<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.agile.infra.mapper.IssueTypeMapper">

    <select id="queryBySchemeId" resultType="io.choerodon.agile.infra.dto.IssueTypeDTO">
        select
        t1.id,
        t1.organization_id,
        t1.object_version_number,
        t1.created_by,
        t1.creation_date,
        t1.last_updated_by,
        t1.last_update_date,
        t1.type_code,
        t1.project_id,
        t1.referenced,
        t1.source,
        t1.reference_id,
        t1.is_initialize as initialize,
        ifnull(t3.enabled, 1) as enabled,
        ifnull(t3.name, t1.name) as name,
        ifnull(t3.description, t1.description) as description,
        ifnull(t3.icon, t1.icon) as icon,
        ifnull(t3.colour, t1.colour) as colour,
        t2.sequence
        from fd_issue_type t1
        left join fd_issue_type_scheme_config t2 on t2.issue_type_id = t1.id
        left join fd_issue_type_extend t3 on t1.id = t3.issue_type_id and t3.project_id = #{projectId}
        WHERE 1=1
        <choose>
            <when test="projectId == 0">
                and t1.organization_id = #{organizationId}
                and t1.project_id = #{projectId}
            </when>
            <otherwise>
                and t1.id in (
                select t4.id
                from fd_issue_type t4
                where t4.organization_id = #{organizationId}
                and t4.project_id = #{projectId}
                union
                select t5.id
                from fd_issue_type t5
                where t5.organization_id = #{organizationId}
                and t5.project_id = 0
                and t5.source = 'system'
                )
            </otherwise>
        </choose>
        <if test="schemeId != null">
            AND t2.scheme_id = #{schemeId}
        </if>
        <if test="onlyEnabled">
            and ifnull(t3.enabled, 1) = 1
        </if>
        order by t3.rank desc, t1.id desc
    </select>

    <select id="selectSystemIssueTypeByOrganizationIds" resultType="io.choerodon.agile.infra.dto.IssueTypeDTO">
        select * from fd_issue_type
        where organization_id in
        <foreach collection="organizationIds" item="organizationId" open="(" close=")" separator=",">
            #{organizationId}
        </foreach>
        and source = 'system'
        and project_id = 0
    </select>

    <select id="selectByOptions" resultType="io.choerodon.agile.api.vo.IssueTypeVO">
        select
        t3.*
        from (
            select
            t1.id,
            t1.organization_id,
            t1.object_version_number,
            t1.created_by,
            t1.creation_date,
            t1.last_updated_by,
            t1.last_update_date,
            t1.type_code,
            t1.project_id,
            t1.referenced,
            t1.source,
            t1.reference_id,
            t1.is_initialize as initialize,
            ifnull(t2.enabled, 1) as enabled,
            ifnull(t2.name, t1.name) as name,
            ifnull(t2.description, t1.description) as description,
            ifnull(t2.icon, t1.icon) as icon,
            ifnull(t2.colour, t1.colour) as colour,
            t2.rank as rank
            from fd_issue_type t1
            left join fd_issue_type_extend t2
            on t1.id = t2.issue_type_id and t2.project_id = #{projectId}
            where t1.organization_id = #{organizationId}
            <choose>
                <when test="projectId == null or projectId == 0">
                    and t1.project_id = 0
                </when>
                <otherwise>
                    and t1.id in (
                    select t2.id
                    from fd_issue_type t2
                    where t2.organization_id = #{organizationId}
                    and t2.project_id = #{projectId}
                    union
                    select t3.id
                    from fd_issue_type t3
                    where t3.organization_id = #{organizationId}
                    and t3.project_id = 0
                    and t3.source = 'system'
                    )
                </otherwise>
            </choose>
            <if test="issueTypeSearchVO != null">
                <if test="issueTypeSearchVO.typeCodes != null and issueTypeSearchVO.typeCodes.size > 0">
                    and t1.type_code in
                    <foreach collection="issueTypeSearchVO.typeCodes" item="item" open="(" close=")" separator=",">
                        #{item}
                    </foreach>
                </if>
                <if test="issueTypeSearchVO.issueTypeIds != null and issueTypeSearchVO.issueTypeIds.size > 0">
                    and t1.id in
                    <foreach collection="issueTypeSearchVO.issueTypeIds" item="item" open="(" close=")" separator=",">
                        #{item}
                    </foreach>
                </if>
            </if>
        ) t3
        where 1=1
        <if test="issueTypeSearchVO != null">
            <if test="issueTypeSearchVO.name != null">
                and t3.name like concat('%',#{issueTypeSearchVO.name},'%')
            </if>
            <if test="issueTypeSearchVO.description != null">
                and t3.description like concat('%',#{issueTypeSearchVO.description},'%')
            </if>
            <if test="issueTypeSearchVO.source != null">
                and t3.source = #{issueTypeSearchVO.source}
            </if>
            <if test="issueTypeSearchVO.enabled != null">
                and t3.enabled = #{issueTypeSearchVO.enabled}
            </if>
            <if test="issueTypeSearchVO.referenced != null">
                and t3.referenced = #{issueTypeSearchVO.referenced}
            </if>
            <if test="issueTypeSearchVO.param != null">
                and (
                t3.name like concat('%',#{issueTypeSearchVO.param},'%')
                or t3.description like concat('%',#{issueTypeSearchVO.param},'%')
                or t3.source = #{issueTypeSearchVO.source}
                )
            </if>
        </if>
        order by t3.rank desc, t3.id desc
    </select>

    <select id="selectByReferenceId" resultType="io.choerodon.agile.infra.dto.IssueTypeDTO">
        select
        t1.id,
        t1.reference_id,
        t1.project_id
        from fd_issue_type t1
        where t1.organization_id = #{organizationId}
        and t1.project_id != 0
        and t1.reference_id in
        <foreach collection="ids" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <select id="selectEnableReference" resultType="io.choerodon.agile.api.vo.IssueTypeVO">
        select
        t2.*
        from fd_issue_type t2
        where t2.organization_id = #{organizationId}
        and t2.project_id = 0
        and t2.source = 'organization'
        and t2.referenced = 1
        and t2.id not in (
            select
            t1.reference_id
            from fd_issue_type t1
            where t1.organization_id = #{organizationId}
            and t1.project_id = #{projectId}
            and t1.reference_id is not null
        )
    </select>

    <select id="selectWithAlias" resultType="io.choerodon.agile.infra.dto.IssueTypeDTO">
        select
        t1.id,
        t1.organization_id,
        t1.object_version_number,
        t1.created_by,
        t1.creation_date,
        t1.last_updated_by,
        t1.last_update_date,
        t1.type_code,
        t1.project_id,
        t1.referenced,
        t1.source,
        t1.reference_id,
        t1.is_initialize as initialize,
        ifnull(t2.enabled, 1) as enabled,
        ifnull(t2.name, t1.name) as name,
        ifnull(t2.description, t1.description) as description,
        ifnull(t2.icon, t1.icon) as icon,
        ifnull(t2.colour, t1.colour) as colour
        from fd_issue_type t1
        left join fd_issue_type_extend t2
        on t1.id = t2.issue_type_id and t2.project_id = #{projectId}
        where t1.id = #{issueTypeId}
    </select>

    <resultMap id="issueTypeDTO" type="io.choerodon.agile.infra.dto.IssueTypeDTO">
        <id column="id" property="id"/>
        <result column="icon" property="icon"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="organization_id" property="organizationId"/>
        <result column="colour" property="colour"/>
        <result column="type_code" property="typeCode"/>
        <result column="is_initialize" property="initialize"/>
        <result column="project_id" property="projectId"/>
        <result column="referenced" property="referenced"/>
        <result column="reference_id" property="referenceId"/>
        <result column="source" property="source"/>
        <result column="object_version_number" property="objectVersionNumber"/>
        <collection property="issueTypeExtends" ofType="io.choerodon.agile.infra.dto.IssueTypeExtendDTO">
            <id column="extend_id" property="id"/>
            <result column="extend_issue_type_id" property="issueTypeId"/>
            <result column="extend_project_id" property="projectId"/>
            <result column="extend_organization_id" property="organizationId"/>
            <result column="extend_enabled" property="enabled"/>
            <result column="extend_name" property="name"/>
            <result column="extend_description" property="description"/>
            <result column="extend_icon" property="icon"/>
            <result column="extend_colour" property="colour"/>
        </collection>
    </resultMap>

    <select id="selectWithAliasByIds" resultMap="issueTypeDTO">
        select
        fit.*,
        fite.id as extend_id,
        fite.issue_type_id as extend_issue_type_id,
        fite.project_id as extend_project_id,
        fite.organization_id as extend_organization_id,
        fite.enabled as extend_enabled,
        fite.name as extend_name,
        fite.description as extend_description,
        fite.icon as extend_icon,
        fite.colour as extend_colour
        from fd_issue_type fit
        left join fd_issue_type_extend fite
        on (
        fite.organization_id = #{organizationId}
        and fite.project_id in
        <foreach collection="projectIds" item="projectId" open="(" close=")" separator=",">
            #{projectId}
        </foreach>
        and fit.id = fite.issue_type_id
        )
        where fit.id in
        <foreach collection="issueTypeIds" item="issueTypeId" open="(" close=")" separator=",">
            #{issueTypeId}
        </foreach>
    </select>

    <select id="selectByProjectIds" resultType="io.choerodon.agile.api.vo.IssueTypeVO">
        select
            t1.id,
            t1.organization_id,
            t1.object_version_number,
            t1.created_by,
            t1.creation_date,
            t1.last_updated_by,
            t1.last_update_date,
            t1.type_code,
            ifnull(t2.project_id, t1.project_id) as project_id,
            t1.referenced,
            t1.source,
            t1.reference_id,
            t1.is_initialize as initialize,
            ifnull(t2.enabled, 1) as enabled,
            ifnull(t2.name, t1.name) as name,
            ifnull(t2.description, t1.description) as description,
            ifnull(t2.icon, t1.icon) as icon,
            ifnull(t2.colour, t1.colour) as colour
        from fd_issue_type t1
        left join fd_issue_type_extend t2 on t1.id = t2.issue_type_id
        where t1.organization_id = #{organizationId}
        and t1.id in (
            select t2.id
            from fd_issue_type t2
            where t2.organization_id = #{organizationId}
            and t2.project_id in
            <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                #{projectId}
            </foreach>
            union
            select t3.id
            from fd_issue_type t3
            where t3.organization_id = #{organizationId}
            and t3.project_id = 0
            and t3.source = 'system'
        )
        UNION
        (
            SELECT
                t1.id,
                t1.organization_id,
                t1.object_version_number,
                t1.created_by,
                t1.creation_date,
                t1.last_updated_by,
                t1.last_update_date,
                t1.type_code,
                t1.project_id,
                t1.referenced,
                t1.source,
                t1.reference_id,
                t1.is_initialize AS initialize,
                1 as enabled,
                t1.NAME AS NAME,
                t1.description AS description,
                t1.icon AS icon,
                t1.colour AS colour
            FROM
                fd_issue_type t1
            JOIN fd_issue_type_extend t2 ON t1.id = t2.issue_type_id
            WHERE
                t1.organization_id = #{organizationId}
                AND t1.project_id = 0
                AND t1.source = 'system'
        )
    </select>
</mapper>
