<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.agile.infra.mapper.IssueMapper">

    <resultMap type="io.choerodon.agile.infra.dto.business.IssueDetailDTO" id="issueDetail">
        <id column="issue_id" property="issueId"/>
        <id column="issue_num_splicing" property="issueNum"/>
        <id column="status_id" property="statusId"/>
        <id column="type_code" property="typeCode"/>
        <id column="summary" property="summary"/>
        <id column="reporter_id" property="reporterId"/>
        <id column="description" property="description"/>
        <id column="assignee_id" property="assigneeId"/>
        <id column="project_id" property="projectId"/>
        <id column="epic_id" property="epicId"/>
        <id column="parent_issue_id" property="parentIssueId"/>
        <id column="story_points" property="storyPoints"/>
        <id column="estimate_time" property="estimateTime"/>
        <id column="remaining_time" property="remainingTime"/>
        <id column="epic_name" property="epicName"/>
        <id column="issue_epic_name" property="issueEpicName"/>
        <id column="color_value" property="color"/>
        <id column="epic_color" property="epicColor"/>
        <id column="parent_issue_num" property="parentIssueNum"/>
        <id column="parent_issue_summary" property="parentIssueSummary"/>
        <id column="parent_issue_description" property="parentIssueDescription"/>
        <id column="object_version_number" property="objectVersionNumber"/>
        <id column="priority_id" property="priorityId"/>
        <id column="issue_type_id" property="issueTypeId"/>
        <id column="apply_type" property="applyType"/>
        <id column="relate_issue_id" property="relateIssueId"/>
        <id column="relate_issue_num" property="relateIssueNum"/>
        <id column="parent_relate_num" property="parentRelateNum"/>
        <id column="parent_relate_description" property="parentRelateDescription"/>
        <id column="main_responsible_id" property="mainResponsibleId"/>
        <id column="environment" property="environment"/>
        <id column="last_updated_by" property="lastUpdatedBy"/>
        <result property="estimatedStartTime" column="estimated_start_time"/>
        <result property="estimatedEndTime" column="estimated_end_time"/>
        <result property="actualStartTime" column="actual_start_time"/>
        <result property="actualEndTime" column="actual_end_time"/>
        <association property="activeSprint" column="issue_id" select="queryActiveSprintNameByIssueId"/>
        <collection property="versionIssueRelDTOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dto.business.IssueDetailDTO"
                    select="queryVersionIssueRelByIssueId"/>
        <collection property="closeSprint" column="issue_id"
                    ofType="io.choerodon.agile.infra.dto.business.IssueDetailDTO"
                    select="queryCloseSprintNameByIssueId"/>
        <collection property="labelIssueRelDTOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dto.business.IssueDetailDTO"
                    select="queryLabelIssueByIssueId"/>
        <collection property="componentIssueRelDTOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dto.business.IssueDetailDTO"
                    select="queryComponentIssueRelByIssueId"/>
        <collection property="issueCommentDTOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dto.business.IssueDetailDTO"
                    select="queryIssueCommentByIssueId"/>
        <collection property="issueAttachmentDTOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dto.business.IssueDetailDTO"
                    select="queryIssueAttachmentByIssueId"/>
        <collection property="subIssueDTOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dto.business.IssueDetailDTO"
                    select="querySubIssueByIssueId"/>
        <collection property="subBugDOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dto.business.IssueDetailDTO"
                    select="querySubBugByIssueId"/>
        <collection property="tags" column="issue_id"
                    ofType="io.choerodon.agile.api.vo.business.TagVO"
                    select="queryTagsByIssueId"/>
        <collection property="participantIds" column="issue_id"
                    ofType="java.lang.Long"
                    select="queryParticipantByIssueId"/>
    </resultMap>

    <resultMap id="issueSearch" type="io.choerodon.agile.infra.dto.business.IssueSearchDTO">
        <id property="issueId" column="issue_id"/>
        <id property="issueNum" column="issue_num"/>
        <id property="typeCode" column="type_code"/>
        <id property="summary" column="summary"/>
        <id property="reporterId" column="reporter_id"/>
        <id property="description" column="description"/>
        <id property="assigneeId" column="assignee_id"/>
        <id property="featureId" column="feature_id"/>
        <id property="projectId" column="project_id"/>
        <id property="epicId" column="epic_id"/>
        <id property="sprintId" column="sprint_id"/>
        <id property="storyPoints" column="story_points"/>
        <id property="statusId" column="status_id"/>
        <id property="issueTypeId" column="issue_type_id"/>
        <id property="priorityId" column="priority_id"/>
        <id property="objectVersionNumber" column="object_version_number"/>
        <id property="epicName" column="issue_epic_name"/>
        <id property="color" column="color"/>
        <collection property="versionIds" autoMapping="true" ofType="java.lang.Long">
            <id column="version_id"/>
        </collection>
        <collection property="versionNames" autoMapping="true" ofType="java.lang.String">
            <id column="version_name"/>
        </collection>
    </resultMap>

    <resultMap type="io.choerodon.agile.infra.dto.IssueComponentDetailInfoDTO" id="issueComponentDetail">
        <id column="issue_id" property="issueId"/>
        <id column="type_code" property="typeCode"/>
        <id column="summary" property="summary"/>
        <id column="status_id" property="statusId"/>
        <id column="assignee_id" property="assigneeId"/>
        <id column="project_id" property="projectId"/>
        <id column="issue_num" property="issueNum"/>
        <id column="reporter_id" property="reporterId"/>
        <id column="last_update_date" property="lastUpdateDate"/>
        <id column="creation_date" property="creationDate"/>
        <id column="epic_name" property="epicName"/>
        <id column="epic_color" property="epicColor"/>
        <id column="description" property="description"/>
        <id column="priority_id" property="priorityId"/>
        <id column="issue_type_id" property="issueTypeId"/>
        <collection property="versionIssueRelDTOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dto.IssueComponentDetailInfoDTO"
                    select="queryVersionIssueRelByIssueId"/>
        <collection property="labelIssueRelDTOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dto.IssueComponentDetailInfoDTO"
                    select="queryLabelIssueByIssueId"/>
        <collection property="componentIssueRelDTOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dto.IssueComponentDetailInfoDTO"
                    select="queryComponentIssueRelByIssueId"/>
    </resultMap>

    <delete id="removeFromSprint">
        DELETE
        FROM agile_issue_sprint_rel
        WHERE project_id = #{projectId} AND sprint_id = #{sprintId}
    </delete>

    <select id="queryIssueDetail" resultMap="issueDetail">
        SELECT
            ai.*,
            ai2.epic_name                                                                    AS issue_epic_name,
            alv2.name                                                                        AS epic_color,
            alv3.name                                                                        AS color_value,
            IF(ai3.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai3.issue_num)) AS parent_issue_num,
            ai3.summary                                                                      AS parent_issue_summary,
            IF(ai4.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai4.issue_num)) AS relate_issue_num,
            ai4.summary                                                                      AS parent_relate_summary,
            CONCAT_WS('-', api.project_code, ai.issue_num)                                   AS issue_num_splicing,
            ai.estimated_start_time,
            ai.estimated_end_time,
            ai3.description as parent_issue_description,
            ai4.description as parent_relate_description,
            ai.main_responsible_id,
            ai.environment,
            ai.actual_start_time,
            ai.actual_end_time
        FROM agile_issue ai
            LEFT JOIN agile_issue ai2 ON ai2.issue_id = ai.epic_id
            LEFT JOIN lookup_value alv2 ON ai2.color_code = alv2.value_code
            LEFT JOIN lookup_value alv3 ON ai.color_code = alv3.value_code
            LEFT JOIN agile_issue ai3 ON ai3.issue_id = ai.parent_issue_id
            LEFT JOIN agile_issue ai4 ON ai4.issue_id = ai.relate_issue_id
            LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE ai.issue_id = #{issueId} AND ai.project_id = #{projectId}
    </select>

    <select id="queryVersionIssueRelByIssueId" resultType="io.choerodon.agile.infra.dto.VersionIssueRelDTO">
        SELECT
            avir.*,
            apr.name,
            apr.status_code
        FROM agile_version_issue_rel avir LEFT JOIN agile_product_version apr ON avir.version_id = apr.version_id
        WHERE avir.issue_id = #{issueId}
    </select>

    <select id="queryVersionNameByIssueIds" resultType="io.choerodon.agile.infra.dto.VersionIssueRelDTO">
        SELECT
        avir.*,
        apr.name
        FROM agile_version_issue_rel avir LEFT JOIN agile_product_version apr ON avir.version_id = apr.version_id
        WHERE avir.project_id in
        <foreach item="item" index="index" collection="projectIds" open="(" separator="," close=")">
            #{item}
        </foreach>
        <if test='relationType != null and relationType != ""'>
            AND avir.relation_type = #{relationType}
        </if>
        AND avir.issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </select>

    <select id="queryCloseSprintNameByIssueId" resultType="io.choerodon.agile.infra.dto.SprintNameDTO">
        SELECT
            asp.sprint_id,
            asp.sprint_name
        FROM agile_issue_sprint_rel aisr, agile_sprint asp
        WHERE aisr.issue_id = #{issueId} AND aisr.sprint_id = asp.sprint_id AND asp.status_code = 'closed'
    </select>

    <select id="querySprintNameByIssueId" resultType="io.choerodon.agile.infra.dto.SprintNameDTO">
        SELECT
            asp.sprint_id,
            asp.sprint_name
        FROM agile_issue_sprint_rel aisr, agile_sprint asp
        WHERE aisr.issue_id = #{issueId} AND aisr.sprint_id = asp.sprint_id
    </select>

    <select id="querySprintNameByIssueIds" resultType="io.choerodon.agile.infra.dto.SprintNameDTO">
        SELECT
        aisr.issue_id, asp.sprint_name
        FROM agile_issue_sprint_rel aisr, agile_sprint asp
        WHERE aisr.project_id in
        <foreach item="item" index="index" collection="projectIds" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND aisr.sprint_id = asp.sprint_id
        AND asp.status_code = 'closed'
        AND aisr.issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </select>

    <select id="queryActiveSprintNameByIssueId" resultType="io.choerodon.agile.infra.dto.SprintNameDTO">
        SELECT
            asp.sprint_id,
            asp.sprint_name
        FROM agile_issue_sprint_rel aisr, agile_sprint asp
        WHERE aisr.issue_id = #{issueId} AND aisr.sprint_id = asp.sprint_id AND asp.status_code != 'closed'
    </select>

    <select id="queryLabelIssueByIssueId" resultType="io.choerodon.agile.infra.dto.LabelIssueRelDTO">
        SELECT
            ali.*,
            ail.label_name
        FROM agile_label_issue_rel ali LEFT JOIN agile_issue_label ail ON ali.label_id = ail.label_id
        WHERE ali.issue_id = #{issueId}
    </select>

    <select id="queryLabelIssueByIssueIds" resultType="io.choerodon.agile.infra.dto.LabelIssueRelDTO">
        SELECT
        ali.*,
        ail.label_name
        FROM agile_label_issue_rel ali LEFT JOIN agile_issue_label ail ON ali.label_id = ail.label_id
        WHERE ali.issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
        and ail.project_id in
        <foreach item="item" index="index" collection="projectIds" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="queryComponentIssueByIssueIds" resultType="io.choerodon.agile.infra.dto.ComponentIssueRelDTO">
        SELECT
        acir.*,
        aic.name
        FROM agile_component_issue_rel acir LEFT JOIN agile_issue_component aic ON aic.component_id = acir.component_id
        WHERE acir.issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
        and acir.project_id in
        <foreach item="item" index="index" collection="projectIds" open="(" separator="," close=")">
            #{item}
        </foreach>

    </select>

    <select id="queryComponentIssueRelByIssueId" resultType="io.choerodon.agile.infra.dto.ComponentIssueRelDTO">
        SELECT
            acir.*,
            aic.name
        FROM agile_component_issue_rel acir LEFT JOIN agile_issue_component aic ON aic.component_id = acir.component_id
        WHERE acir.issue_id = #{issueId}
    </select>

    <select id="queryIssueCommentByIssueId" resultType="io.choerodon.agile.infra.dto.IssueCommentDTO">
        SELECT *
        FROM agile_issue_comment
        WHERE issue_id = #{issueId} order by creation_date desc
    </select>

    <select id="queryTagsByIssueId" resultType="io.choerodon.agile.api.vo.business.TagVO">
        select
        distinct
        atir.tag_project_id as project_id,
        atir.app_service_code,
        atir.tag_name
        from agile_tag_issue_rel atir
        where atir.issue_id = #{issueId}
    </select>

    <select id="queryParticipantByIssueId" resultType="java.lang.Long">
        select participant_id from agile_issue_participant_rel
        where issue_id = #{issueId}
    </select>

    <select id="queryIssueAttachmentByIssueId" resultType="io.choerodon.agile.infra.dto.IssueAttachmentDTO">
        SELECT *
        FROM agile_issue_attachment
        WHERE issue_id = #{issueId}
    </select>

    <select id="querySubIssueByIssueId" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        SELECT
            ai.issue_id,
            ai.summary,
            ai.assignee_id,
            ai.remaining_time,
            ai.project_id,
            ai.issue_type_id,
            ai.status_id,
            ai.priority_id,
            CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
            ais.is_completed as completed,
            ai.created_by
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        left join agile_issue_status ais on ais.status_id = ai.status_id and ais.project_id = ai.project_id
        WHERE ai.parent_issue_id = #{issueId}
    </select>

    <select id="querySubBugByIssueId" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        SELECT
            ai.issue_id,
            ai.summary,
            ai.assignee_id,
            ai.remaining_time,
            ai.project_id,
            ai.issue_type_id,
            ai.status_id,
            ai.priority_id,
            ai.object_version_number,
            CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
            ai.created_by
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE ai.relate_issue_id = #{issueId}
    </select>

    <resultMap id="IssueWithSub" type="io.choerodon.agile.infra.dto.business.IssueDTO">
        <id property="issueId" column="issue_id"/>
        <result property="typeCode" column="type_code"/>
        <result property="summary" column="summary"/>
        <result property="priorityId" column="priority_id"/>
        <result property="issueTypeId" column="issue_type_id"/>
        <result property="createdBy" column="created_by"/>
        <result property="lastUpdateDate" column="last_update_date"/>
        <result property="lastUpdatedBy" column="last_updated_by"/>
        <result property="assigneeId" column="assignee_id"/>
        <result property="epicName" column="epic_name"/>
        <result property="epicId" column="epic_id"/>
        <result property="epicColor" column="epic_color"/>
        <result property="reporterId" column="reporter_id"/>
        <result property="projectId" column="issue_project_id"/>
        <result property="statusId" column="status_id"/>
        <result property="issueNum" column="issue_num"/>
        <result property="lastUpdateDate" column="issue_last_update_date"/>
        <result property="remainingTime" column="remaining_time"/>
        <result property="storyPoints" column="story_points"/>
        <result property="parentIssueId" column="parent_issue_id"/>
        <result property="relateIssueId" column="relate_issue_id"/>
        <result property="description" column="description"/>
        <result property="creationDate" column="creation_date"/>
        <result property="estimateTime" column="estimate_time"/>
        <result property="resolution" column="resolution"/>
        <result property="estimatedStartTime" column="estimated_start_time"/>
        <result property="estimatedEndTime" column="estimated_end_time"/>
        <result property="actualStartTime" column="actual_start_time"/>
        <result property="actualEndTime" column="actual_end_time"/>
        <result property="objectVersionNumber" column="object_version_number"/>
        <result property="completed" column="completed"/>
        <result property="mainResponsibleId" column="main_responsible_id"/>
        <result property="estimateTime" column="estimate_time"/>
        <result property="environment" column="environment"/>
        <result property="epicSelfName" column="epic_self_name"/>
        <collection property="versionIssueRelDTOS"
                    ofType="io.choerodon.agile.infra.dto.VersionIssueRelDTO">
            <id property="versionId" column="version_id"/>
            <id property="statusCode" column="version_status_code"/>
            <id property="relationType" column="relation_type"/>
            <id property="issueId" column="version_issue_id"/>
            <id property="projectId" column="version_project_id"/>
            <id property="name" column="version_name"/>
        </collection>
        <collection property="issueSprintDTOS"
                    ofType="io.choerodon.agile.infra.dto.IssueSprintDTO">
            <id property="sprintId" column="sprint_id"/>
            <result property="sprintName" column="sprint_name"/>
            <result property="statusCode" column="sp_status_code"/>
            <result property="startDate" column="sprint_start_date"/>
            <result property="endDate" column="sprint_end_date"/>
            <result property="actualEndDate" column="sprint_actual_end_date"/>
        </collection>
        <collection property="issueComponentBriefDTOS"
                    ofType="io.choerodon.agile.infra.dto.IssueComponentBriefDTO">
            <id property="componentId" column="component_id"/>
            <result property="name" column="component_name"/>
        </collection>
        <collection property="labelIssueRelDTOS"
                    ofType="io.choerodon.agile.infra.dto.LabelIssueRelDTO">
            <id property="labelId" column="label_id"/>
            <result property="labelName" column="label_name"/>
        </collection>
        <collection property="tags"
                    ofType="io.choerodon.agile.api.vo.business.TagVO">
            <id property="tagName" column="tag_name"/>
            <id property="projectId" column="tag_project_id"/>
            <id property="appServiceCode" column="app_service_code"/>
        </collection>
        <collection property="participantIds" column="participant_id" ofType="java.lang.Long">
            <result column="participant_id" />
        </collection>
    </resultMap>

    <select id="queryIssueByIssueIdsAndSubIssueIds" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        select
        *
        from agile_issue
        where issue_id in
        <foreach collection="issueIds" item="issueId" open="(" separator=","
                 close=")">
            #{issueId}
        </foreach>
    </select>

    <select id="queryIssueListWithSubByIssueIds" resultMap="IssueWithSub">
        SELECT
        ai.issue_id,
        ai.type_code,
        ai.summary,
        ai.priority_code,
        ai.assignee_id,
        ai.reporter_id,
        ai.project_id as issue_project_id,
        ai.status_id,
        ai.priority_id,
        ai.issue_type_id,
        ai.created_by,
        ai.last_updated_by,
        ai3.epic_name,
        alv2.name as epic_color,
        ai.epic_id,
        ai.epic_name as epic_self_name,
        ai.creation_date,
        ai.last_update_date as issue_last_update_date,
        apv.version_id,
        apv.status_code as version_status_code,
        apv.name as version_name,
        avir.relation_type,
        avir.project_id as version_project_id,
        avir.issue_id as version_issue_id,
        CONCAT(api.project_code,'-', ai.issue_num) as issue_num,
        aisr.sprint_id,
        asp.status_code as sp_status_code,
        asp.sprint_name,
        aic.name as component_name,
        acir.component_id,
        ail.label_name,
        ail.label_id,
        ai.story_points,
        ai.remaining_time,
        ai.estimate_time,
        <if test="isExcelExported">
            ai.description,
            IF((ais.is_completed = 1), '是', '否') AS resolution,
        </if>
        ai.parent_issue_id,
        ai.relate_issue_id,
        ai.estimated_start_time,
        ai.estimated_end_time,
        ai.actual_start_time,
        ai.actual_end_time,
        ai.object_version_number,
        ais.is_completed as completed,
        ai.main_responsible_id,
        ai.environment,
        atir.tag_project_id,
        atir.app_service_code as app_service_code,
        atir.tag_name as tag_name,
        aipr.participant_id
        FROM agile_issue ai
        left join agile_issue_status ais on ais.status_id = ai.status_id and ais.project_id = ai.project_id
        left join agile_issue ai3 on ai.epic_id = ai3.issue_id
        LEFT JOIN lookup_value alv2 ON ai3.color_code = alv2.value_code
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_version_issue_rel avir on avir.issue_id = ai.issue_id
        left join agile_product_version apv on avir.version_id = apv.version_id
        left join agile_issue_sprint_rel aisr on aisr.issue_id = ai.issue_id
        left join agile_sprint asp on aisr.sprint_id = asp.sprint_id
        left join agile_component_issue_rel acir on acir.issue_id = ai.issue_id
        left join agile_issue_component aic on aic.component_id = acir.component_id
        left join agile_label_issue_rel alir on alir.issue_id = ai.issue_id
        left join agile_issue_label ail on ail.label_id = alir.label_id
        left join agile_tag_issue_rel atir on ai.issue_id = atir.issue_id
        left join agile_issue_participant_rel aipr on ai.issue_id = aipr.issue_id
        WHERE
        ai.issue_id IN
        (
            select aii.issue_id
            from agile_issue aii
            where aii.issue_id in
            <foreach collection="issueIds" item="issueId" open="(" separator=","
                     close=")">
                #{issueId}
            </foreach>
            <if test="withSubIssues">
                or (
                aii.parent_issue_id in
                <foreach collection="issueIds" item="issueId" open="(" separator=","
                         close=")">
                    #{issueId}
                </foreach>
                <if test="childrenIds != null and childrenIds.size > 0">
                    and aii.issue_id in
                    <foreach collection="childrenIds" item="id" open="(" separator=","
                             close=")">
                        #{id}
                    </foreach>
                </if>
                )
                or (
                aii.relate_issue_id in
                <foreach collection="issueIds" item="issueId" open="(" separator=","
                         close=")">
                    #{issueId}
                </foreach>
                <if test="childrenIds != null and childrenIds.size > 0">
                    and aii.issue_id in
                    <foreach collection="childrenIds" item="id" open="(" separator=","
                             close=")">
                        #{id}
                    </foreach>
                </if>
                )
            </if>
        )

        <!-- mysql的按照顺序排序在h2会报错，所以用下面的 -->
        <!--order by-->
        <!--field(-->
        <!--ai.issue_id,-->
        <!--<foreach collection="issueIds" index="index" item="issueId" separator=",">-->
        <!--#{issueId}-->
        <!--</foreach>-->
        <!--)-->
        order by CASE ai.issue_id
        <foreach collection="issueIds" item="issueId" index="index">
            when #{issueId} then #{index}
        </foreach>
        END, ai.issue_id
    </select>

    <select id="selectWithSubByIssueIds" resultMap="IssueWithSub">
        select
        ai.issue_id,
        ai.summary,
        ai.assignee_id,
        ai.estimated_start_time,
        ai.estimated_end_time,
        ai.estimate_time,
        ai.object_version_number,
        ai.issue_type_id,
        ai.parent_issue_id,
        ai.relate_issue_id,
        ai.status_id,
        ai.priority_id,
        CONVERT(ai.issue_num,SIGNED) as issue_num_convert,
        CONCAT(api.project_code,'-', ai.issue_num) as issue_num,
        ai.actual_start_time,
        ai.actual_end_time,
        <if test="ganttDefaultOrder">
            agir.rank,
            agir.instance_id,
            agir.instance_type,
        </if>
        ai.epic_id,
        ai.epic_name,
        ai.project_id as issue_project_id,
        ai.project_id as project_id,
        alv.name AS epic_color,
        ai.type_code,
        ai.story_points,
        ai.main_responsible_id,
        ai.remaining_time,
        ai.environment,
        ai.created_by,
        ai.last_updated_by,
        ai.reporter_id,
        ai.creation_date,
        ai.last_update_date,
        aipr.participant_id,
        ai.actual_start_time,
        ai.actual_end_time,
        aipr.participant_id
        from agile_issue ai
        <if test="ganttDefaultOrder">
            left join agile_gantt_issue_rank agir on ai.issue_id = agir.issue_id and agir.dimension = #{dimension}
        </if>
        left join lookup_value alv on ai.color_code = alv.value_code
        left join agile_project_info api on api.project_id = ai.project_id
        left join agile_issue_participant_rel aipr on ai.issue_id = aipr.issue_id
        <if test="sortMap != null and sortMap.sortFieldId != null ">
            LEFT JOIN
            (
            SELECT
            instance_id,
            date_value,
            option_id,
            string_value,
            text_value,
            number_value
            FROM fd_field_value ffv
            JOIN agile_issue ai ON ai.issue_id = ffv.instance_id AND ai.project_id in
            <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                #{projectId}
            </foreach>
            WHERE ffv.field_id = #{sortMap.sortFieldId}
            AND ffv.project_id in
            <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                #{projectId}
            </foreach>
            AND ai.issue_type_id IN
            <foreach collection="sortMap.fieldExtendIssueTypeIds" item="issueTypeId" open="(" separator="," close=")">
                #{issueTypeId}
            </foreach>
            ) fv ON ai.issue_id = fv.instance_id
        </if>
        where ai.project_id in
        <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
            #{projectId}
        </foreach>
        and ai.issue_id in
        <foreach collection="issueIds" item="issueId" open="(" separator="," close=")">
            #{issueId}
        </foreach>
        <if test="sortMap != null and sortMap.orderStr != null">
            ORDER BY ${sortMap.orderStr}
        </if>
    </select>

    <select id="queryIssueIdsListWithSub" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        select
            ai1.issue_id ,
            ai1.priority_id,
            ai1.reporter_id,
            ai1.status_id,
            ai1.assignee_id,
            ai1.last_update_date,
            ai1.issue_num1 as issue_num,
            ai1.issue_type_id,
            ai1.estimated_start_time
        from (
            select
                t1.issue_issue_id as issue_id,
                ai.priority_id,
                ai.reporter_id,
                ai.status_id,
                ai.assignee_id,
                ai.last_update_date,
                concat(api.project_code,'-', ai.issue_num) as issue_num1,
                CONVERT(ai.issue_num,SIGNED) as issue_num_convert,
                ai.issue_type_id,
                ai.created_by,
                ai.last_updated_by,
                ai.creation_date,
                ai.story_points,
                ai.estimated_start_time,
                ai.estimated_end_time,
                ai.main_responsible_id,
                ai.environment,
                ai.remaining_time
            from (
                select
                <choose>
                    <when test="isTreeView">
                        distinct case
                        when search.type_code = 'sub_task' then search.parent_issue_id
                        when search.type_code = 'bug' and search.relate_issue_id is not null and search.relate_issue_id != 0 then search.relate_issue_id
                        else search.issue_issue_id
                        end as issue_issue_id
                    </when>
                    <otherwise>
                        distinct search.issue_issue_id
                    </otherwise>
                </choose>
                from (
                    <include refid="queryIssueIdsListWithSubSql"/>
                )search
                where 1=1
                and (
                search.type_code != 'sub_task'
                or search.parent_type_code != 'bug'
                or search.parent_relate_issue_id is null
                or search.parent_relate_issue_id = 0
                )
                <if test='searchVO.searchArgs != null'>
                    <if test='searchVO.searchArgs.issueNum != null and searchVO.searchArgs.issueNum != ""'>
                        AND search.issue_num LIKE CONCAT(CONCAT('%' ,#{searchVO.searchArgs.issueNum}) ,'%')
                    </if>
                </if>
                <if test='searchVO.contents != null and searchVO.contents.size != 0'>
                    <foreach collection="searchVO.contents" item="content" index="index">
                        AND (search.issue_num LIKE CONCAT(CONCAT('%', #{content}), '%') OR search.summary LIKE
                        CONCAT(CONCAT('%',
                        #{content}), '%'))
                    </foreach>
                </if>
            ) t1
            join agile_issue ai
            on t1.issue_issue_id = ai.issue_id
            left join agile_project_info api on ai.project_id = api.project_id
            <if test="sortMap != null and sortMap.sortFieldId != null ">
                LEFT JOIN
                (
                    SELECT
                        instance_id,
                        date_value,
                        option_id,
                        string_value,
                        text_value,
                        number_value
                    FROM fd_field_value ffv
                    JOIN agile_issue ai ON ai.issue_id = ffv.instance_id AND ai.project_id = #{projectId}
                    WHERE ffv.field_id = #{sortMap.sortFieldId}
                    AND ffv.project_id = #{projectId}
                    AND ai.issue_type_id IN
                    <foreach collection="sortMap.fieldExtendIssueTypeIds" item="issueTypeId" open="(" separator="," close=")">
                        #{issueTypeId}
                    </foreach>
                ) fv ON ai.issue_id = fv.instance_id
            </if>
            <if test="sortMap != null and sortMap.orderStr != null">
                ORDER BY ${sortMap.orderStr}
            </if>
        ) ai1
    </select>

    <select id="queryIssueIdsList" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        SELECT
        ai.issue_id,
        ai.project_id,
        <if test="searchVO.ganttDefaultOrder">
            agir.rank,
            agir.instance_id,
            agir.instance_type,
        </if>
        CONVERT(ai.issue_num,SIGNED) as issue_num_convert
        FROM agile_issue ai
        <if test="searchVO.ganttDefaultOrder">
            left join agile_gantt_issue_rank agir on ai.issue_id = agir.issue_id and agir.dimension = #{searchVO.searchArgs.dimension}
        </if>
        <if test="sortMap != null and sortMap.sortFieldId != null ">
            LEFT JOIN
            (
                SELECT
                instance_id,
                date_value,
                option_id,
                string_value,
                text_value,
                number_value
                FROM fd_field_value ffv
                JOIN agile_issue ai ON ai.issue_id = ffv.instance_id AND ai.project_id in
                <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                    #{projectId}
                </foreach>
                WHERE ffv.field_id = #{sortMap.sortFieldId}
                AND ffv.project_id in
                <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                    #{projectId}
                </foreach>
                AND ai.issue_type_id IN
                <foreach collection="sortMap.fieldExtendIssueTypeIds" item="issueTypeId" open="(" separator="," close=")">
                    #{issueTypeId}
                </foreach>
            ) fv ON ai.issue_id = fv.instance_id
        </if>
        WHERE ai.project_id in
        <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
            #{projectId}
        </foreach>
        <choose>
            <when test="searchVO.waterfallProject">
                AND ai.apply_type = 'waterfall'
            </when>
            <otherwise>
                AND ai.apply_type = 'agile'
            </otherwise>
        </choose>
        <include refid="explainSearchVO"/>
        <include refid="filterSqlAndAssigneeIds"/>
        <if test='searchVO.searchArgs != null'>
            <if test='searchVO.searchArgs.issueNum != null and searchVO.searchArgs.issueNum != ""'>
                AND ai.issue_num LIKE CONCAT(CONCAT('%' ,#{searchVO.searchArgs.issueNum}) ,'%')
            </if>
        </if>
        <if test='searchVO.contents != null and searchVO.contents.size != 0'>
            <foreach collection="searchVO.contents" item="content" index="index">
                AND (
                    ai.issue_num LIKE CONCAT(CONCAT('%', #{content}), '%')
                    OR ai.summary LIKE CONCAT(CONCAT('%', #{content}), '%')
                )
            </foreach>
        </if>
        <if test="sortMap != null and sortMap.orderStr != null">
            ORDER BY ${sortMap.orderStr}
        </if>
    </select>


    <select id="queryParentIssueIdsList" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        select
        ai.issue_id,
        ai.project_id,
        <if test="searchVO.ganttDefaultOrder">
            agir.rank,
            agir.instance_id,
            agir.instance_type,
        </if>
        CONVERT(ai.issue_num,SIGNED) as issue_num_convert
        from (
            select temp.issue_id
            from (
                SELECT
                case
                when ai.type_code = 'sub_task' then ai.parent_issue_id
                when ai.type_code = 'bug' and ai.relate_issue_id is not null and ai.relate_issue_id != 0 then ai.relate_issue_id
                else ai.issue_id
                end as issue_id
                FROM agile_issue ai
                WHERE ai.project_id in
                <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                    #{projectId}
                </foreach>
                AND ai.apply_type = 'agile'
                <include refid="explainSearchVO"/>
                <include refid="filterSqlAndAssigneeIds"/>
                <if test='searchVO.searchArgs != null'>
                    <if test='searchVO.searchArgs.issueNum != null and searchVO.searchArgs.issueNum != ""'>
                        AND ai.issue_num LIKE CONCAT(CONCAT('%' ,#{searchVO.searchArgs.issueNum}) ,'%')
                    </if>
                </if>
                <if test='searchVO.contents != null and searchVO.contents.size != 0'>
                    <foreach collection="searchVO.contents" item="content" index="index">
                        AND (
                        ai.issue_num LIKE CONCAT(CONCAT('%', #{content}), '%')
                        OR ai.summary LIKE CONCAT(CONCAT('%', #{content}), '%')
                        )
                    </foreach>
                </if>
            ) temp
            group by temp.issue_id
        ) ai1
        join agile_issue ai
        on (
            ai.project_id in
            <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                #{projectId}
            </foreach>
            and ai.apply_type = 'agile'
            and ai1.issue_id = ai.issue_id
        )
        <if test="searchVO.ganttDefaultOrder">
            left join agile_gantt_issue_rank agir on ai.issue_id = agir.issue_id and agir.dimension = #{searchVO.searchArgs.dimension}
        </if>
        <if test="sortMap != null and sortMap.sortFieldId != null ">
            LEFT JOIN
            (
            SELECT
            instance_id,
            date_value,
            option_id,
            string_value,
            text_value,
            number_value
            FROM fd_field_value ffv
            JOIN agile_issue ai ON ai.issue_id = ffv.instance_id AND ai.project_id in
            <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                #{projectId}
            </foreach>
            WHERE ffv.field_id = #{sortMap.sortFieldId}
            AND ffv.project_id in
            <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                #{projectId}
            </foreach>
            AND ai.issue_type_id IN
            <foreach collection="sortMap.fieldExtendIssueTypeIds" item="issueTypeId" open="(" separator="," close=")">
                #{issueTypeId}
            </foreach>
            ) fv ON ai.issue_id = fv.instance_id
        </if>
        where ai.project_id in
        <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
            #{projectId}
        </foreach>
        and ai.apply_type = 'agile'
        and (
            ai.type_code in ('issue_epic', 'story', 'task')
            or (ai.type_code = 'bug' and (ai.relate_issue_id is null or ai.relate_issue_id = 0))
        )
        <if test="sortMap != null and sortMap.orderStr != null">
            ORDER BY ${sortMap.orderStr}
        </if>
    </select>

    <select id="queryParentIssueIdsList_COUNT" resultType="java.lang.Long">
        select count(distinct temp.issue_id)
        from (
            select
            case
            when ai.type_code = 'sub_task' then ai.parent_issue_id
            when ai.type_code = 'bug' and ai.relate_issue_id is not null and ai.relate_issue_id != 0 then ai.relate_issue_id
            else ai.issue_id
            end as issue_id
            from agile_issue ai
            where ai.project_id in
            <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                #{projectId}
            </foreach>
            and ai.apply_type = 'agile'
            <include refid="explainSearchVO"/>
            <include refid="filterSqlAndAssigneeIds"/>
            <if test='searchVO.searchArgs != null'>
                <if test='searchVO.searchArgs.issueNum != null and searchVO.searchArgs.issueNum != ""'>
                    and ai.issue_num like CONCAT(CONCAT('%' ,#{searchVO.searchArgs.issueNum}) ,'%')
                </if>
            </if>
            <if test='searchVO.contents != null and searchVO.contents.size != 0'>
                <foreach collection="searchVO.contents" item="content" index="index">
                    and (
                    ai.issue_num like CONCAT(CONCAT('%', #{content}), '%')
                    or ai.summary like CONCAT(CONCAT('%', #{content}), '%')
                    )
                </foreach>
            </if>
        ) temp
        join agile_issue ai on ai.issue_id = temp.issue_id
        where ai.project_id in
        <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
            #{projectId}
        </foreach>
        and ai.apply_type = 'agile'
        and (
        ai.type_code in ('issue_epic', 'story', 'task')
        or (ai.type_code = 'bug' and (ai.relate_issue_id is null or ai.relate_issue_id = 0))
        )
    </select>

    <select id="queryChildrenIdByParentId" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        select
        ai.issue_id,
        ai.project_id,
        <if test="searchVO.ganttDefaultOrder">
            agir.rank,
            agir.instance_id,
            agir.instance_type,
        </if>
        CONVERT(ai.issue_num,SIGNED) as issue_num_convert
        from agile_issue ai
        <if test="searchVO.ganttDefaultOrder">
            left join agile_gantt_issue_rank agir on ai.issue_id = agir.issue_id and agir.dimension = #{searchVO.searchArgs.dimension}
        </if>
        <if test="sortMap != null and sortMap.sortFieldId != null ">
            LEFT JOIN
            (
            SELECT
            instance_id,
            date_value,
            option_id,
            string_value,
            text_value,
            number_value
            FROM fd_field_value ffv
            JOIN agile_issue ai ON ai.issue_id = ffv.instance_id
            AND ai.project_id in
            <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                #{projectId}
            </foreach>
            WHERE ffv.field_id = #{sortMap.sortFieldId}
            AND ffv.project_id in
            <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                #{projectId}
            </foreach>
            AND ai.issue_type_id IN
            <foreach collection="sortMap.fieldExtendIssueTypeIds" item="issueTypeId" open="(" separator="," close=")">
                #{issueTypeId}
            </foreach>
            ) fv ON ai.issue_id = fv.instance_id
        </if>
        where ai.project_id in
        <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
            #{projectId}
        </foreach>
        and ai.apply_type = 'agile'
        and ai.type_code in ('sub_task', 'bug')
        and (
            ai.parent_issue_id in
            <foreach collection="issueIds" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
            or
            ai.type_code = 'bug'
            and ai.relate_issue_id in
            <foreach collection="issueIds" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        )
        <include refid="explainSearchVO"/>
        <include refid="filterSqlAndAssigneeIds"/>
        <if test='searchVO.searchArgs != null'>
            <if test='searchVO.searchArgs.issueNum != null and searchVO.searchArgs.issueNum != ""'>
                AND ai.issue_num LIKE CONCAT(CONCAT('%' ,#{searchVO.searchArgs.issueNum}) ,'%')
            </if>
        </if>
        <if test='searchVO.contents != null and searchVO.contents.size != 0'>
            <foreach collection="searchVO.contents" item="content" index="index">
                AND (ai.issue_num LIKE CONCAT(CONCAT('%', #{content}), '%')
                OR ai.summary LIKE CONCAT(CONCAT('%', #{content}), '%'))
            </foreach>
        </if>
        <if test="sortMap != null and sortMap.orderStr != null">
            ORDER BY ${sortMap.orderStr}
        </if>
    </select>

    <select id="queryStoryAndTaskByProjectId" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        select search.*
        from (
            select
                ai.issue_id as issue_id,
                ai.summary,
                CONVERT(ai.issue_num,UNSIGNED) as issue_num_convert,
                CONCAT(api.project_code,'-', ai.issue_num) as issue_num,
                ai.reporter_id,
                ai.last_update_date,
                ai.priority_id,
                ai.assignee_id,
                ai.issue_type_id,
                ai.status_id,
                ai.apply_type
                from agile_issue ai
            LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
            where ai.project_id = #{projectId}
            AND ai.type_code in ('story','task')
        ) search
        where 1=1
        <if test="searchVO != null and searchVO.advancedSearchArgs != null and searchVO.advancedSearchArgs.size > 0">
            <if test="searchVO.advancedSearchArgs.summary != null">
                AND (
                search.summary LIKE CONCAT(CONCAT('%', #{searchVO.advancedSearchArgs.summary}), '%')
                OR
                search.issue_num LIKE CONCAT(CONCAT('%', #{searchVO.advancedSearchArgs.summary}), '%')
                )
            </if>
        </if>
    </select>

    <select id="selectIssueSubTaskAndSubBugIds" resultType="java.lang.Long">
        SELECT
        ai.issue_id
        FROM agile_issue ai
        LEFT JOIN agile_issue_sprint_rel aisr ON aisr.issue_id = ai.issue_id
        WHERE
        ai.project_id = #{projectId}
        AND
        ai.apply_type = 'agile'
        AND ai.issue_id in (
        select ai2.issue_id from agile_issue ai2
        where ai2.project_id = #{projectId}
        AND ai2.type_code in ('sub_task','bug')
        AND (
            ai2.parent_issue_id in
            <foreach collection="issueIds" item="issueId" open="(" close=")" separator=",">
                #{issueId}
            </foreach>
            or
            ai2.relate_issue_id in
            <foreach collection="issueIds" item="issueId" open="(" close=")" separator=",">
                #{issueId}
            </foreach>
        )
        )
    </select>

    <sql id="queryIssueIdsListWithSubSql">
        SELECT
        ai.issue_id as issue_issue_id,
        ai.summary,
        CONCAT(api.project_code,'-', ai.issue_num) as issue_num,
        ai.reporter_id,
        ai.last_update_date,
        ai.priority_id,
        ai.assignee_id,
        ai.issue_type_id,
        ai.status_id,
        ai.parent_issue_id,
        ai.type_code,
        ai.relate_issue_id,
        ai.project_id,
        aii2.type_code as parent_type_code,
        aii2.relate_issue_id as parent_relate_issue_id
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        left join agile_issue aii2 on aii2.project_id = #{projectId} and ai.parent_issue_id = aii2.issue_id
        WHERE ai.project_id = #{projectId} AND ai.apply_type = 'agile'
        <include refid="explainSearchVO"/>
        <include refid="filterSqlAndAssigneeIds"/>
    </sql>

    <sql id="explainSearchVO">
        <!--不包含projectIds-->
        <include refid="io.choerodon.agile.infra.mapper.IssueMapper.explainSearchVOSql"/>
        <if test='searchVO.otherArgs != null'>
            <!--包含projectIds-->
            <include refid="io.choerodon.agile.infra.mapper.IssueMapper.otherArgsSql1"/>
            <!--包含projectIds-->
            <include refid="io.choerodon.agile.infra.mapper.IssueMapper.otherArgsSql2"/>
            <!--不包含projectIds-->
            <include refid="io.choerodon.agile.infra.mapper.StarBeaconMapper.filterStarBeaconSql"/>
        </if>
    </sql>

    <sql id="explainSearchVOSql">
        <if test='searchVO.searchArgs != null'>
            <if test='searchVO.searchArgs.summary != null and searchVO.searchArgs.summary != "" '>
                AND ai.summary LIKE concat(concat('%',#{searchVO.searchArgs.summary}),'%')
            </if>
            <if test='searchVO.searchArgs.storyPoints != null and searchVO.searchArgs.storyPoints != "" '>
                AND ai.story_points LIKE concat(concat('%',#{searchVO.searchArgs.storyPoints}),'%')
            </if>
            <if test='searchVO.searchArgs.remainingTime != null and searchVO.searchArgs.remainingTime != "" '>
                AND ai.remaining_time LIKE concat(concat('%',#{searchVO.searchArgs.remainingTime}),'%')
            </if>
            <if test='searchVO.searchArgs.estimateTime != null and searchVO.searchArgs.estimateTime != "" '>
                AND ai.estimate_time LIKE concat(concat('%',#{searchVO.searchArgs.estimateTime}),'%')
            </if>
        </if>
        <if test='searchVO.onlyStory != null and searchVO.onlyStory'>
            and ai.type_code = 'story'
        </if>
        <if test='searchVO.advancedSearchArgs != null'>
            <if test='searchVO.advancedSearchArgs.storyPoints != null and searchVO.advancedSearchArgs.storyPoints != "" '>
                AND ai.story_points = #{searchVO.advancedSearchArgs.storyPoints}
            </if>
            <if test='searchVO.advancedSearchArgs.remainingTime != null and searchVO.advancedSearchArgs.remainingTime != "" '>
                AND ai.remaining_time = #{searchVO.advancedSearchArgs.remainingTime}
            </if>
            <if test='searchVO.advancedSearchArgs.estimateTime != null and searchVO.advancedSearchArgs.estimateTime != "" '>
                AND ai.estimate_time = #{searchVO.advancedSearchArgs.estimateTime}
            </if>
            <if test="searchVO.advancedSearchArgs.storyPointsNull != null and searchVO.advancedSearchArgs.storyPointsNull == true">
                AND ai.type_code = 'story' AND ai.story_points IS NULL
            </if>
            <if test="searchVO.advancedSearchArgs.remainingTimeNull != null and searchVO.advancedSearchArgs.remainingTimeNull == true">
                AND ai.remaining_time IS NULL
            </if>
            <if test="searchVO.advancedSearchArgs.estimateTimeNull != null and searchVO.advancedSearchArgs.estimateTimeNull == true">
                AND ai.estimate_time IS NULL
            </if>
            <if test='searchVO.advancedSearchArgs.issueTypeId != null and searchVO.advancedSearchArgs.issueTypeId.size > 0'>
                AND ai.issue_type_id IN
                <foreach collection="searchVO.advancedSearchArgs.issueTypeId" item="issueTypeId" open="(" separator=","
                         close=")">
                    #{issueTypeId}
                </foreach>
            </if>
            <if test='searchVO.advancedSearchArgs.typeCodes != null and searchVO.advancedSearchArgs.typeCodes.size > 0'>
                AND ai.type_code IN
                <foreach collection="searchVO.advancedSearchArgs.typeCodes" item="typeCode" open="(" separator=","
                         close=")">
                    #{typeCode}
                </foreach>
            </if>
            <if test='searchVO.advancedSearchArgs.assigneeIds != null and searchVO.advancedSearchArgs.assigneeIds.size > 0'>
                AND ai.assignee_id IN
                <foreach collection="searchVO.advancedSearchArgs.assigneeIds" item="assigneeId" open="(" separator=","
                         close=")">
                    #{assigneeId}
                </foreach>
            </if>
            <if test='searchVO.advancedSearchArgs.reporterIds != null and searchVO.advancedSearchArgs.reporterIds.size > 0'>
                AND
                (
                <if test='searchVO.advancedSearchArgs.reporterIdsNull != null and searchVO.advancedSearchArgs.reporterIdsNull == true'>
                    (ai.reporter_id = 0 or ai.reporter_id is null) OR
                </if>
                ai.reporter_id IN
                <foreach collection="searchVO.advancedSearchArgs.reporterIds" item="reporterId" open="(" separator=","
                         close=")">
                    #{reporterId}
                </foreach>
                )
            </if>
            <if test='searchVO.advancedSearchArgs.priorityId != null and searchVO.advancedSearchArgs.priorityId.size > 0'>
                AND ai.priority_id IN
                <foreach collection="searchVO.advancedSearchArgs.priorityId" item="priorityId" open="(" separator=","
                         close=")">
                    #{priorityId}
                </foreach>
            </if>
            <if test='searchVO.advancedSearchArgs.statusId != null and searchVO.advancedSearchArgs.statusId.size > 0'>
                and ai.status_id in
                <foreach collection="searchVO.advancedSearchArgs.statusId" item="statusId" open="(" separator=","
                         close=")">
                    #{statusId}
                </foreach>
            </if>
        </if>
        <if test='searchVO.searchArgs != null'>
            <if test='searchVO.searchArgs.updateStartDate != null and searchVO.searchArgs.updateStartDate != "" and searchVO.searchArgs.updateEndDate != null and searchVO.searchArgs.updateEndDate != "" '>
                and ai.last_update_date &gt;= #{searchVO.searchArgs.updateStartDate} and ai.last_update_date &lt;=
                #{searchVO.searchArgs.updateEndDate}
            </if>
            <if test='searchVO.searchArgs.createStartDate != null and searchVO.searchArgs.createStartDate != "" and searchVO.searchArgs.createEndDate != null and searchVO.searchArgs.createEndDate != "" '>
                and ai.creation_date &gt;= #{searchVO.searchArgs.createStartDate} and ai.creation_date &lt;=
                #{searchVO.searchArgs.createEndDate}
            </if>
            <if test='searchVO.searchArgs.component != null and searchVO.searchArgs.component != "" '>
                AND ai.issue_id in (
                SELECT acir.issue_id FROM agile_component_issue_rel acir,agile_issue_component aic
                where acir.component_id = aic.component_id
                AND aic.name LIKE CONCAT(CONCAT('%' ,#{searchVO.searchArgs.component}) ,'%') )
            </if>
            <if test='searchVO.searchArgs.epic != null and searchVO.searchArgs.epic != "" '>
                AND ai.issue_id in (
                SELECT ai3.issue_id FROM agile_issue ai3 ,agile_issue ai4
                where ai3.epic_id = ai4.issue_id
                AND ai4.epic_name LIKE CONCAT(CONCAT('%' ,#{searchVO.searchArgs.epic}) ,'%') )
            </if>
            <if test='searchVO.searchArgs.version != null and searchVO.searchArgs.version != "" '>
                AND ai.issue_id in (
                SELECT avir.issue_id FROM agile_version_issue_rel avir,agile_product_version apv
                where avir.version_id = apv.version_id
                AND apv.name LIKE CONCAT(CONCAT('%' ,#{searchVO.searchArgs.version}) ,'%') )
            </if>
            <if test='searchVO.searchArgs.sprint != null and searchVO.searchArgs.sprint != "" '>
                AND ai.issue_id in (
                SELECT aisr.issue_id FROM agile_issue_sprint_rel aisr,agile_sprint as2
                where aisr.sprint_id = as2.sprint_id
                AND as2.sprint_name LIKE CONCAT(CONCAT('%' ,#{searchVO.searchArgs.sprint}) ,'%') )
            </if>
            <if test='searchVO.searchArgs.label != null and searchVO.searchArgs.label != "" '>
                AND ai.issue_id in (
                SELECT alir.issue_id FROM agile_label_issue_rel alir,agile_issue_label ail
                where alir.label_id = ail.label_id
                AND ail.label_name LIKE CONCAT(CONCAT('%' ,#{searchVO.searchArgs.label}) ,'%') )
            </if>
            <if test='searchVO.searchArgs.estimatedStartTimeScopeStart != null and searchVO.searchArgs.estimatedStartTimeScopeStart != "" and searchVO.searchArgs.estimatedStartTimeScopeEnd != null and searchVO.searchArgs.estimatedStartTimeScopeEnd != ""'>
                and DATE_FORMAT(ai.estimated_start_time, '%Y-%m-%d %H:%i') &gt;= #{searchVO.searchArgs.estimatedStartTimeScopeStart}
                and DATE_FORMAT(ai.estimated_start_time, '%Y-%m-%d %H:%i') &lt;= #{searchVO.searchArgs.estimatedStartTimeScopeEnd}
            </if>

            <if test='searchVO.searchArgs.estimatedEndTimeScopeStart != null and searchVO.searchArgs.estimatedEndTimeScopeStart != "" and searchVO.searchArgs.estimatedEndTimeScopeEnd != null and searchVO.searchArgs.estimatedEndTimeScopeEnd != ""'>
                and DATE_FORMAT(ai.estimated_end_time, '%Y-%m-%d %H:%i') &gt;= #{searchVO.searchArgs.estimatedEndTimeScopeStart}
                and DATE_FORMAT(ai.estimated_end_time, '%Y-%m-%d %H:%i') &lt;= #{searchVO.searchArgs.estimatedEndTimeScopeEnd}
            </if>

            <if test='searchVO.searchArgs.actualStartTimeScopeStart != null and searchVO.searchArgs.actualStartTimeScopeStart != "" and searchVO.searchArgs.actualStartTimeScopeEnd != null and searchVO.searchArgs.actualStartTimeScopeEnd != ""'>
                and DATE_FORMAT(ai.actual_start_time, '%Y-%m-%d %H:%i') &gt;= #{searchVO.searchArgs.actualStartTimeScopeStart}
                and DATE_FORMAT(ai.actual_start_time, '%Y-%m-%d %H:%i') &lt;= #{searchVO.searchArgs.actualStartTimeScopeEnd}
            </if>

            <if test='searchVO.searchArgs.actualEndTimeScopeStart != null and searchVO.searchArgs.actualEndTimeScopeStart != "" and searchVO.searchArgs.actualEndTimeScopeEnd != null and searchVO.searchArgs.actualEndTimeScopeEnd != ""'>
                and DATE_FORMAT(ai.actual_end_time, '%Y-%m-%d %H:%i') &gt;= #{searchVO.searchArgs.actualEndTimeScopeStart}
                and DATE_FORMAT(ai.actual_end_time, '%Y-%m-%d %H:%i') &lt;= #{searchVO.searchArgs.actualEndTimeScopeEnd}
            </if>
            <if test='searchVO.searchArgs.teamProjectIds != null and searchVO.searchArgs.teamProjectIds.size() > 0'>
                and ai.project_id in
                <foreach collection="searchVO.searchArgs.teamProjectIds" item="teamProjectId" open="(" separator="," close=")">
                    #{teamProjectId}
                </foreach>
            </if>
        </if>
    </sql>

    <sql id="otherArgsSql1">
        <if test='searchVO.otherArgs.assigneeId != null and searchVO.otherArgs.assigneeId.size > 0'>
            AND (
            <if test='searchVO.otherArgs.assigneeIdNull != null and searchVO.otherArgs.assigneeIdNull == true'>
                (ai.assignee_id = 0 or ai.assignee_id is null) OR
            </if>
            ai.assignee_id in
            <foreach collection="searchVO.otherArgs.assigneeId" item="aId" open="(" separator=","
                     close=")">
                #{aId}
            </foreach>
            )
        </if>
        <if test='searchVO.otherArgs.statusId != null and searchVO.otherArgs.statusId.size > 0'>
            AND ai.status_id in
            <foreach collection="searchVO.otherArgs.statusId" item="id" open="(" separator=","
                     close=")">
                #{id}
            </foreach>
        </if>
        <if test='searchVO.otherArgs.resolution !=null'>
            AND ai.status_id in (
            select ais.status_id from agile_issue_status ais where ais.status_id = ai.status_id and ais.project_id =
            ai.project_id
            <choose>
                <when test="searchVO.otherArgs.resolution == 'true'">
                    and ais.is_completed = 1
                </when>
                <otherwise>
                    and ais.is_completed = 0
                </otherwise>
            </choose>
            )
        </if>
        <if test='searchVO.otherArgs.component != null and searchVO.otherArgs.component.size > 0'>
            AND (
            <if test='searchVO.otherArgs.componentNull != null and searchVO.otherArgs.componentNull == true'>
                ai.issue_id in (SELECT ai12.issue_id from agile_issue ai12 left join
                agile_component_issue_rel acir2
                on ai12.issue_id = acir2.issue_id WHERE
                acir2.component_id is null ) OR
            </if>
            ai.issue_id in
            (SELECT acir2.issue_id FROM agile_component_issue_rel acir2 WHERE
            acir2.component_id in
            <foreach collection="searchVO.otherArgs.component" item="id" open="(" separator=","
                     close=")">
                #{id}
            </foreach>
            ))
        </if>

        <if test='searchVO.otherArgs.participantIds != null and searchVO.otherArgs.participantIds.size > 0'>
            AND (
            <if test='searchVO.otherArgs.participantIdsNull != null and searchVO.otherArgs.participantIdsNull == true'>
                ai.issue_id in (
                SELECT ai12.issue_id from agile_issue ai12
                left join agile_issue_participant_rel aipr
                on ai12.issue_id = aipr.issue_id WHERE
                aipr.participant_id is null ) OR
            </if>
            ai.issue_id in
            (SELECT aipr.issue_id FROM agile_issue_participant_rel aipr WHERE
            aipr.participant_id in
            <foreach collection="searchVO.otherArgs.participantIds" item="participantId" open="(" separator=","
                     close=")">
                #{participantId}
            </foreach>
            ))
        </if>

        <if test='searchVO.otherArgs.epic != null and searchVO.otherArgs.epic.size > 0'>
            AND (
            <if test='searchVO.otherArgs.epicNull != null and searchVO.otherArgs.epicNull == true'>
                (((ai.epic_id is null or ai.epic_id = 0) and ai.type_code in ('story', 'task', 'bug', 'feature'))
                or (ai.parent_issue_id in (select ai7.issue_id from agile_issue ai7 where ai7.issue_id =
                ai.parent_issue_id and
                (ai7.epic_id is null or ai7.epic_id = 0) and ai.type_code = 'sub_task' ))) OR
            </if>
            ((ai.epic_id in
            <foreach collection="searchVO.otherArgs.epic" item="id" open="(" separator=","
                     close=")">
                #{id}
            </foreach>
            and ai.type_code in ('story', 'task', 'bug', 'feature'))
            or (ai.parent_issue_id in (select ai7.issue_id from agile_issue ai7 where ai7.issue_id =
            ai.parent_issue_id and
            ai7.epic_id in
            <foreach collection="searchVO.otherArgs.epic" item="id" open="(" separator=","
                     close=")">
                #{id}
            </foreach>
            ) and ai.type_code = 'sub_task'))
            )
        </if>
        <if test='searchVO.otherArgs.feature != null and searchVO.otherArgs.feature.size > 0'>
            AND (
            <if test='searchVO.otherArgs.featureNull != null and searchVO.otherArgs.featureNull == true'>
                ((ai.feature_id is null or ai.feature_id = 0) and ai.type_code in ('story', 'task', 'bug'))
                OR
            </if>
            (ai.feature_id in
            <foreach collection="searchVO.otherArgs.feature" item="id" open="(" separator=","
                     close=")">
                #{id}
            </foreach>
            and ai.type_code in ('story', 'task', 'bug'))
            )
        </if>
        <if test='searchVO.otherArgs.version != null and searchVO.otherArgs.version.size > 0'>
            AND (
            <if test='searchVO.otherArgs.versionNull != null and searchVO.otherArgs.versionNull == true'>
                ai.issue_id in (SELECT ai31.issue_id from agile_issue ai31
                left join agile_version_issue_rel avir44
                on ai31.issue_id = avir44.issue_id
                WHERE avir44.version_id is null ) OR
            </if>
            ai.issue_id in ( SELECT avir3.issue_id FROM
            agile_version_issue_rel avir3 WHERE avir3.version_id in
            <foreach collection="searchVO.otherArgs.version" item="id" open="(" separator=","
                     close=")">
                #{id}
            </foreach>)
            )
        </if>

        <if test='searchVO.otherArgs.fixVersion != null and searchVO.otherArgs.fixVersion.size > 0'>
            AND (
            <if test='searchVO.otherArgs.fixVersionNull != null and searchVO.otherArgs.fixVersionNull == true'>
                ai.issue_id in (SELECT ai31.issue_id from agile_issue ai31
                left join agile_version_issue_rel avir44
                on ai31.issue_id = avir44.issue_id
                WHERE avir44.version_id is null ) OR
            </if>
            ai.issue_id in ( SELECT avir3.issue_id FROM
            agile_version_issue_rel avir3 WHERE avir3.version_id in
            <foreach collection="searchVO.otherArgs.fixVersion" item="id" open="(" separator=","
                     close=")">
                #{id}
            </foreach>
            and relation_type = 'fix'
            )
            )
        </if>
        <if test='searchVO.otherArgs.influenceVersion != null and searchVO.otherArgs.influenceVersion.size > 0'>
            AND (
            <if test='searchVO.otherArgs.influenceVersionNull != null and searchVO.otherArgs.influenceVersionNull == true'>
                ai.issue_id in (SELECT ai31.issue_id from agile_issue ai31
                left join agile_version_issue_rel avir44
                on ai31.issue_id = avir44.issue_id
                WHERE avir44.version_id is null ) OR
            </if>
            ai.issue_id in ( SELECT avir3.issue_id FROM
            agile_version_issue_rel avir3 WHERE avir3.version_id in
            <foreach collection="searchVO.otherArgs.influenceVersion" item="id" open="(" separator=","
                     close=")">
                #{id}
            </foreach>
            AND relation_type = 'influence'
             )
            )
        </if>
        <if test='searchVO.otherArgs.label != null and searchVO.otherArgs.label.size > 0'>
            AND (
            <if test='searchVO.otherArgs.labelNull != null and searchVO.otherArgs.labelNull == true'>
                ai.issue_id in (SELECT ai13.issue_id from agile_issue ai13 left join
                agile_label_issue_rel alir2 on ai13.issue_id = alir2.issue_id WHERE
                alir2.label_id is null ) OR
            </if>
            ai.issue_id in ( SELECT alir2.issue_id FROM
            agile_label_issue_rel alir2 WHERE alir2.label_id in
            <foreach collection="searchVO.otherArgs.label" item="id" open="(" separator=","
                     close=")">
                #{id}
            </foreach>)
            )
        </if>
        <if test='searchVO.otherArgs.issueIds != null and searchVO.otherArgs.issueIds.size > 0'>
            AND ai.issue_id in
            <foreach collection="searchVO.otherArgs.issueIds" item="issueId" open="(" separator=","
                     close=")">
                #{issueId}
            </foreach>
        </if>

        <if test="searchVO.otherArgs.mainResponsibleIds != null and searchVO.otherArgs.mainResponsibleIds.size > 0">
            and (
                <if test='searchVO.otherArgs.mainResponsibleIdsNull != null and searchVO.otherArgs.mainResponsibleIdsNull == true'>
                    (ai.main_responsible_id = 0 or ai.main_responsible_id is null) OR
                </if>
                ai.main_responsible_id in
                <foreach collection="searchVO.otherArgs.mainResponsibleIds" item="mainResponsibleId" open="(" close=")" separator=",">
                    #{mainResponsibleId}
                </foreach>
            )
        </if>

        <if test="searchVO.otherArgs.environment != null and searchVO.otherArgs.environment.size > 0 ">
            and ai.environment in
            <foreach collection="searchVO.otherArgs.environment" item="evm" open="(" close=")" separator=",">
                #{evm}
            </foreach>
        </if>

        <if test='searchVO.otherArgs.excludeIssueIds != null and searchVO.otherArgs.excludeIssueIds.size > 0'>
            AND ai.issue_id not in
            <foreach collection="searchVO.otherArgs.excludeIssueIds" item="issueId" open="(" separator=","
                     close=")">
                #{issueId}
            </foreach>
        </if>

        <if test='searchVO.otherArgs.excludeTypeCodes != null and searchVO.otherArgs.excludeTypeCodes.size > 0'>
            AND ai.type_code not in
            <foreach collection="searchVO.otherArgs.excludeTypeCodes" item="excludeTypeCode" open="(" separator=","
                     close=")">
                #{excludeTypeCode}
            </foreach>
        </if>

        <if test='searchVO.otherArgs.creatorIds != null and searchVO.otherArgs.creatorIds.size > 0'>
            AND ai.created_by in
            <foreach collection="searchVO.otherArgs.creatorIds" item="userId" open="(" separator=","
                     close=")">
                #{userId}
            </foreach>
        </if>

        <if test='searchVO.otherArgs.updatorIds != null and searchVO.otherArgs.updatorIds.size > 0'>
            AND ai.last_updated_by in
            <foreach collection="searchVO.otherArgs.updatorIds" item="userId" open="(" separator=","
                     close=")">
                #{userId}
            </foreach>
        </if>
        <if test='searchVO.otherArgs.tags != null and searchVO.otherArgs.tags.size > 0'>
            AND (
            ai.issue_id in (
            SELECT atir.issue_id
            FROM agile_tag_issue_rel atir
            WHERE atir.project_id in
            <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                #{projectId}
            </foreach>
            AND
            <foreach collection="searchVO.otherArgs.tags" item="tag" open="(" separator="OR" close=")">
                (
                    atir.tag_project_id = #{tag.projectId}
                    AND atir.app_service_code = #{tag.appServiceCode}
                    AND atir.tag_name = #{tag.tagName}
                )
            </foreach>
            )
            )
        </if>
        <if test="searchVO.otherArgs.myAssigned != null and searchVO.otherArgs.myAssigned == true">
            <bind name="audit" value="@io.choerodon.mybatis.helper.AuditHelper@audit()"/>
            AND (ai.assignee_id = #{audit.user} OR ai.issue_id in (
            SELECT issue_id
            FROM agile_data_log adl
            WHERE adl.field = 'assignee'
            AND adl.project_id in
            <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                #{projectId}
            </foreach>
            AND (adl.new_value = #{audit.user} OR adl.old_value = #{audit.user})
            ))
        </if>
    </sql>

    <sql id="otherArgsSql2">
        <if test='searchVO.otherArgs.sprint != null and searchVO.otherArgs.sprint.size > 0'>
            AND (
            <if test='searchVO.otherArgs.sprintNull != null and searchVO.otherArgs.sprintNull == true'>
                ai.issue_id in (
                  SELECT ai10.issue_id from agile_issue ai10
                  left join agile_issue_sprint_rel aisr2 on ai10.issue_id = aisr2.issue_id
                  WHERE
                  ai10.project_id in
                  <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                    #{projectId}
                  </foreach>
                and aisr2.sprint_id is null ) OR
            </if>
            <if test="searchVO.otherArgs.sprint != null and searchVO.otherArgs.sprint.size > 0">
                <if test='searchVO.otherArgs.sprint.contains(0) or searchVO.otherArgs.sprint.contains("0")'>
                    ai.issue_id not in
                    (
                    SELECT
                        aisr.issue_id
                    FROM agile_issue_sprint_rel aisr
                    WHERE aisr.project_id in
                    <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                        #{projectId}
                    </foreach>
                    ) OR
                </if>

                ai.issue_id in
                (
                    SELECT aisr2.issue_id
                    FROM agile_issue_sprint_rel aisr2
                    WHERE aisr2.sprint_id in
                    <foreach collection="searchVO.otherArgs.sprint" item="sprintId" open="(" close=")" separator=",">
                        #{sprintId}
                    </foreach>
                )
            </if>
            )
        </if>
        <if test="searchVO.otherArgs.customField != null and searchVO.otherArgs.customField.size > 0">
            <if test="searchVO.otherArgs.customField.option != null and searchVO.otherArgs.customField.option.size > 0">
                and
                <foreach collection="searchVO.otherArgs.customField.option" item="item" open="(" separator="and"
                         close=")">
                (
                    <if test='item.value.contains("0")'>
                        ai.issue_id not in (
                            SELECT
                            ffv.instance_id
                            FROM
                            fd_field_value ffv
                            WHERE
                            ffv.project_id in
                            <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                                #{projectId}
                            </foreach>
                            AND ffv.field_id = #{item.fieldId}
                        )
                        OR
                    </if>
                    ai.issue_id in
                        (
                        SELECT
                        ffv.instance_id
                        FROM
                        fd_field_value
                        ffv
                        WHERE
                        ffv.project_id in
                        <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                                #{projectId}
                            </foreach>
                            AND ffv.field_id = #{item.fieldId}
                            AND ffv.option_id IN
                            <foreach collection="item.value" item="valueTemp" open="(" separator=","
                                     close=")">
                                #{valueTemp}
                            </foreach>
                        )
                    )
                </foreach>
            </if>
            <if test="searchVO.otherArgs.customField.date != null and searchVO.otherArgs.customField.date.size > 0">
                and
                <foreach collection="searchVO.otherArgs.customField.date" item="item" open="(" separator="and"
                         close=")">
                    ai.issue_id in
                    (
                    SELECT
                    ffv.instance_id
                    FROM
                    fd_field_value ffv
                    WHERE
                    ffv.project_id in
                    <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                        #{projectId}
                    </foreach>
                    AND ffv.field_id = #{item.fieldId}
                    AND ffv.date_value &gt;= #{item.startDate} AND ffv.date_value &lt;= #{item.endDate}
                    )
                </foreach>
            </if>
            <if test="searchVO.otherArgs.customField.date_hms != null and searchVO.otherArgs.customField.date_hms.size > 0">
                and
                <foreach collection="searchVO.otherArgs.customField.date_hms" item="item" open="(" separator="and"
                         close=")">
                    ai.issue_id in
                    (
                    SELECT
                    ffv.instance_id
                    FROM
                    fd_field_value ffv
                    WHERE
                    ffv.project_id in
                    <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                        #{projectId}
                    </foreach>
                    AND ffv.field_id = #{item.fieldId}
                    AND DATE_FORMAT(ffv.date_value, '%H:%i:%s') &gt;= #{item.startDate} AND DATE_FORMAT(ffv.date_value, '%H:%i:%s') &lt;= #{item.endDate}
                    )
                </foreach>
            </if>
            <if test="searchVO.otherArgs.customField.number != null and searchVO.otherArgs.customField.number.size > 0">
                and
                <foreach collection="searchVO.otherArgs.customField.number" item="item" open="(" separator="and"
                         close=")">
                    ai.issue_id in
                    (
                    SELECT
                    ffv.instance_id
                    FROM
                    fd_field_value ffv
                    WHERE
                    ffv.project_id in
                    <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                        #{projectId}
                    </foreach>
                    AND ffv.field_id = #{item.fieldId}
                    AND ffv.number_value = #{item.value}
                    )
                </foreach>
            </if>
            <if test="searchVO.otherArgs.customField.string != null and searchVO.otherArgs.customField.string.size > 0">
                and
                <foreach collection="searchVO.otherArgs.customField.string" item="item" open="(" separator="and"
                         close=")">
                    ai.issue_id in
                    (
                    SELECT
                    ffv.instance_id
                    FROM
                    fd_field_value ffv
                    WHERE
                    ffv.project_id in
                    <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                        #{projectId}
                    </foreach>
                    AND ffv.field_id = #{item.fieldId}
                    AND ffv.string_value LIKE CONCAT(CONCAT('%' ,#{item.value}) ,'%')
                    )
                </foreach>
            </if>
            <if test="searchVO.otherArgs.customField.text != null and searchVO.otherArgs.customField.text.size > 0">
                and
                <foreach collection="searchVO.otherArgs.customField.text" item="item" open="(" separator="and"
                         close=")">
                    ai.issue_id in
                    (
                    SELECT
                    ffv.instance_id
                    FROM
                    fd_field_value ffv
                    WHERE
                    ffv.project_id in
                    <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                        #{projectId}
                    </foreach>
                    AND ffv.field_id = #{item.fieldId}
                    AND ffv.text_value LIKE CONCAT(CONCAT('%' ,#{item.value}) ,'%')
                    )
                </foreach>
            </if>
        </if>
    </sql>

    <sql id="filterSqlAndAssigneeIds">
        <if test='filterSql != null'>
            AND ai.issue_id IN (${filterSql})
        </if>
        <if test='assigneeFilterIds != null and assigneeFilterIds.size > 0'>
            AND ai.assignee_id IN
            <foreach collection="assigneeFilterIds" item="assigneeFilterId"
                     open="(" close=")" separator=",">
                #{assigneeFilterId}
            </foreach>
        </if>
    </sql>

    <select id="selectUserIdsByProjectIds" resultType="java.lang.Long">
        select distinct assignee_id
        from agile_issue
        where project_id in
        <foreach collection="projectIds" item="projectId" open="(" close=")" separator=",">
            #{projectId}
        </foreach>
        and apply_type = 'agile'
        and assignee_id is not null
    </select>

    <select id="selectReporterIdsByProjectId" resultType="java.lang.Long">
        select distinct reporter_id
        from agile_issue
        where project_id = #{projectId}
        and apply_type = 'agile'
        and reporter_id is not null
    </select>

    <select id="queryParentIssueByProjectIdsAndUserId" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        select DISTINCT ai.*
        from (
            select
                issue_id,
                project_id,
                last_update_date
            from (
                select
                    ai.issue_id,
                    ai.summary,
                    CONCAT(api.project_code,'-', ai.issue_num) as issue_num,
                    ai.project_id,
                    ai.last_update_date
                from
                    <if test="searchType != 'myStarBeacon'">
                        agile_issue_sprint_rel aisr,
                    </if>
                    <if test="searchType != 'myReported' and searchType != 'myAssigned' and searchType != 'myStarBeacon'">
                        agile_issue_status ais,
                    </if>
                    agile_issue ai
                    LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
                where 1=1
                <if test="searchType != 'myStarBeacon'">
                    AND aisr.project_id IN
                    <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                        #{projectId}
                    </foreach>
                    AND aisr.sprint_id in (
                        select sprint_id
                        from agile_sprint asp
                        where asp.project_id in
                        <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                            #{projectId}
                        </foreach>
                        AND asp.status_code = 'started'
                    )
                    AND ai.issue_id = aisr.issue_id
                    <if test="searchType != 'myReported' and searchType != 'myAssigned'">
                        AND ais.is_completed != 1
                        AND ais.status_id = ai.status_id
                        AND ais.project_id = ai.project_id
                    </if>
                </if>
                <choose>
                    <when test="searchType == null">
                        AND ai.type_code in ('story','bug','task')
                        AND (ai.parent_issue_id IS NULL OR ai.parent_issue_id = 0)
                        AND (ai.relate_issue_id IS NULL OR ai.relate_issue_id = 0)
                        AND ai.assignee_id = #{userId}
                    </when>
                    <when test="searchType == 'myStarBeacon'">
                        AND ai.type_code in ('story','bug','task','feature')
                        AND (ai.parent_issue_id IS NULL OR ai.parent_issue_id = 0)
                        AND (ai.relate_issue_id IS NULL OR ai.relate_issue_id = 0)
                        AND ai.issue_id in
                        (
                            select fsb.instance_id
                            from fd_star_beacon fsb
                            where fsb.type = 'issue'
                            and fsb.project_id in
                            <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                                #{projectId}
                            </foreach>
                            and fsb.user_id = #{userId}
                        )
                    </when>
                    <when test="searchType == 'myBug'">
                        AND ai.type_code = 'bug'
                        AND ai.assignee_id = #{userId}
                    </when>
                    <when test="searchType == 'reportedBug'">
                        AND ai.type_code = 'bug'
                        AND ai.reporter_id = #{userId}
                    </when>
                    <when test="searchType == 'myReported'">
                        AND ai.type_code in ('story','bug','task')
                        AND (ai.parent_issue_id IS NULL OR ai.parent_issue_id = 0)
                        AND (ai.relate_issue_id IS NULL OR ai.relate_issue_id = 0)
                        AND ai.reporter_id = #{userId}
                    </when>
                    <when test="searchType == 'myAssigned'">
                        AND ai.type_code in ('story','bug','task')
                        AND (ai.parent_issue_id IS NULL OR ai.parent_issue_id = 0)
                        AND (ai.relate_issue_id IS NULL OR ai.relate_issue_id = 0)
                        AND
                        (
                            ai.assignee_id = #{userId}
                            or
                            ai.issue_id in
                            (
                                SELECT
                                adl.issue_id
                                FROM
                                agile_data_log adl
                                WHERE
                                adl.project_id IN
                                <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                                    #{projectId}
                                </foreach>
                                AND adl.field = 'assignee'
                                AND adl.old_value = concat('',#{userId},'')
                            )
                        )
                    </when>
                </choose>
                <if test="searchVO != null">
                    <if test='searchVO.advancedSearchArgs != null'>
                        <if test='searchVO.advancedSearchArgs.typeCodes != null and searchVO.advancedSearchArgs.typeCodes.size > 0'>
                            AND ai.type_code IN
                            <foreach collection="searchVO.advancedSearchArgs.typeCodes" item="typeCode" open="(" separator=","
                                     close=")">
                                #{typeCode}
                            </foreach>
                        </if>
                        <if test='searchVO.advancedSearchArgs.priorityId != null and searchVO.advancedSearchArgs.priorityId.size > 0'>
                            AND ai.priority_id IN
                            <foreach collection="searchVO.advancedSearchArgs.priorityId" item="priorityId" open="(" separator=","
                                     close=")">
                                #{priorityId}
                            </foreach>
                        </if>
                        <if test='searchVO.advancedSearchArgs.statusId != null and searchVO.advancedSearchArgs.statusId.size > 0'>
                            and ai.status_id in
                            <foreach collection="searchVO.advancedSearchArgs.statusId" item="statusId" open="(" separator=","
                                     close=")">
                                #{statusId}
                            </foreach>
                        </if>
                    </if>
                    <if test='searchVO.otherArgs != null'>
                        <if test='searchVO.otherArgs.assigneeId != null and searchVO.otherArgs.assigneeId.size > 0'>
                            AND (
                            <if test='searchVO.otherArgs.assigneeIdNull != null and searchVO.otherArgs.assigneeIdNull == true'>
                                (ai.assignee_id = 0 or ai.assignee_id is null) OR
                            </if>
                            ai.assignee_id in
                            <foreach collection="searchVO.otherArgs.assigneeId" item="aId" open="(" separator=","
                                     close=")">
                                #{aId}
                            </foreach>
                            )
                        </if>
                    </if>
                </if>
            ) search
            <where>
                <if test="searchVO != null">
                    <if test='searchVO.contents != null and searchVO.contents.size != 0'>
                        <foreach collection="searchVO.contents" item="content" index="index">
                            (search.issue_num LIKE CONCAT(CONCAT('%', #{content}), '%') OR search.summary LIKE CONCAT(CONCAT('%',#{content}), '%'))
                        </foreach>
                    </if>
                </if>
            </where>
        <if test="searchType == null or searchType == 'myStarBeacon' or searchType == 'myReported' or searchType == 'myAssigned'">
        UNION ALL
            (
                select
                    ai.issue_id,
                    ai.project_id,
                    ai.last_update_date
                from agile_issue ai
                where
                ai.project_id in
                <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                    #{projectId}
                </foreach>
                AND ai.issue_id in (
                    select issue_id
                    from (
                        select
                            IF(ai.type_code = 'bug',ai.relate_issue_id,ai.parent_issue_id) as issue_id,
                            ai.summary,
                            CONCAT(api.project_code,'-', ai.issue_num) as issue_num
                        from
                            <if test="searchType != 'myStarBeacon'">
                                agile_issue_sprint_rel aisr,
                            </if>
                            <if test="searchType != 'myReported' and searchType != 'myAssigned' and searchType != 'myStarBeacon'">
                                agile_issue_status ais,
                            </if>
                            agile_issue ai
                            LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
                        where 1=1
                        <if test="searchType != 'myStarBeacon'">
                            AND ai.issue_id = aisr.issue_id
                            AND aisr.project_id in
                            <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                                #{projectId}
                            </foreach>
                            AND aisr.sprint_id in (
                                select sprint_id
                                from agile_sprint asp
                                where asp.project_id in
                                <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                                    #{projectId}
                                </foreach>
                                AND asp.status_code = 'started'
                            )
                            <if test="searchType != 'myReported' and searchType != 'myAssigned'">
                                AND ais.status_id = ai.status_id
                                AND ais.is_completed != 1
                                AND ais.project_id = ai.project_id
                            </if>
                        </if>
                        <choose>
                            <when test="searchType == null">
                                AND ai.assignee_id = #{userId}
                            </when>
                            <when test="searchType == 'myReported'">
                                AND ai.reporter_id = #{userId}
                            </when>
                            <when test="searchType == 'myAssigned'">
                                AND
                                (
                                    ai.assignee_id = #{userId}
                                    or
                                    ai.issue_id in
                                    (
                                        SELECT
                                        adl.issue_id
                                        FROM
                                        agile_data_log adl
                                        WHERE
                                        adl.project_id IN
                                        <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                                            #{projectId}
                                        </foreach>
                                        AND adl.field = 'assignee'
                                        AND adl.old_value = concat('',#{userId},'')
                                    )
                                )
                            </when>
                            <when test=" searchType == 'myStarBeacon'">
                                AND ai.issue_id IN (
                                    select fsb.instance_id
                                    from fd_star_beacon fsb
                                    where fsb.type = 'issue'
                                    and fsb.project_id in
                                    <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                                        #{projectId}
                                    </foreach>
                                    and fsb.user_id = #{userId}
                                )
                            </when>
                        </choose>
                        AND ai.type_code in ('sub_task','bug')
                        <if test="searchVO != null">
                            <if test='searchVO.advancedSearchArgs != null'>
                                <if test='searchVO.advancedSearchArgs.typeCodes != null and searchVO.advancedSearchArgs.typeCodes.size > 0'>
                                    AND ai.type_code IN
                                    <foreach collection="searchVO.advancedSearchArgs.typeCodes" item="typeCode" open="(" separator=","
                                             close=")">
                                        #{typeCode}
                                    </foreach>
                                </if>
                                <if test='searchVO.advancedSearchArgs.priorityId != null and searchVO.advancedSearchArgs.priorityId.size > 0'>
                                    AND ai.priority_id IN
                                    <foreach collection="searchVO.advancedSearchArgs.priorityId" item="priorityId" open="(" separator=","
                                             close=")">
                                        #{priorityId}
                                    </foreach>
                                </if>
                                <if test='searchVO.advancedSearchArgs.statusId != null and searchVO.advancedSearchArgs.statusId.size > 0'>
                                    and ai.status_id in
                                    <foreach collection="searchVO.advancedSearchArgs.statusId" item="statusId" open="(" separator=","
                                             close=")">
                                        #{statusId}
                                    </foreach>
                                </if>
                            </if>
                            <if test='searchVO.otherArgs != null'>
                                <if test='searchVO.otherArgs.assigneeId != null and searchVO.otherArgs.assigneeId.size > 0'>
                                    AND (
                                    <if test='searchVO.otherArgs.assigneeIdNull != null and searchVO.otherArgs.assigneeIdNull == true'>
                                        (ai.assignee_id = 0 or ai.assignee_id is null) OR
                                    </if>
                                    ai.assignee_id in
                                    <foreach collection="searchVO.otherArgs.assigneeId" item="aId" open="(" separator=","
                                             close=")">
                                        #{aId}
                                    </foreach>
                                    )
                                </if>
                            </if>
                        </if>
                    ) search
                    <where>
                        <if test="searchVO != null">
                            <if test='searchVO.contents != null and searchVO.contents.size != 0'>
                                <foreach collection="searchVO.contents" item="content" index="index">
                                    (search.issue_num LIKE CONCAT(CONCAT('%', #{content}), '%') OR search.summary LIKE CONCAT(CONCAT('%',#{content}), '%'))
                                </foreach>
                            </if>
                        </if>
                    </where>
                )
            )
        </if>
        ) ai
        order by
        ai.project_id ASC,
        ai.last_update_date DESC
    </select>

    <select id="listIssuesByParentIssueIdsAndUserId" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
          SELECT
            ai.issue_id, ai.summary,
            ai.project_id, ai.type_code,
            CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num,
            ai.reporter_id,
            ai.last_update_date,
            ai.priority_id,
            ai.assignee_id,
            ai.issue_type_id,
            ai.status_id,
            ai.parent_issue_id,
            ai.relate_issue_id
            FROM agile_issue ai
            LEFT JOIN agile_project_info api ON ai.project_id = api.project_id,
            <if test="searchType != 'myReported' and searchType != 'myAssigned'">
                agile_issue_status ais,
            </if>
             agile_issue_sprint_rel aisr
            WHERE 1=1
            AND aisr.project_id IN
            <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                #{projectId}
            </foreach>
            AND aisr.sprint_id IN (
                SELECT sprint_id
                FROM agile_sprint asp
                where asp.project_id IN
                <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                    #{projectId}
                </foreach>
                AND asp.status_code = 'started'
            )
            AND ai.issue_id = aisr.issue_id
            <if test="searchType != 'myReported' and searchType != 'myAssigned'">
                AND ais.status_id = ai.status_id
                AND ais.project_id = ai.project_id
            </if>
            AND ai.project_id IN
            <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                #{projectId}
            </foreach>
            AND
            (
                (
                    ai.issue_id in
                    <foreach collection="parentIssues" item="parentIssue" separator="," open="(" close=")">
                        #{parentIssue}
                    </foreach>
                )
                OR
                (
                    <choose>
                        <when test="searchType == null or searchType == 'myReported' or searchType == 'myAssigned'">
                            ai.project_id in
                            <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                                #{projectId}
                            </foreach>
                            and ((
                                ai.type_code = 'sub_task'
                                and ai.parent_issue_id is not null
                                and ai.parent_issue_id != 0
                                and ai.parent_issue_id in
                                <foreach collection="parentIssues" item="parentIssue" separator="," open="(" close=")">
                                    #{parentIssue}
                                </foreach>
                            )
                            or (
                                ai.type_code = 'bug'
                                and ai.relate_issue_id is not null
                                and ai.relate_issue_id != 0
                                and ai.relate_issue_id in
                                <foreach collection="parentIssues" item="parentIssue" separator="," open="(" close=")">
                                    #{parentIssue}
                                </foreach>
                            ))
                            <if test="searchType == null">
                                AND ai.assignee_id = #{userId}
                                AND ais.is_completed != 1
                            </if>
                            <if test="searchType == 'myReported'">
                                AND ai.reporter_id = #{userId}
                            </if>
                            <if test="searchType == 'myAssigned'">
                                AND
                                (
                                    ai.assignee_id = #{userId}
                                    or ai.issue_id IN
                                    (
                                        select adl.issue_id
                                        from agile_data_log adl
                                        where adl.project_id in
                                        <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                                            #{projectId}
                                        </foreach>
                                        and field = 'assignee'
                                        and old_value = concat('',#{userId},'')
                                    )
                                )
                            </if>
                        </when>
                        <when test="searchType == 'myBug' or searchType == 'reportedBug'">
                            ai.type_code = 'bug'
                            and ai.relate_issue_id is not null
                            and ai.relate_issue_id != 0
                            AND ais.is_completed != 1
                            and ai.relate_issue_id in
                            <foreach collection="parentIssues" item="parentIssue" separator="," open="(" close=")">
                                #{parentIssue}
                            </foreach>
                        </when>
                    </choose>
                    <if test="searchVO != null">
                        <if test='searchVO.advancedSearchArgs != null'>
                            <if test='searchVO.advancedSearchArgs.typeCodes != null and searchVO.advancedSearchArgs.typeCodes.size > 0'>
                                AND ai.type_code IN
                                <foreach collection="searchVO.advancedSearchArgs.typeCodes" item="typeCode" open="(" separator=","
                                         close=")">
                                    #{typeCode}
                                </foreach>
                            </if>
                            <if test='searchVO.advancedSearchArgs.priorityId != null and searchVO.advancedSearchArgs.priorityId.size > 0'>
                                AND ai.priority_id IN
                                <foreach collection="searchVO.advancedSearchArgs.priorityId" item="priorityId" open="(" separator=","
                                         close=")">
                                    #{priorityId}
                                </foreach>
                            </if>
                            <if test='searchVO.advancedSearchArgs.statusId != null and searchVO.advancedSearchArgs.statusId.size > 0'>
                                and ai.status_id in
                                <foreach collection="searchVO.advancedSearchArgs.statusId" item="statusId" open="(" separator=","
                                         close=")">
                                    #{statusId}
                                </foreach>
                            </if>
                        </if>
                        <if test='searchVO.otherArgs != null'>
                            <if test='searchVO.otherArgs.assigneeId != null and searchVO.otherArgs.assigneeId.size > 0'>
                                AND (
                                <if test='searchVO.otherArgs.assigneeIdNull != null and searchVO.otherArgs.assigneeIdNull == true'>
                                    (ai.assignee_id = 0 or ai.assignee_id is null) OR
                                </if>
                                ai.assignee_id in
                                <foreach collection="searchVO.otherArgs.assigneeId" item="aId" open="(" separator=","
                                         close=")">
                                    #{aId}
                                </foreach>
                                )
                            </if>
                        </if>
                        <if test='searchVO.contents != null and searchVO.contents.size != 0'>
                            and (
                            <foreach collection="searchVO.contents" item="content" index="index">
                                (CONCAT_WS('—', api.project_code, ai.issue_num) LIKE CONCAT(CONCAT('%', #{content}), '%')
                                OR ai.summary LIKE CONCAT(CONCAT('%',#{content}), '%'))
                            </foreach>
                            )
                        </if>
                    </if>
                )
            )
            order by ai.project_id ASC,ai.last_update_date desc
    </select>

    <select id="queryIssueByOption" resultType="io.choerodon.agile.infra.dto.IssueNumDTO">
        SELECT
        ai.issue_id, ai.summary,
        ai.project_id, ai.type_code,
        ai.issue_type_id,
        CONVERT(ai.issue_num,UNSIGNED) as issue_num_convert,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE ai.project_id = #{projectId} AND ai.type_code in ('story', 'task', 'bug', 'sub_task')
        <if test="activeSprintId != null">
            AND ai.issue_id IN (
            SELECT
            issue_id
            FROM
            agile_issue_sprint_rel
            WHERE
            project_id = #{projectId}
            AND sprint_id = #{activeSprintId})
        </if>
        <if test="issueFilterParamVO != null">
            <if test="issueFilterParamVO.issueId != null">
                AND ai.issue_id != #{issueFilterParamVO.issueId}
            </if>
            <if test="issueFilterParamVO.issueNum != null">
                AND ai.issue_num != #{issueFilterParamVO.issueNum}
            </if>
            <if test='issueFilterParamVO.content != null'>
                AND (ai.issue_num LIKE CONCAT(CONCAT('%', #{issueFilterParamVO.content}), '%') OR ai.summary LIKE CONCAT(CONCAT('%',
                #{issueFilterParamVO.content}), '%'))
            </if>
            <if test="issueFilterParamVO.userIds != null and issueFilterParamVO.userIds.size > 0">
                AND ai.assignee_id in
                <foreach collection="issueFilterParamVO.userIds" item="userId" open="(" close=")" separator=",">
                     #{userId}
                </foreach>
            </if>
        </if>
    </select>

    <select id="queryIssueByOptionForAgile" resultType="io.choerodon.agile.infra.dto.IssueNumDTO">
        select search.* from (
            SELECT
            ai.issue_id, ai.summary,
            ai.project_id, ai.type_code,
            ai.issue_type_id,
            CONVERT(ai.issue_num,UNSIGNED) as issue_num_convert,
            CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num
            FROM agile_issue ai
            LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
            WHERE ai.project_id = #{projectId}
            AND ai.type_code in ('story', 'task', 'bug')
            AND ai.apply_type = 'agile'
            AND (ai.relate_issue_id IS NULL OR ai.relate_issue_id = 0)
            <if test="issueId != null">
                AND ai.issue_id != #{issueId}
            </if>
            <if test="issueNum != null">
                AND ai.issue_num != #{issueNum}
            </if>
            <if test='excludeIssueIds != null and excludeIssueIds.size > 0'>
                AND ai.issue_id not in
                <foreach collection="excludeIssueIds" item="issueId" open="(" separator="," close=")">
                    #{issueId}
                </foreach>
            </if>
        ) search where 1=1
        <if test='content != null'>
            AND (search.issue_num LIKE CONCAT(CONCAT('%', #{content}), '%') OR search.summary LIKE CONCAT(CONCAT('%',
            #{content}), '%'))
        </if>
    </select>

    <select id="queryEpicList" resultType="io.choerodon.agile.infra.dto.EpicDataDTO">
        SELECT
            ai.issue_id,
            ai.summary,
            ai.description,
            ai.project_id,
            CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num,
            ai.epic_name,
            alv.name AS color,
            ai.object_version_number,
            ai.epic_sequence,
            ar.rank as epic_rank,
            ar.object_version_number as epic_ran_object_version_number
        FROM agile_issue ai
        LEFT JOIN lookup_value alv ON ai.color_code = alv.value_code
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_rank ar on ar.project_id = #{projectId} and ai.issue_id = ar.issue_id and ar.type = 'epic'
         ,agile_issue_status ais
        WHERE ai.project_id = #{projectId} AND ai.type_code = 'issue_epic'
        AND ais.project_id = ai.project_id
        AND ais.status_id = ai.status_id
        AND ais.is_completed != 1
        ORDER BY ai.epic_sequence DESC
    </select>

    <select id="queryEpicListByEpic" resultType="io.choerodon.agile.infra.dto.EpicDataDTO">
        SELECT
            ai.issue_id,
            ai.summary,
            ai.description,
            ai.project_id,
            ai.epic_name,
            alv.name AS color,
            ai.object_version_number,
            ai.epic_sequence
        FROM agile_issue ai LEFT JOIN lookup_value alv ON ai.color_code = alv.value_code
        WHERE ai.project_id = #{projectId} AND ai.issue_id = #{issueId}
    </select>

    <select id="queryTotalEstimateByEpicIds" resultType="io.choerodon.agile.infra.dto.IssueCountDTO">
        SELECT ai.issue_id AS id, IFNULL(ic.sp_count, 0) AS story_point_count
        FROM agile_issue ai
        LEFT JOIN (SELECT ai1.epic_id AS epic_id, SUM(ai1.story_points) AS sp_count
        FROM agile_issue ai1
        WHERE ai1.project_id = #{projectId} AND ai1.type_code = 'story'
        AND ai1.epic_id IN
        <foreach collection="epicIds" item="epicId" open="("
                 separator="," close=")">
            #{epicId}
        </foreach>
        GROUP BY ai1.epic_id
        ) ic ON ic.epic_id = ai.issue_id
        WHERE ai.issue_id IN
        <foreach collection="epicIds" item="epicId" open="("
                 separator="," close=")">
            #{epicId}
        </foreach>
    </select>

    <select id="queryNotEstimateIssueCountByEpicIds" resultType="io.choerodon.agile.infra.dto.IssueCountDTO">
        SELECT ai.issue_id AS id, IFNULL(ic.issue_count, 0) AS issue_count
        FROM agile_issue ai
        LEFT JOIN (SELECT ai1.epic_id AS epic_id, COUNT(1) AS issue_count
        FROM agile_issue ai1
        WHERE ai1.project_id = #{projectId} AND ai1.type_code = 'story' AND
        (ai1.story_points IS NULL OR ai1.story_points = 0) AND ai1.epic_id IN
        <foreach collection="epicIds" item="epicId" open="("
                 separator="," close=")">
            #{epicId}
        </foreach>
        GROUP BY ai1.epic_id
        ) ic ON ic.epic_id = ai.issue_id
        WHERE ai.issue_id IN
        <foreach collection="epicIds" item="epicId" open="("
                 separator="," close=")">
            #{epicId}
        </foreach>
    </select>


    <select id="queryIssueCountByEpicIds" resultType="io.choerodon.agile.infra.dto.IssueCountDTO">
        SELECT ai.issue_id AS id, IFNULL(ic.issue_count, 0) AS issue_count
        FROM agile_issue ai
        LEFT JOIN (SELECT ai1.epic_id AS epic_id, COUNT(1) AS issue_count
        FROM agile_issue ai1
        WHERE ai1.project_id = #{projectId} AND ai1.epic_id IN
        <foreach collection="epicIds" item="epicId" open="("
                 separator="," close=")">
            #{epicId}
        </foreach>
        GROUP BY ai1.epic_id
        ) ic ON ic.epic_id = ai.issue_id
        WHERE ai.issue_id IN
        <foreach collection="epicIds" item="epicId" open="("
                 separator="," close=")">
            #{epicId}
        </foreach>
    </select>

    <select id="queryDoneIssueCountByEpicIds" resultType="io.choerodon.agile.infra.dto.IssueCountDTO">
        SELECT ai.issue_id AS id, IFNULL(ic.issue_count, 0) AS issue_count
        FROM agile_issue ai
        LEFT JOIN (SELECT ai1.epic_id AS epic_id, COUNT(1) AS issue_count
        FROM agile_issue ai1, agile_issue_status ais
        WHERE ai1.project_id = #{projectId} AND ai1.status_id = ais.status_id and ai1.project_id = ais.project_id AND
        ais.is_completed = 1 AND ai1.epic_id IN
        <foreach collection="epicIds" item="epicId" open="("
                 separator="," close=")">
            #{epicId}
        </foreach>
        GROUP BY ai1.epic_id
        ) ic ON ic.epic_id = ai.issue_id
        WHERE ai.issue_id IN
        <foreach collection="epicIds" item="epicId" open="("
                 separator="," close=")">
            #{epicId}
        </foreach>
    </select>


    <select id="querySprintIssueIdsByCondition" resultType="java.lang.Long">
        SELECT
        ai.issue_id
        FROM agile_issue ai
        left join agile_issue_status ais on ais.status_id = ai.status_id and ais.project_id = ai.project_id
        LEFT JOIN (SELECT aisr.issue_id, asp.sprint_id
        FROM agile_issue_sprint_rel aisr, agile_sprint asp
        WHERE aisr.sprint_id = asp.sprint_id AND asp.status_code != 'closed'
        ) asp1 ON asp1.issue_id = ai.issue_id
        WHERE
        (ais.is_completed != 1 or ais.is_completed is null)
        and ai.project_id = #{projectId} AND ai.type_code in ('story', 'task', 'bug') AND
        ai.apply_type = 'agile'
        AND asp1.sprint_id IS NULL
        <if test='advancedSearchArgs != null'>
            <if test='advancedSearchArgs.versionId != null'>
                AND ai.issue_id IN (SELECT issue_id FROM agile_version_issue_rel WHERE version_id =
                #{advancedSearchArgs.versionId} AND relation_type = 'fix')
            </if>
            <if test='advancedSearchArgs.epicId != null'>
                AND ai.epic_id = #{advancedSearchArgs.epicId}
            </if>
            <if test='advancedSearchArgs.noVersion != "" and advancedSearchArgs.noVersion == "true"'>
                AND ai.issue_id NOT IN (SELECT issue_id FROM agile_version_issue_rel WHERE version_id != 0 AND
                relation_type = 'fix')
            </if>
            <if test='advancedSearchArgs.noEpic != "" and advancedSearchArgs.noEpic == "true"'>
                AND (ai.epic_id IS NULL OR ai.epic_id = 0)
            </if>
            <if test='advancedSearchArgs.featureId != null'>
                and ai.type_code = 'story' AND ai.feature_id = #{advancedSearchArgs.featureId}
            </if>
            <if test='advancedSearchArgs.noFeature != "" and advancedSearchArgs.noFeature == "true"'>
                and ai.type_code = 'story' AND (ai.feature_id IS NULL OR ai.feature_id = 0)
            </if>
            <if test='advancedSearchArgs.ownIssue != "" and advancedSearchArgs.ownIssue == "true"'>
                AND ai.assignee_id = #{userId}
            </if>
            <if test='advancedSearchArgs.onlyStory != "" and advancedSearchArgs.onlyStory == "true"'>
                AND ai.type_code = 'story'
            </if>
        </if>
        <if test='filterSql != null'>
            AND ai.issue_id IN (${filterSql})
        </if>
        <if test='assigneeFilterIds != null'>
            AND ai.assignee_id IN
            <foreach collection="assigneeFilterIds" item="assigneeFilterId"
                     open="(" close=")" separator=",">
                #{assigneeFilterId}
            </foreach>
        </if>
    </select>

    <select id="querySprintAllIssueIdsByCondition" resultType="io.choerodon.agile.api.vo.IssueIdSprintIdVO">
        SELECT
        ai.issue_id,
        ai.type_code,
        ai.assignee_id,
        aisr.sprint_id
        FROM agile_issue ai
        LEFT JOIN agile_issue_sprint_rel aisr ON aisr.issue_id = ai.issue_id
        LEFT JOIN agile_sprint asp on asp.sprint_id = aisr.sprint_id
        WHERE ai.project_id = #{projectId} AND ai.type_code in ('story', 'task', 'bug','sub_task') AND
        ai.apply_type = 'agile'
        AND  asp.status_code != 'closed'
        <if test='advancedSearchArgs != null'>
            <if test='advancedSearchArgs.versionId != null'>
                AND ai.issue_id IN (SELECT issue_id FROM agile_version_issue_rel WHERE version_id =
                #{advancedSearchArgs.versionId} AND relation_type = 'fix')
            </if>
            <if test='advancedSearchArgs.epicId != null'>
                AND ai.epic_id = #{advancedSearchArgs.epicId}
            </if>
            <if test='advancedSearchArgs.noVersion != "" and advancedSearchArgs.noVersion == "true"'>
                AND ai.issue_id NOT IN (SELECT issue_id FROM agile_version_issue_rel WHERE version_id != 0 AND
                relation_type = 'fix')
            </if>
            <if test='advancedSearchArgs.noEpic != "" and advancedSearchArgs.noEpic == "true"'>
                AND (ai.epic_id IS NULL OR ai.epic_id = 0)
            </if>
            <if test='advancedSearchArgs.featureId != null'>
                and ai.type_code = 'story' AND ai.feature_id = #{advancedSearchArgs.featureId}
            </if>
            <if test='advancedSearchArgs.noFeature != "" and advancedSearchArgs.noFeature == "true"'>
                and ai.type_code = 'story' AND (ai.feature_id IS NULL OR ai.feature_id = 0)
            </if>
            <if test='advancedSearchArgs.ownIssue != "" and advancedSearchArgs.ownIssue == "true"'>
                AND ai.assignee_id = #{userId}
            </if>
            <if test='advancedSearchArgs.onlyStory != "" and advancedSearchArgs.onlyStory == "true"'>
                AND ai.type_code = 'story'
            </if>
            <if test='advancedSearchArgs.assigneeFilterIds != null and advancedSearchArgs.assigneeFilterIds.size > 0'>
                AND ai.assignee_id IN
                <foreach collection="advancedSearchArgs.assigneeFilterIds" item="assigneeFilterId"
                         open="(" close=")" separator=",">
                    #{assigneeFilterId}
                </foreach>
            </if>
        </if>
        <if test='filterSql != null'>
            AND ai.issue_id IN (${filterSql})
        </if>
        <if test='assigneeFilterIds != null'>
            AND ai.assignee_id IN
            <foreach collection="assigneeFilterIds" item="assigneeFilterId"
                     open="(" close=")" separator=",">
                #{assigneeFilterId}
            </foreach>
        </if>
    </select>

    <insert id="batchIssueToVersion">
        INSERT IGNORE INTO agile_version_issue_rel
        (version_id, issue_id, project_id, relation_type, creation_date, last_update_date, created_by, last_updated_by)
        values
        <foreach collection="issueIds" item="issueId" index="index"
                 separator=",">
            (#{versionId}, #{issueId}, #{projectId}, 'fix', #{date}, #{date}, #{userId}, #{userId})
        </foreach>
    </insert>

    <!--<select id="queryInVersionIssueIds" resultType="java.lang.Long">-->
        <!--SELECT DISTINCT(ai.issue_id)-->
        <!--FROM agile_issue ai-->
        <!--LEFT JOIN agile_version_issue_rel avir ON avir.issue_id = ai.issue_id-->
        <!--WHERE ai.project_id = #{projectId} AND avir.version_id = #{versionId}-->
        <!--AND ai.issue_id IN-->
        <!--<foreach collection="issueIds" item="issueId" open="("-->
                 <!--separator="," close=")">-->
            <!--#{issueId}-->
        <!--</foreach>-->
    <!--</select>-->

    <update id="batchIssueToEpic">
        UPDATE agile_issue
        SET epic_id = #{epicId}
        WHERE project_id = #{projectId} AND issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </update>


    <update id="batchUpdateIssueRank">
        UPDATE agile_issue
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="rank =case" suffix="end,">
                <foreach collection="moveIssues" item="moveIssue">
                    when issue_id = #{moveIssue.issueId} then #{moveIssue.rank}
                </foreach>
            </trim>
        </trim>
        WHERE project_id = #{projectId} AND issue_id IN
        <foreach collection="moveIssues" item="moveIssue" open="("
                 separator="," close=")">
            #{moveIssue.issueId,jdbcType=BIGINT}
        </foreach>
    </update>

    <select id="querySubIssueIds" resultType="java.lang.Long">
        SELECT issue_id
        FROM agile_issue
        WHERE project_id = #{projectId} AND parent_issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </select>

    <select id="querySubBugIds" resultType="java.lang.Long">
        SELECT ai.issue_id
        FROM agile_issue ai
        WHERE ai.project_id = #{projectId} and ai.type_code = 'bug' AND ai.relate_issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </select>

    <select id="queryIssueByIssueIds" resultMap="issueSearch">
        SELECT
        ai.issue_id, CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        ai.type_code,
        ai.summary,
        ai.issue_type_id,
        ai.priority_id,
        ai.reporter_id,
        ai.description,
        ai.assignee_id,
        ai.project_id,
        ai.epic_id,
        ai.feature_id,
        asp1.sprint_id,
        ai.story_points,
        ai.status_id,
        ai.object_version_number,
        ai.priority_code,
        ai1.epic_name AS issue_epic_name,
        alv2.name AS color,
        apv1.version_id AS version_id,
        apv1.name AS version_name
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_issue ai1 ON ai.epic_id = ai1.issue_id
        LEFT JOIN lookup_value alv2 ON ai1.color_code = alv2.value_code
        LEFT JOIN (SELECT aisr.issue_id, asp.sprint_id
        FROM agile_issue_sprint_rel aisr, agile_sprint asp
        WHERE aisr.sprint_id = asp.sprint_id AND asp.status_code != 'closed'
        ) asp1 ON asp1.issue_id = ai.issue_id
        LEFT JOIN (SELECT avir.issue_id, avir.version_id, apv.name
        FROM agile_version_issue_rel avir, agile_product_version apv
        WHERE apv.project_id = #{projectId} AND avir.version_id = apv.version_id
        ) apv1 ON apv1.issue_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </select>

    <select id="queryIssueSprintNotClosed" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        SELECT
            ai.issue_id,
            asp1.sprint_id,
            ai.status_id
        FROM agile_issue ai
            LEFT JOIN (SELECT
                           aisr.issue_id,
                           asp.sprint_id
                       FROM agile_issue_sprint_rel aisr, agile_sprint asp
                       WHERE aisr.sprint_id = asp.sprint_id AND asp.status_code != 'closed'
                             AND aisr.issue_id = #{issueId}
                      ) asp1 ON asp1.issue_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.issue_id = #{issueId}
    </select>

    <select id="queryIssueSubList" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        SELECT *
        FROM
            agile_issue
        WHERE
            parent_issue_id = #{issueId} AND project_id = #{projectId}
    </select>

    <select id="queryIssueSubListByIssueIds" resultType="java.lang.Long">
        SELECT issue_id
        FROM
        agile_issue
        WHERE project_id = #{projectId} AND parent_issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </select>

    <delete id="batchDeleteIssues">
        DELETE ai,ail,ailr,acir,avir,aisr,aic,aia,adl
        from agile_issue ai
        left join agile_issue_link ail on ail.issue_id = ai.issue_id OR linked_issue_id = ai.issue_id
        left join agile_label_issue_rel ailr on ailr.issue_id=ai.issue_id
        LEFT JOIN agile_component_issue_rel acir on acir.issue_id=ai.issue_id
        LEFT JOIN agile_version_issue_rel avir on avir.issue_id=ai.issue_id
        LEFT JOIN agile_issue_sprint_rel aisr on aisr.issue_id=ai.issue_id and aisr.project_id=ai.project_id
        LEFT JOIN agile_issue_comment aic on aic.issue_id=ai.issue_id
        LEFT JOIN agile_issue_attachment aia on aia.issue_id=ai.issue_id
        LEFT JOIN agile_data_log adl on adl.issue_id=ai.issue_id and adl.project_id=ai.project_id
        left join fd_field_value t1 on (t1.project_id = ai.project_id and t1.instance_id = ai.issue_id and t1.scheme_code = 'agile_issue')
        WHERE ai.project_id = #{projectId} AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </delete>

    <update id="batchUpdateIssueEpicId">
        UPDATE agile_issue
        SET epic_id = 0
        WHERE epic_id = #{issueId}
    </update>

    <select id="queryIssueEpicSelectList" resultType="io.choerodon.agile.api.vo.IssueEpicVO">
        SELECT
            ai.issue_id,
            ai.epic_name,
            ai.creation_date,
            alv.name AS epicColor
        FROM
            agile_issue ai
            LEFT JOIN lookup_value alv ON ai.color_code = alv.value_code
            LEFT JOIN agile_project_info api ON api.project_id = ai.project_id
            LEFT JOIN agile_issue_status ais ON ais.status_id = ai.status_id AND ais.project_id = ai.project_id
        WHERE
            ai.project_id = #{projectId}
            AND ai.type_code = 'issue_epic'
            <if test="param != null">
                AND (
                    ai.epic_name LIKE CONCAT(CONCAT('%', #{param}), '%')
                    OR CONCAT_WS('-', api.project_code, ai.issue_num) LIKE CONCAT(CONCAT('%', #{param}), '%')
                )
            </if>
            <if test="onlyUnCompleted">
                AND ais.is_completed != 1
            </if>
            <if test="epicIds != null and epicIds.size() > 0">
                AND ai.issue_id NOT IN
                <foreach collection="epicIds" item="epicId" open="(" separator="," close=")">
                    #{epicId}
                </foreach>
            </if>
        ORDER BY ai.epic_sequence DESC
    </select>

    <delete id="batchRemoveFromVersion">
        DELETE FROM agile_version_issue_rel
        WHERE EXISTS
        (
        SELECT 0 FROM agile_product_version apv WHERE apv.version_id = agile_version_issue_rel.version_id
        AND apv.status_code != 'archived' and apv.status_code != 'released'
        )
        AND agile_version_issue_rel.project_id = #{projectId} AND agile_version_issue_rel.relation_type = 'fix' AND
        agile_version_issue_rel.issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </delete>

    <select id="queryIssueIdOrderByRankDesc" resultType="java.lang.Long">
        SELECT issue_id
        FROM agile_issue
        WHERE project_id = #{projectId} AND issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
        ORDER BY rank DESC
    </select>

    <select id="queryIssueIdOrderByRankAsc" resultType="java.lang.Long">
        SELECT issue_id
        FROM agile_issue
        WHERE project_id = #{projectId} AND issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
        ORDER BY rank ASC
    </select>

    <select id="queryRightRank" resultType="java.lang.String">
        SELECT
        MIN( ai.rank )
        FROM
        agile_issue ai
        WHERE
        ai.project_id = #{projectId}
        AND ai.type_code in ('story', 'task', 'bug', 'sub_task')
        AND ai.rank > #{leftRank}
        AND ai.issue_id
        <choose>
            <when test="sprintId != null and sprintId != 0">
                IN
            </when>
            <otherwise>
                NOT IN
            </otherwise>
        </choose>
        (
        SELECT
        aisr.issue_id
        FROM
        agile_issue_sprint_rel aisr,
        agile_sprint asp
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = asp.sprint_id
        AND asp.status_code != 'closed'
        <if test="sprintId != null and sprintId != 0">
            AND aisr.sprint_id = #{sprintId}
        </if>
        )
    </select>

    <select id="queryLeftRank" resultType="java.lang.String">
        SELECT
        MAX( ai.rank )
        FROM
        agile_issue ai
        WHERE
        ai.project_id = #{projectId}
        AND ai.type_code in ('story', 'task', 'bug', 'sub_task')
        AND ai.rank &lt; #{rightRank}
        AND ai.issue_id
        <choose>
            <when test="sprintId != null and sprintId != 0">
                IN
            </when>
            <otherwise>
                NOT IN
            </otherwise>
        </choose>
        (
        SELECT
        aisr.issue_id
        FROM
        agile_issue_sprint_rel aisr,
        agile_sprint asp
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = asp.sprint_id
        AND asp.status_code != 'closed'
        <if test="sprintId != null and sprintId != 0">
            AND aisr.sprint_id = #{sprintId}
        </if>
        )
    </select>


    <select id="queryRank" resultType="java.lang.String">
        SELECT
        ai.rank
        FROM
        agile_issue ai
        WHERE
        ai.project_id = #{projectId}
        AND ai.issue_id = #{outsetIssueId}
    </select>

    <select id="selectLabelNameByIssueId" resultType="io.choerodon.agile.infra.dto.IssueLabelDTO">
        SELECT ail.*
        FROM
            agile_label_issue_rel alir,
            agile_issue_label ail
        WHERE
            ail.label_id = alir.label_id
            AND alir.issue_id = #{issueId}
    </select>

    <select id="querySubTaskIds" resultType="java.lang.Long">
        SELECT ai2.issue_id
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr, agile_issue ai2
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
              AND ai.status_id = ais.status_id AND ai.project_id = ais.project_id and ais.is_completed != 1
              AND ai2.parent_issue_id = ai.issue_id
    </select>

    <delete id="removeIssueFromSprintByIssueIds">
        DELETE FROM agile_issue_sprint_rel WHERE EXISTS (SELECT 0 FROM agile_sprint asp WHERE asp.sprint_id =
        agile_issue_sprint_rel.sprint_id AND asp.status_code != 'closed' ) and agile_issue_sprint_rel.project_id =
        #{projectId}
        AND agile_issue_sprint_rel.issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" separator="," close=")">
            #{issueId}
        </foreach>
    </delete>

    <delete id="deleteIssueFromSprintByIssueId">
        DELETE
        FROM agile_issue_sprint_rel
        WHERE project_id = #{projectId} AND issue_id = #{issueId}
    </delete>

    <insert id="issueToDestinationByIds">
        INSERT IGNORE INTO agile_issue_sprint_rel
        (issue_id, sprint_id, project_id, creation_date, last_update_date, created_by, last_updated_by) VALUES
        <foreach collection="issueIds" item="issueId" index="index"
                 separator=",">
            (#{issueId}, #{sprintId}, #{projectId}, #{date}, #{date}, #{userId}, #{userId})
        </foreach>
    </insert>

    <select id="querySubIssueIdsByIssueId" resultType="java.lang.Long">
        SELECT issue_id
        FROM agile_issue
        WHERE project_id = #{projectId} AND parent_issue_id = #{issueId}
    </select>

    <select id="querySubBugIdsByIssueId" resultType="java.lang.Long">
        SELECT issue_id
        FROM agile_issue
        WHERE project_id = #{projectId} AND relate_issue_id = #{issueId}
    </select>

    <select id="queryIssueEpicInfoByIssueIds" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        select ai.* from agile_issue ai where ai.issue_id in
        <foreach collection="issueIds" item="issueId" open="(" separator=","
                 close=")">
            #{issueId}
        </foreach>
    </select>

    <select id="queryIssueByIssueNumOrIssueId" resultType="io.choerodon.agile.infra.dto.IssueNumDTO">
        SELECT
        ai.issue_id, ai.summary,
        ai.project_id, ai.type_code,
        ai.issue_type_id,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE ai.project_id = #{projectId}
        <choose>
            <when test="issueId != null">
                AND ai.issue_id = #{issueId}
            </when>
            <when test="issueNum != null">
                AND ai.issue_num = #{issueNum}
            </when>
            <otherwise>
                AND FALSE
            </otherwise>
        </choose>
    </select>

    <select id="listByIssueIds" resultType="io.choerodon.agile.infra.dto.IssueInfoDTO">
        SELECT
        ai.issue_id,
        CONVERT(ai.issue_num,UNSIGNED) as issue_num_convert,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE ai.issue_id IN
        <foreach collection="issueIds" item="issueId" open="(" separator=","
                 close=")">
            #{issueId}
        </foreach>
        ORDER BY issue_num_convert
    </select>

    <select id="listIssueWithLinkedIssues" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        SELECT search.* from (
        SELECT
        ai.issue_id,
        ai.type_code,
        ai.summary,
        ai.status_id,
        ai.priority_id,
        ai.assignee_id,
        ai.project_id,
        ai.issue_type_id,
        CONVERT(ai.issue_num,UNSIGNED) as issue_num_convert,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE ai.project_id = #{projectId}
        and ai.issue_id in
        (
        select ail.linked_issue_id
        from agile_issue_link ail, agile_issue ai2
        where ai2.project_id = #{projectId} and ail.issue_id = ai2.issue_id and ai2.apply_type = 'test'
        )
        AND ai.type_code in ('story', 'task', 'bug', 'issue_test', 'issue_auto_test')
        <if test='searchArgs != null'>
            <if test='searchArgs.summary != null and searchArgs.summary != "" '>
                AND ai.summary LIKE CONCAT(CONCAT('%' ,#{searchArgs.summary}) ,'%')
            </if>
            <if test='searchArgs.assigneeId != null and searchArgs.assigneeId != ""'>
                AND ai.assignee_id = #{searchArgs.assigneeId}
            </if>
        </if>
        <if test='advancedSearchArgs != null'>
            <if test='advancedSearchArgs.issueTypeId != null and advancedSearchArgs.issueTypeId.size > 0'>
                AND ai.issue_type_id IN
                <foreach collection="advancedSearchArgs.issueTypeId" item="issueTypeId" open="(" separator=","
                         close=")">
                    #{issueTypeId}
                </foreach>
            </if>
            <if test='advancedSearchArgs.priorityId != null and advancedSearchArgs.priorityId.size > 0'>
                AND ai.priority_id IN
                <foreach collection="advancedSearchArgs.priorityId" item="priorityId" open="(" separator=","
                         close=")">
                    #{priorityId}
                </foreach>
            </if>
            <if test='advancedSearchArgs.statusId != null and advancedSearchArgs.statusId.size > 0'>
                and ai.status_id in
                <foreach collection="advancedSearchArgs.statusId" item="statusId" open="(" separator="," close=")">
                    #{statusId}
                </foreach>
            </if>
        </if>
        <if test='otherArgs != null'>
            <if test='otherArgs.component != null and otherArgs.component.size > 0'>
                AND ai.issue_id in (
                SELECT acir.issue_id FROM
                agile_component_issue_rel acir WHERE acir.component_id
                in
                <foreach collection="otherArgs.component" item="componentId" open="(" separator=","
                         close=")">
                    #{componentId}
                </foreach>
                )
            </if>
            <if test='otherArgs.version != null and otherArgs.version.size > 0'>
                AND ai.issue_id in (
                SELECT avir.issue_id FROM
                agile_version_issue_rel avir WHERE avir.version_id
                in
                <foreach collection="otherArgs.version" item="versionId" open="(" separator=","
                         close=")">
                    #{versionId}
                </foreach>
                )
            </if>
            <if test='otherArgs.sprint != null and otherArgs.sprint.size > 0'>
                AND ai.issue_id in (
                SELECT aisr.issue_id FROM
                agile_issue_sprint_rel aisr where aisr.sprint_id
                in
                <foreach collection="otherArgs.sprint" item="sprintId" open="(" separator=","
                         close=")">
                    #{sprintId}
                </foreach>
                )
            </if>
            <if test='otherArgs.label != null and otherArgs.label.size > 0'>
                AND ai.issue_id in (
                SELECT alir.issue_id FROM
                agile_label_issue_rel alir where alir.label_id
                in
                <foreach collection="otherArgs.label" item="labelId" open="(" separator=","
                         close=")">
                    #{labelId}
                </foreach>
                )
            </if>
            <if test='otherArgs.issueIds != null and otherArgs.issueIds.size > 0'>
                AND ai.issue_id in
                <foreach collection="otherArgs.issueIds" item="issueId" open="(" separator=","
                         close=")">
                    #{issueId}
                </foreach>
            </if>
        </if>
        )search where 1=1
        <if test='searchArgs != null'>
            <if test='searchArgs.issueNum != null and searchArgs.issueNum != ""'>
                AND search.issue_num LIKE CONCAT(CONCAT('%' ,#{searchArgs.issueNum}) ,'%')
            </if>
        </if>
        <if test='contents != null and contents.size != 0'>
            <foreach collection="contents" item="content" index="index">
                AND (search.issue_num LIKE CONCAT(CONCAT('%', #{content}), '%') OR search.summary LIKE
                CONCAT(CONCAT('%',
                #{content}), '%'))
            </foreach>
        </if>
    </select>

    <select id="listIssueWithoutSubToTestComponent" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        SELECT search.* from (
        SELECT
        ai.issue_id,
        ai.type_code,
        ai.summary,
        ai.status_id,
        ai.priority_id,
        ai.assignee_id,
        ai.project_id,
        ai.issue_type_id,
        CONVERT(ai.issue_num,UNSIGNED) as issue_num_convert,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE ai.project_id = #{projectId} AND ai.type_code in ('story', 'task', 'bug', 'issue_test', 'issue_auto_test')
        <if test='searchArgs != null'>
            <if test='searchArgs.summary != null and searchArgs.summary != "" '>
                AND ai.summary LIKE CONCAT(CONCAT('%' ,#{searchArgs.summary}) ,'%')
            </if>
            <if test='searchArgs.assigneeId != null and searchArgs.assigneeId != ""'>
                AND ai.assignee_id = #{searchArgs.assigneeId}
            </if>
        </if>
        <if test='advancedSearchArgs != null'>
            <if test='advancedSearchArgs.issueTypeId != null and advancedSearchArgs.issueTypeId.size > 0'>
                AND ai.issue_type_id IN
                <foreach collection="advancedSearchArgs.issueTypeId" item="issueTypeId" open="(" separator=","
                         close=")">
                    #{issueTypeId}
                </foreach>
            </if>
            <if test='advancedSearchArgs.priorityId != null and advancedSearchArgs.priorityId.size > 0'>
                AND ai.priority_id IN
                <foreach collection="advancedSearchArgs.priorityId" item="priorityId" open="(" separator=","
                         close=")">
                    #{priorityId}
                </foreach>
            </if>
            <if test='advancedSearchArgs.statusId != null and advancedSearchArgs.statusId.size > 0'>
                and ai.status_id in
                <foreach collection="advancedSearchArgs.statusId" item="statusId" open="(" separator="," close=")">
                    #{statusId}
                </foreach>
            </if>
        </if>
        <if test='otherArgs != null'>
            <if test='otherArgs.component != null and otherArgs.component.size > 0'>
                AND ai.issue_id in (
                SELECT acir.issue_id FROM
                agile_component_issue_rel acir WHERE acir.component_id
                in
                <foreach collection="otherArgs.component" item="componentId" open="(" separator=","
                         close=")">
                    #{componentId}
                </foreach>
                )
            </if>
            <if test='otherArgs.version != null and otherArgs.version.size > 0'>
                AND ai.issue_id in (
                SELECT avir.issue_id FROM
                agile_version_issue_rel avir WHERE avir.version_id
                in
                <foreach collection="otherArgs.version" item="versionId" open="(" separator=","
                         close=")">
                    #{versionId}
                </foreach>
                )
            </if>
            <if test='otherArgs.sprint != null and otherArgs.sprint.size > 0'>
                AND ai.issue_id in (
                SELECT aisr.issue_id FROM
                agile_issue_sprint_rel aisr where aisr.sprint_id
                in
                <foreach collection="otherArgs.sprint" item="sprintId" open="(" separator=","
                         close=")">
                    #{sprintId}
                </foreach>
                )
            </if>
            <if test='otherArgs.label != null and otherArgs.label.size > 0'>
                AND ai.issue_id in (
                SELECT alir.issue_id FROM
                agile_label_issue_rel alir where alir.label_id
                in
                <foreach collection="otherArgs.label" item="labelId" open="(" separator=","
                         close=")">
                    #{labelId}
                </foreach>
                )
            </if>
            <if test='otherArgs.issueIds != null and otherArgs.issueIds.size > 0'>
                AND ai.issue_id in
                <foreach collection="otherArgs.issueIds" item="issueId" open="(" separator=","
                         close=")">
                    #{issueId}
                </foreach>
            </if>
        </if>
        )search where 1=1
        <if test='searchArgs != null'>
            <if test='searchArgs.issueNum != null and searchArgs.issueNum != ""'>
                AND search.issue_num LIKE CONCAT(CONCAT('%' ,#{searchArgs.issueNum}) ,'%')
            </if>
        </if>
        <if test='contents != null and contents.size != 0'>
            <foreach collection="contents" item="content" index="index">
                AND (search.issue_num LIKE CONCAT(CONCAT('%', #{content}), '%') OR search.summary LIKE
                CONCAT(CONCAT('%',
                #{content}), '%'))
            </foreach>
        </if>
    </select>

    <select id="listIssueIdsWithoutSubDetail" resultType="java.lang.Long">
        SELECT search.issue_id from (
        SELECT
        ai.issue_id,
        ai.summary,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE ai.project_id = #{projectId} and ai.type_code in ('story', 'task', 'bug', 'issue_test', 'issue_auto_test', 'sub_task')
        <if test='searchArgs != null'>
            <if test='searchArgs.summary != null and searchArgs.summary != "" '>
                AND ai.summary LIKE CONCAT(CONCAT('%' ,#{searchArgs.summary}) ,'%')
            </if>
            <if test='searchArgs.assigneeId != null and searchArgs.assigneeId != ""'>
                AND ai.assignee_id = #{searchArgs.assigneeId}
            </if>
        </if>
        <if test='advancedSearchArgs != null'>
            <if test='advancedSearchArgs.issueTypeId != null and advancedSearchArgs.issueTypeId.size > 0'>
                AND ai.issue_type_id IN
                <foreach collection="advancedSearchArgs.issueTypeId" item="issueTypeId" open="(" separator=","
                         close=")">
                    #{issueTypeId}
                </foreach>
            </if>
            <if test='advancedSearchArgs.priorityId != null and advancedSearchArgs.priorityId.size > 0'>
                AND ai.priority_id IN
                <foreach collection="advancedSearchArgs.priorityId" item="priorityId" open="(" separator=","
                         close=")">
                    #{priorityId}
                </foreach>
            </if>
            <if test='advancedSearchArgs.statusId != null and advancedSearchArgs.statusId.size > 0'>
                and ai.status_id in
                <foreach collection="advancedSearchArgs.statusId" item="statusId" open="(" separator="," close=")">
                    #{statusId}
                </foreach>
            </if>
        </if>
        <if test='otherArgs != null'>
            <if test='otherArgs.component != null and otherArgs.component.size > 0'>
                AND ai.issue_id in (
                SELECT acir.issue_id FROM
                agile_component_issue_rel acir WHERE acir.component_id
                in
                <foreach collection="otherArgs.component" item="componentId" open="(" separator=","
                         close=")">
                    #{componentId}
                </foreach>
                )
            </if>
            <if test='otherArgs.version != null and otherArgs.version.size > 0'>
                AND ai.issue_id in (
                SELECT avir.issue_id FROM
                agile_version_issue_rel avir WHERE avir.version_id
                in
                <foreach collection="otherArgs.version" item="versionId" open="(" separator=","
                         close=")">
                    #{versionId}
                </foreach>
                )
            </if>
            <if test='otherArgs.sprint != null and otherArgs.sprint.size > 0'>
                AND ai.issue_id in (
                SELECT aisr.issue_id FROM
                agile_issue_sprint_rel aisr where aisr.sprint_id
                in
                <foreach collection="otherArgs.sprint" item="sprintId" open="(" separator=","
                         close=")">
                    #{sprintId}
                </foreach>
                )
            </if>
            <if test='otherArgs.label != null and otherArgs.label.size > 0'>
                AND ai.issue_id in (
                SELECT alir.issue_id FROM
                agile_label_issue_rel alir where alir.label_id
                in
                <foreach collection="otherArgs.label" item="labelId" open="(" separator=","
                         close=")">
                    #{labelId}
                </foreach>
                )
            </if>
            <if test='otherArgs.issueIds != null and otherArgs.issueIds.size > 0'>
                AND ai.issue_id in
                <foreach collection="otherArgs.issueIds" item="issueId" open="(" separator=","
                         close=")">
                    #{issueId}
                </foreach>
            </if>
        </if>
        )search where 1=1
        <if test='searchArgs != null'>
            <if test='searchArgs.issueNum != null and searchArgs.issueNum != ""'>
                AND search.issue_num LIKE CONCAT(CONCAT('%' ,#{searchArgs.issueNum}) ,'%')
            </if>
        </if>
        <if test='contents != null and contents.size != 0'>
            <foreach collection="contents" item="content" index="index">
                AND (search.issue_num LIKE CONCAT(CONCAT('%', #{content}), '%') OR search.summary LIKE
                CONCAT(CONCAT('%',
                #{content}), '%'))
            </foreach>
        </if>
    </select>

    <select id="listIssueWithoutSubDetailByIssueIds" resultMap="issueComponentDetail">
        SELECT
        ai.issue_id,
        ai.type_code,
        ai.summary,
        ai.status_id,
        ai.assignee_id,
        ai.project_id,
        ai.last_update_date,
        ai.creation_date,
        ai.reporter_id,
        ai2.epic_name,
        alv2.name as epic_color,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num,
        ai.description,
        ai.priority_id,
        ai.issue_type_id
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_issue ai2 ON ai2.issue_id = ai.epic_id
        LEFT JOIN lookup_value alv2 ON ai2.color_code = alv2.value_code
        WHERE ai.issue_id in
        <foreach collection="issueIds" item="issueId" open="(" separator="," close=")">
            #{issueId}
        </foreach>
    </select>

    <select id="queryIssueNumByTimeSlot" resultType="io.choerodon.agile.infra.dto.IssueCreationNumDTO">
        SELECT
            DATE_FORMAT(creation_date, '%Y-%m-%d') AS creation_day,
            COUNT(issue_id)                        AS issue_count
        FROM
            agile_issue
        WHERE
            project_id = #{projectId}
            AND type_code = #{typeCode}
            AND #{date} &lt;= creation_date
        GROUP BY
            DATE_FORMAT(creation_date, '%Y-%m-%d')
        ORDER BY
            creation_day
    </select>

    <select id="queryIssueWithNoCloseSprint" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        SELECT
            ai.issue_id,
            ai.type_code,
            ai.issue_type_id,
            ai.status_id,
            ai.apply_type,
            ai.epic_id,
            sprint.sprint_id,
            ai.estimate_time,
            ai.remaining_time,
            ai.relate_issue_id,
            ai.parent_issue_id,
            ai.is_pre_sprint_done
        FROM
            agile_issue ai
            LEFT JOIN (
                          SELECT
                              aisr.issue_id,
                              asp.sprint_id
                          FROM
                              agile_issue_sprint_rel aisr
                              LEFT JOIN agile_sprint asp ON asp.sprint_id = aisr.sprint_id
                                                            AND asp.status_code != 'closed'
                      ) sprint ON sprint.issue_id = ai.issue_id
                                  AND sprint.sprint_id IS NOT NULL
        WHERE
            ai.issue_id = #{issueId}
    </select>

    <update id="batchUpdateSequence">
        UPDATE agile_issue
        SET epic_sequence = (epic_sequence + #{add})
        WHERE epic_sequence &gt;= #{sequence} AND project_id = #{projectId} AND type_code = 'issue_epic' and issue_id != #{issueId}
    </update>

    <select id="queryMaxEpicSequenceByProject" resultType="java.lang.Integer">
        SELECT ai.epic_sequence
        FROM
            agile_issue ai
        WHERE ai.project_id = #{projectId}
              AND ai.type_code = 'issue_epic'
        ORDER BY ai.epic_sequence DESC
        LIMIT 1;
    </select>

    <!--<select id="issueStatistic" resultType="io.choerodon.agile.infra.dto.PieChartDTO">-->
        <!--select * from (-->
        <!--SELECT-->
        <!--<if test="type!=null and type!=''">-->
            <!--<if test="type == 'component'">-->
                <!--other.component_id AS type_name,-->
                <!--otherName.name as name,-->
            <!--</if>-->
            <!--<if test="type == 'version'">-->
                <!--other.version_id AS type_name,-->
                <!--otherName.name as name,-->
            <!--</if>-->
            <!--<if test="type == 'label'">-->
                <!--other.label_id AS type_name,-->
                <!--otherName.label_name as name,-->
            <!--</if>-->
        <!--</if>-->
        <!--count( * ) AS value-->
        <!--FROM-->
        <!--agile_issue ai-->
        <!--<if test="type!=null and type!=''">-->
            <!--<if test="type == 'component'">-->
                <!--LEFT JOIN agile_component_issue_rel other on ai.issue_id = other.issue_id-->
                <!--LEFT JOIN agile_issue_component otherName on other.component_id = otherName.component_id-->
            <!--</if>-->
            <!--<if test="type == 'version'">-->
                <!--LEFT JOIN agile_version_issue_rel other on ai.issue_id = other.issue_id and other.relation_type = 'fix'-->
                <!--LEFT JOIN agile_product_version otherName on other.version_id = otherName.version_id-->
            <!--</if>-->
            <!--<if test="type == 'label'">-->
                <!--LEFT JOIN agile_label_issue_rel other on ai.issue_id = other.issue_id-->
                <!--LEFT JOIN agile_issue_label otherName on other.label_id = otherName.label_id-->
            <!--</if>-->
        <!--</if>-->
        <!--WHERE-->
        <!--ai.project_id = #{projectId}-->
        <!--<if test="issueTypes!=null and issueTypes.size > 0">-->
            <!--<foreach collection="issueTypes" item="issueType">-->
                <!--AND ai.type_code != #{issueType}-->
            <!--</foreach>-->
        <!--</if>-->
        <!--<if test="type!=null and type!=''">-->
            <!--GROUP BY-->
            <!--<if test="type == 'component'">-->
                <!--other.component_id-->
            <!--</if>-->
            <!--<if test="type == 'version'">-->
                <!--other.version_id-->
            <!--</if>-->
            <!--<if test="type == 'label'">-->
                <!--other.label_id-->
            <!--</if>-->
        <!--</if>-->
        <!--)pieData ORDER BY pieData.value DESC-->
    <!--</select>-->

    <select id="countIssueByProjectId" resultType="java.lang.Integer">
        select count(ai.issue_id)
        from agile_issue ai
        where ai.project_id = #{projectId}
        and ai.type_code in ('story', 'task', 'bug')
    </select>

    <select id="countUnResolveByProjectId" resultType="java.lang.Integer">
        select count(ai.issue_id)
        from agile_issue ai, agile_issue_status ais
        where ai.project_id = #{projectId}
        and ai.type_code in ('story', 'task', 'bug')
        and ai.status_id = ais.status_id and ai.project_id = ais.project_id and ais.is_completed != 1
    </select>

    <select id="queryIssueIdsByOptions" resultType="java.lang.Long">
        SELECT search.issue_issue_id from (
        SELECT
        ai.issue_id as issue_issue_id,
        ai.summary,
        CONCAT(api.project_code,'-', ai.issue_num) as issue_num,
        ai.reporter_id,
        ai.last_update_date,
        ai.priority_id,
        ai.assignee_id,
        ai.issue_type_id,
        ai.status_id
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE ai.project_id = #{projectId}
        <if test='advancedSearchArgs != null'>
            <if test='advancedSearchArgs.priorityId != null and advancedSearchArgs.priorityId.size > 0'>
                AND ai.priority_id IN
                <foreach collection="advancedSearchArgs.priorityId" item="priorityId" open="(" separator=","
                         close=")">
                    #{priorityId}
                </foreach>
            </if>
            <if test='advancedSearchArgs.issueTypeId != null and advancedSearchArgs.issueTypeId.size > 0'>
                AND ai.issue_type_id IN
                <foreach collection="advancedSearchArgs.issueTypeId" item="issueTypeId" open="(" separator=","
                         close=")">
                    #{issueTypeId}
                </foreach>
            </if>
            <if test='advancedSearchArgs.statusId != null and advancedSearchArgs.statusId.size > 0'>
                and ai.status_id in
                <foreach collection="advancedSearchArgs.statusId" item="statusId" open="(" separator="," close=")">
                    #{statusId}
                </foreach>
            </if>
            <if test='advancedSearchArgs.assigneeIds != null and advancedSearchArgs.assigneeIds.size > 0'>
                AND ai.assignee_id in
                <foreach collection="advancedSearchArgs.assigneeIds" item="assigneeId" open="(" separator=","
                         close=")">
                    #{assigneeId}
                </foreach>
            </if>

        </if>
        <if test='otherArgs != null'>
            <if test='otherArgs.version != null and otherArgs.version.size > 0'>
                AND ai.issue_id in (
                SELECT avir.issue_id FROM
                agile_version_issue_rel avir WHERE avir.version_id
                in
                <foreach collection="otherArgs.version" item="versionId" open="(" separator=","
                         close=")">
                    #{versionId}
                </foreach>
                )
            </if>
            <if test='otherArgs.issueIds != null and otherArgs.issueIds.size > 0'>
                AND ai.issue_id in
                <foreach collection="otherArgs.issueIds" item="issueId" open="(" separator=","
                         close=")">
                    #{issueId}
                </foreach>
            </if>
            <if test='otherArgs.summary != null and otherArgs.summary != ""'>
                AND ai.summary LIKE CONCAT(CONCAT('%' ,#{otherArgs.summary}) ,'%')
            </if>
            <if test='otherArgs.sprint != null and otherArgs.sprint.size > 0'>
                AND ai.issue_id in (
                SELECT aisr.issue_id FROM
                agile_issue_sprint_rel aisr where aisr.sprint_id
                in
                <foreach collection="otherArgs.sprint" item="sprintId" open="(" separator=","
                         close=")">
                    #{sprintId}
                </foreach>
                )
            </if>
            <if test='otherArgs.label != null and otherArgs.label.size > 0'>
                AND ai.issue_id in ( SELECT alir2.issue_id FROM
                agile_label_issue_rel alir2 WHERE alir2.label_id in
                <foreach collection="otherArgs.label" item="id" open="(" separator=","
                         close=")">
                    #{id}
                </foreach>)
            </if>
            <if test='otherArgs.componentIds != null and otherArgs.componentIds.size > 0'>
                AND ai.issue_id in(
                SELECT acir.issue_id FROM agile_component_issue_rel acir
                WHERE acir.component_id IN
                <foreach collection="otherArgs.componentIds" item="componentId" open="(" separator=","
                         close=")">
                    #{componentId}
                </foreach>)
            </if>
            <if test='otherArgs.versionStatusCode != null and otherArgs.versionStatusCode !=""'>
                AND ai.issue_id IN(
                SELECT avir.issue_id
                FROM agile_version_issue_rel avir,agile_product_version apv
                WHERE apv.status_code = #{otherArgs.versionStatusCode}
                AND apv.version_id = avir.version_id)
            </if>

        </if>
        )search where 1=1
        <if test='otherArgs != null'>
            <if test='otherArgs.issueNum != null and otherArgs.issueNum != ""'>
                AND search.issue_num LIKE CONCAT(CONCAT('%' ,#{otherArgs.issueNum}) ,'%')
            </if>
        </if>
        <if test='contents != null and contents.size != 0'>
            <foreach collection="contents" item="content" index="index">
                AND (search.issue_num LIKE CONCAT(CONCAT('%', #{content}), '%') OR search.summary LIKE
                CONCAT(CONCAT('%',
                #{content}), '%'))
            </foreach>
        </if>
    </select>

    <select id="queryUnDistributedIssues" resultType="io.choerodon.agile.infra.dto.UndistributedIssueDTO">
        SELECT
          ai.issue_id,
          CONVERT(ai.issue_num,UNSIGNED) as issue_num_convert,
          CONCAT_WS('-',api.project_code,ai.issue_num) AS issue_num,
          ai.type_code,
          ai.summary,
          ai.priority_id,
          ai.issue_type_id,
          ai.status_id
        from agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        left join agile_issue_status ais on ai.status_id = ais.status_id and ais.is_completed != 1 and ai.project_id = ais.project_id
        where ai.project_id = #{projectId}
        and ai.type_code in ('story','task','bug')
        and (ai.assignee_id is null or ai.assignee_id = 0)
        order by issue_num_convert desc
    </select>

    <select id="queryUnfinishedIssues" resultType="io.choerodon.agile.infra.dto.UnfinishedIssueDTO">
        SELECT
          ai.issue_id,
          CONVERT(ai.issue_num,UNSIGNED) as issue_num_convert,
          CONCAT_WS('-',api.project_code,ai.issue_num) AS issue_num,
          ai.type_code,
          ai.summary,
          ai.priority_id,
          ai.issue_type_id,
          ai.status_id
        from agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        right join agile_issue_status ais on ai.status_id = ais.status_id and ais.is_completed != 1 and ai.project_id = ais.project_id
        where ai.project_id = #{projectId}
        and ai.type_code in ('story','task','bug')
        and ai.assignee_id= #{assigneeId}
        order by issue_num_convert desc
        limit 6
    </select>

    <select id="queryVersionIdsByIssueId" resultType="java.lang.Long">
        SELECT distinct
        avir.version_id
        FROM
        agile_version_issue_rel avir
        where avir.issue_id = #{issueId} and avir.project_id = #{projectId}
    </select>

    <select id="queryIssueByEpicId" resultType="io.choerodon.agile.infra.dto.IssueBurnDownReportDTO">
        SELECT
            aaa.issue_id,
            aaa.issue_num,
            aaa.type_code,
            aaa.status_id,
            aaa.issue_type_id,
            aaa.completed,
            aaa.summary,
            aaa.priority_id,
            aaa.assignee_id,
            aaa.project_id,
            aaa.name,
            aaa.epic_name,
            aaa.id,
            aaa.story_points,
            aaa.add_date,
            CASE WHEN aaa.done_date &lt;= aaa.add_date
            THEN aaa.add_date
            ELSE aaa.done_date END as done_date
        FROM
            (
            SELECT
                ai.issue_id,
                CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num,
                ai.type_code,
                ai.status_id,
                ais.is_completed as completed,
                ai.summary,
                ai.assignee_id,
                ai.issue_type_id,
                ai.project_id,
                ai.priority_id,
                ai1.epic_name as name,
                ai1.epic_name,
                ai1.issue_id as id,
                ai.story_points,
                (
                SELECT
                    adl.creation_date
                FROM
                    agile_data_log adl
                WHERE
                    adl.issue_id = ai.issue_id
                    AND adl.project_id = #{projectId}
                    AND adl.field = 'Epic Link'
                    AND adl.new_value = '${epicId}'
                ORDER BY
                    adl.log_id DESC
                    LIMIT 1
                ) AS add_date,
                (
                SELECT
                    adl.creation_date
                FROM
                    agile_data_log adl
                WHERE
                    adl.issue_id = ai.issue_id
                    AND adl.project_id = #{projectId}
                    AND adl.field IN ('resolution', 'Auto Resolution')
                    AND adl.new_value is not null
                ORDER BY
                    adl.log_id DESC
                    LIMIT 1
                ) as done_date
            FROM
                agile_issue ai
                LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
                LEFT JOIN agile_issue ai1 ON ai.epic_id = ai1.issue_id
                LEFT JOIN agile_issue_status ais ON ais.status_id = ai.status_id and ais.project_id = #{projectId}
            WHERE
                ai.epic_id = #{epicId}
                AND ai.type_code in ('story', 'task', 'bug')
                AND ai.apply_type = 'agile'
            ) aaa
        WHERE
            aaa.add_date IS NOT NULL order by aaa.add_date asc
    </select>

    <select id="queryIssueByVersionId" resultType="io.choerodon.agile.infra.dto.IssueBurnDownReportDTO">
       SELECT
            aaa.issue_id,
            aaa.issue_num,
            aaa.type_code,
            aaa.status_id,
            aaa.completed,
            aaa.summary,
            aaa.priority_id,
            aaa.issue_type_id,
            aaa.assignee_id,
            aaa.project_id,
            aaa.name,
            aaa.id,
            aaa.story_points,
            aaa.add_date,
            CASE WHEN aaa.done_date &lt;= aaa.add_date
            THEN aaa.add_date
            ELSE aaa.done_date END as done_date
        FROM
            (
            SELECT
                ai.issue_id,
                CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num,
                ai.type_code,
                ai.status_id,
                ais.is_completed AS completed,
                ai.summary,
                ai.issue_type_id,
                ai.priority_id,
                ai.assignee_id,
                ai.project_id,
                ai.story_points,
                apv.name,
                apv.version_id as id,
                (
                SELECT
                    adl.creation_date
                FROM
                    agile_data_log adl
                WHERE
                    adl.issue_id = ai.issue_id
                    AND adl.project_id = #{projectId}
                    AND adl.field = 'Fix Version'
                    AND adl.new_value = '${versionId}'
                ORDER BY
                    adl.log_id DESC
                    LIMIT 1
                ) AS add_date,
                (
                SELECT
                    adl.creation_date
                FROM
                    agile_data_log adl
                WHERE
                    adl.issue_id = ai.issue_id
                    AND adl.project_id =  #{projectId}
                    AND adl.field = 'resolution'
                    AND adl.new_value IS NOT NULL
                ORDER BY
                    adl.log_id DESC
                    LIMIT 1
                ) AS done_date
            FROM
                agile_issue ai
                LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
                LEFT JOIN agile_version_issue_rel avir ON avir.issue_id = ai.issue_id
                left join agile_product_version apv on apv.version_id = avir.version_id
                LEFT JOIN agile_issue_status ais ON ais.status_id = ai.status_id and ais.project_id = ai.project_id
            WHERE
                avir.version_id = #{versionId}
                AND ai.project_id =  #{projectId}
                AND ai.type_code in ('story', 'task', 'bug')
                AND ai.apply_type = 'agile'
            ) aaa
        WHERE
            aaa.add_date IS NOT NULL order by aaa.add_date asc
    </select>

    <!--<select id="queryByIssueIds" resultMap="issueDetail">-->
        <!--SELECT-->
        <!--ai.issue_id,-->
        <!--ai.type_code,-->
        <!--ai.status_id,-->
        <!--ai.summary,-->
        <!--ai.priority_code,-->
        <!--ai.reporter_id,-->
        <!--ai.description,-->
        <!--ai.assignee_id,-->
        <!--ai.project_id,-->
        <!--ai.issue_type_id,-->
        <!--ai.priority_id-->
        <!--FROM-->
        <!--agile_issue ai-->
        <!--WHERE-->
        <!--ai.project_id = #{projectId}-->
        <!--AND ai.apply_type = 'test'-->
        <!--AND ai.issue_id IN-->
        <!--<foreach collection="issueIds" item="issueId" open="(" separator="," close=")">-->
            <!--#{issueId}-->
        <!--</foreach>-->
        <!--ORDER BY-->
        <!--field(ai.issue_id,-->
        <!--<foreach collection="issueIds" item="issueId" separator=",">-->
            <!--#{issueId}-->
        <!--</foreach>-->
        <!--);-->
    <!--</select>-->

    <select id="selectMaxRankByProjectId" resultType="java.lang.String">
        select ai.map_rank
        from agile_issue ai
        where ai.project_id = #{projectId}
        and ai.type_code in ('story','task','bug')
        order by ai.map_rank desc
        limit 1
    </select>

    <!--<select id="selectIssueIdsByProjectId" resultType="java.lang.Long">-->
        <!--select issue_id-->
        <!--from agile_issue-->
        <!--where project_id = #{projectId}-->
        <!--and type_code in ('story', 'task', 'bug')-->
        <!--order by map_rank, issue_id-->
    <!--</select>-->

    <!--<update id="updateMapRank">-->
        <!--UPDATE agile_issue-->
        <!--<trim prefix="set" suffixOverrides=",">-->
            <!--<trim prefix="map_rank =case" suffix="end,">-->
                <!--<foreach collection="mapMoveIssueDOS" item="moveIssue">-->
                    <!--when issue_id = #{moveIssue.issueId} then #{moveIssue.mapRank}-->
                <!--</foreach>-->
            <!--</trim>-->
        <!--</trim>-->
        <!--WHERE project_id = #{projectId} and type_code in ('story', 'task', 'bug')-->
        <!--AND issue_id IN-->
        <!--<foreach collection="mapMoveIssueDOS" item="moveIssue" open="("-->
                 <!--separator="," close=")">-->
            <!--#{moveIssue.issueId,jdbcType=BIGINT}-->
        <!--</foreach>-->
    <!--</update>-->

    <select id="queryIssueIdsIsTest" resultType="java.lang.Integer">
        select count(1)
        from agile_issue ai
        where ai.apply_type = 'test'
        AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </select>

    <select id="queryIssueIdsIsNotTest" resultType="java.lang.Integer">
        select count(1)
        from agile_issue ai
        where ai.apply_type = 'agile'
        AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </select>

    <delete id="batchRemoveFromVersionTest">
        DELETE avir
        FROM
        agile_version_issue_rel avir
        WHERE
        avir.project_id = #{projectId} AND avir.issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </delete>

    <select id="queryEpicDetailByIssueId" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        SELECT
                ai.issue_id,
                CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num,
                ai.project_id,
                ai.epic_name
            FROM
                agile_issue ai
                LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
                LEFT JOIN agile_issue_status ais ON ais.status_id = ai.status_id and ais.project_id = ai.project_id
            WHERE
                ai.issue_id = #{issueId}
                AND ai.type_code = 'issue_epic'
    </select>

    <select id="queryEpicWithStatusByIssueId" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        SELECT
            ai.issue_id,
            ais.is_completed as completed,
            ai.creation_date,
            (
            SELECT
                adl.creation_date
            FROM
                agile_data_log adl
            WHERE
                adl.issue_id = ai.issue_id
                AND adl.project_id = #{projectId}
                AND adl.field = 'resolution'
                AND adl.new_value is not null
            ORDER BY
                adl.log_id DESC
                LIMIT 1
            ) as done_date
        FROM
            agile_issue ai
            LEFT JOIN agile_issue_status ais ON ais.status_id = ai.status_id and ais.project_id = ai.project_id
        WHERE
            ai.issue_id = #{issueId}

    </select>

    <!--<select id="queryIssueTestGroupByProject" resultMap="issueProject">-->
        <!--SELECT-->
            <!--api.project_id,-->
            <!--ai.issue_id-->
        <!--FROM-->
            <!--agile_project_info api-->
            <!--LEFT JOIN agile_issue ai ON ai.project_id = api.project_id-->
        <!--WHERE-->
            <!--ai.apply_type = 'test'-->
    <!--</select>-->

    <resultMap id="issueProject" type="io.choerodon.agile.infra.dto.IssueProjectDTO">
        <id property="projectId" column="project_id"/>
        <collection property="issueIdList" autoMapping="true" ofType="java.lang.Long">
            <id property="issueId" column="issue_id"/>
        </collection>
    </resultMap>


    <select id="queryIssueSprintNotClosedByIssueIds" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        SELECT
        ai.issue_id,
        IFNULL(asp1.sprint_id, 0) AS sprint_id,
        ai.status_id
        FROM agile_issue ai
        LEFT JOIN (SELECT
        aisr.issue_id,
        asp.sprint_id
        FROM agile_issue_sprint_rel aisr, agile_sprint asp
        WHERE aisr.sprint_id = asp.sprint_id AND asp.status_code != 'closed'
        AND aisr.issue_id = #{issueId}
        ) asp1 ON asp1.issue_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.issue_id in
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </select>

    <select id="querySizeByApplyTypeAndStatusId" resultType="java.lang.Long">
        SELECT
        count(*)
        FROM agile_issue ai
        WHERE ai.project_id = #{projectId}
        AND ai.status_id = #{statusId}
        AND ai.apply_type = #{applyType}
    </select>

    <select id="queryByIssueTypeIdsAndApplyType" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        SELECT
        ai.*
        FROM agile_issue ai
        WHERE ai.project_id = #{projectId}
        AND ai.apply_type = #{applyType}
        AND ai.issue_type_id IN
        <foreach collection="issueTypeIds" item="index" open="(" separator="," close=")">
            #{index}
        </foreach>
    </select>

    <update id="updateIssueStatusByIssueTypeId">
        UPDATE agile_issue SET status_id = #{newStatusId},last_updated_by = #{userId}
        WHERE project_id = #{projectId}
        AND status_id = #{oldStatusId}
        AND issue_type_id = #{issueTypeId}
        AND apply_type = #{applyType}
    </update>

    <select id="queryIssueWithCompleteInfoByStatusId" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        SELECT
        ai.*,ais.is_completed as completed
        FROM agile_issue ai left join agile_issue_status ais on ais.status_id = ai.status_id and ai.project_id = ais.project_id
        WHERE ai.project_id = #{projectId}
        AND ai.status_id = #{statusId}
        AND ai.issue_type_id = #{issueTypeId}
        AND ai.apply_type = #{applyType}
    </select>

    <select id="selectUnCloseSprintId" resultType="java.lang.Long">
        select aisr.sprint_id
        from agile_issue_sprint_rel aisr, agile_sprint asp
        where aisr.issue_id = #{issueId} and aisr.project_id = #{projectId}
        and aisr.sprint_id = asp.sprint_id
        and asp.status_code != 'closed'
    </select>

    <update id="updateStayDate">
        update agile_issue set stay_date = #{nowDate}
        where issue_id in (
          select issue_id
          from agile_issue_sprint_rel aisr
          where aisr.project_id = #{projectId} and aisr.sprint_id = #{sprintId}
        )
        and project_id = #{projectId}
    </update>

    <select id="checkPriorityDelete" resultType="java.lang.Long">
        select count(ai.issue_id)
        from agile_issue ai
        where ai.priority_id = #{priorityId}
        AND ai.project_id IN
        <foreach collection="projectIds" item="index" open="(" separator="," close=")">
            #{index}
        </foreach>
    </select>

    <update id="batchUpdateIssuePriority">
        update agile_issue
        set priority_id = #{changePriorityId},last_updated_by = #{userId}
        where priority_id = #{priorityId}
        AND project_id IN
        <foreach collection="projectIds" item="index" open="(" separator="," close=")">
            #{index}
        </foreach>
    </update>

    <select id="queryIssuesByPriorityId" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        SELECT
        ai.*
        FROM agile_issue ai
        WHERE ai.priority_id = #{priorityId}
        AND ai.project_id IN
        <foreach collection="projectIds" item="index" open="(" separator="," close=")">
            #{index}
        </foreach>
    </select>

    <select id="queryIssueByIssueNum" resultType="io.choerodon.agile.infra.dto.IssueNumDTO">
        SELECT
        ai.issue_id, ai.summary,
        ai.project_id, ai.type_code,
        ai.issue_type_id,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE ai.project_id = #{projectId}
        AND ai.type_code in ('story', 'task', 'bug', 'sub_task')
        AND ai.apply_type = 'agile'
        AND ai.issue_num = #{issueNum}
    </select>

    <update id="updateSubBugRelateIssueId">
        update agile_issue
        set relate_issue_id = null
        where project_id = #{projectId} and relate_issue_id = #{issueId}
    </update>

    <select id="migrateTestCase" resultType="io.choerodon.agile.infra.dto.TestCaseDTO">
        SELECT issue_id as caseId,
               issue_num as caseNum,
               summary,
               description,
               project_id,
               object_version_number,
               created_by,
               creation_date,
               last_updated_by,
               last_update_date
        FROM agile_issue
        WHERE project_id = #{projectId}
          AND type_code in ('issue_test', 'issue_auto_test')
          AND apply_type = 'test'
    </select>

    <select id="queryProjectIds" resultType="long">
        SELECT DISTINCT project_id
        FROM agile_issue
        WHERE type_code IN ('issue_test','issue_auto_test')
        AND apply_type = 'test'
    </select>

    <select id="listIssueInfoByIssueIds" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        SELECT
        ai.issue_id as issue_id,
        ai.summary,
        CONCAT(api.project_code,'-', ai.issue_num) as issue_num,
        ai.reporter_id,
        ai.last_update_date,
        ai.priority_id,
        ai.assignee_id,
        ai.issue_type_id,
        ai.status_id,
        ai.type_code,
        ai.apply_type,
        ai.relate_issue_id,
        ai.object_version_number,
        ai.created_by,
        ai.estimated_start_time,
        ai.parent_issue_id,
        ai.estimated_end_time
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE
        ai.project_id = #{projectId}
        AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId" open="(" separator="," close=")">
            #{issueId}
        </foreach>
        <if test="issueQueryVO != null">
            <if test="issueQueryVO.summary != null">
                and ai.summary like concat(concat('%', #{issueQueryVO.summary}),'%')
            </if>
            <if test="issueQueryVO.statusId != null">
                and ai.status_id = #{issueQueryVO.statusId}
            </if>
            <if test="issueQueryVO.userId != null">
                and ai.assignee_id = #{issueQueryVO.userId}
            </if>
        </if>
    </select>
    <select id="selectIssueBysprint" resultType="io.choerodon.agile.api.vo.IssueOverviewVO">
        SELECT
            ai.issue_id,
            ais.is_completed AS completed,
            ais.category_code,
            ai.reporter_id,
            ai.assignee_id,
            ai.created_by,
            ai.type_code,
            ai.creation_date,
            ai.story_points,
            ai.status_id,
            ai.issue_type_id,
            ai.remaining_time
        FROM
            agile_issue ai
        JOIN agile_issue_sprint_rel aisr ON aisr.sprint_id = #{sprintId} AND ai.issue_id = aisr.issue_id
        JOIN agile_issue_status ais ON ai.status_id = ais.status_id AND ai.project_id = ais.project_id
        WHERE ai.project_id = #{projectId}
          <if test="statusSet != null and statusSet.size > 0">
              AND ai.type_code IN
                <foreach collection="statusSet" item="status" close=")" open="(" separator=",">
                    #{status}
                </foreach>
          </if>
    </select>

    <update id="updateStatusByStatusId">
        update agile_issue set status_id = #{statusId}
        where project_id = #{projectId} and status_id = #{currentStatusId}
    </update>

    <select id="selectStatusIdByIssueType" resultType="java.lang.Long">
        select ai.status_id from agile_issue ai
        where ai.project_id = #{projectId}
        AND ai.issue_type_id = #{issueTypeId}
        group by ai.status_id
    </select>

    <select id="countIssueTypeByStatusIds" resultType="io.choerodon.agile.infra.dto.IssueCountDTO">
        select ai.status_id as id,fit.`name` as name from agile_issue ai
        left join fd_issue_type fit on fit.id = ai.issue_type_id
        where ai.project_id = #{projectId}
        AND ai.status_id in
        <foreach collection="statusIds" item="statusId" open="(" separator="," close=")">
            #{statusId}
        </foreach>
        group by ai.status_id,ai.issue_type_id
    </select>

    <select id="selectIssueTypeIdsByStatusId" resultType="java.lang.Long">
        select ai.issue_type_id from agile_issue ai,fd_issue_type fit
        where ai.project_id = #{projectId}
        AND ai.status_id = #{statusId}
        AND fit.id = ai.issue_type_id
        AND fit.type_code not in ('issue_auto_test','issue_auto_test')
        group by ai.issue_type_id
    </select>

    <select id="querySubIssueByParentIssueId" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        select * from agile_issue ai
        where ai.project_id = #{projectId}
        AND (ai.parent_issue_id = #{parentIssueId} OR ai.relate_issue_id = #{parentIssueId})
    </select>

    <select id="listAvailableParents" resultType="io.choerodon.agile.api.vo.business.IssueVO">
        select
        t1.issue_id,
        t1.summary,
        CONVERT(t1.issue_num,UNSIGNED) as issue_num_convert,
        CONCAT_WS('-', t2.project_code, t1.issue_num) AS issue_num,
        t1.type_code,
        t1.issue_type_id
        from agile_issue t1
        LEFT JOIN agile_project_info t2 ON t1.project_id = t2.project_id
        where t1.project_id = #{projectId}
        <if test="issueType == 'bug'">
            and (
                t1.type_code = 'story'
                or t1.type_code = 'task'
            )
        </if>
        <if test="issueType == 'sub_task'">
            and (
                t1.type_code = 'story'
                or t1.type_code = 'task'
                or (t1.type_code = 'bug' and (t1.relate_issue_id is null or t1.relate_issue_id = 0))
            )
        </if>
        <if test="param != null">
            and (
                t1.summary like CONCAT(CONCAT('%', #{param}), '%')
                or CONCAT_WS('-', t2.project_code, t1.issue_num) like CONCAT(CONCAT('%', #{param}), '%')
            )
        </if>
        order by issue_num_convert desc
    </select>

    <select id="listMyStarIssuesByProjectIdsAndUserId" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        SELECT *
        FROM (
            SELECT
                ai.issue_id, ai.summary,
                ai.project_id, ai.type_code,
                CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num,
                ai.reporter_id,
                ai.last_update_date,
                ai.priority_id,
                ai.assignee_id,
                ai.issue_type_id,
                ai.status_id,
                ai.parent_issue_id,
                ai.relate_issue_id
            FROM
                agile_issue ai,
                agile_project_info api,
                agile_issue_status ais
            WHERE
                ai.project_id = api.project_id
                AND ais.project_id = ai.project_id
                AND ai.status_id = ais.status_id
                AND ai.project_id IN
                <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                    #{projectId}
                </foreach>
                AND
                (
                    (
                        ai.issue_id IN
                        <foreach collection="parentIssues" item="parentIssue" separator="," open="(" close=")">
                            #{parentIssue}
                        </foreach>
                    )
                    OR
                    (
                        ai.type_code IN ('sub_task','bug')
                        AND (
                            ai.parent_issue_id IN
                            <foreach collection="parentIssues" item="parentIssue" separator="," open="(" close=")">
                                #{parentIssue}
                            </foreach>
                            OR
                            ai.relate_issue_id IN
                            <foreach collection="parentIssues" item="parentIssue" separator="," open="(" close=")">
                                #{parentIssue}
                            </foreach>
                        )
                        AND ai.issue_id IN (
                            SELECT fsb.instance_id
                            FROM fd_star_beacon fsb
                            WHERE fsb.type = 'issue'
                            AND fsb.project_id IN
                            <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                                #{projectId}
                            </foreach>
                            AND fsb.user_id = #{userId}
                        )
                        <if test="searchVO != null">
                            <if test='searchVO.advancedSearchArgs != null'>
                                <if test='searchVO.advancedSearchArgs.typeCodes != null and searchVO.advancedSearchArgs.typeCodes.size > 0'>
                                    AND ai.type_code IN
                                    <foreach collection="searchVO.advancedSearchArgs.typeCodes" item="typeCode" open="(" separator=","
                                             close=")">
                                        #{typeCode}
                                    </foreach>
                                </if>
                                <if test='searchVO.advancedSearchArgs.priorityId != null and searchVO.advancedSearchArgs.priorityId.size > 0'>
                                    AND ai.priority_id IN
                                    <foreach collection="searchVO.advancedSearchArgs.priorityId" item="priorityId" open="(" separator=","
                                             close=")">
                                        #{priorityId}
                                    </foreach>
                                </if>
                                <if test='searchVO.advancedSearchArgs.statusId != null and searchVO.advancedSearchArgs.statusId.size > 0'>
                                    and ai.status_id in
                                    <foreach collection="searchVO.advancedSearchArgs.statusId" item="statusId" open="(" separator=","
                                             close=")">
                                        #{statusId}
                                    </foreach>
                                </if>
                            </if>
                            <if test='searchVO.otherArgs != null'>
                                <if test='searchVO.otherArgs.assigneeId != null and searchVO.otherArgs.assigneeId.size > 0'>
                                    AND (
                                    <if test='searchVO.otherArgs.assigneeIdNull != null and searchVO.otherArgs.assigneeIdNull == true'>
                                        (ai.assignee_id = 0 or ai.assignee_id is null) OR
                                    </if>
                                    ai.assignee_id in
                                    <foreach collection="searchVO.otherArgs.assigneeId" item="aId" open="(" separator=","
                                             close=")">
                                        #{aId}
                                    </foreach>
                                    )
                                </if>
                            </if>
                            <if test='searchVO.contents != null and searchVO.contents.size != 0'>
                                and (
                                <foreach collection="searchVO.contents" item="content" index="index">
                                    (CONCAT_WS('—', api.project_code, ai.issue_num) LIKE CONCAT(CONCAT('%', #{content}), '%')
                                    OR ai.summary LIKE CONCAT(CONCAT('%',#{content}), '%'))
                                </foreach>
                                )
                            </if>
                        </if>
                    )
                )
        ) search
        ORDER BY
        search.project_id ASC,
        search.last_update_date DESC
    </select>

    <select id="listUndoneAvailableParents" resultType="io.choerodon.agile.api.vo.business.IssueVO">
        select
        t1.issue_id,
        t1.summary,
        CONCAT_WS('-', t2.project_code, t1.issue_num) as issue_num
        from agile_issue t1
        left join agile_project_info t2 on t1.project_id = t2.project_id
        left join agile_issue_status t3 on t3.status_id = t1.status_id and t3.project_id = t1.project_id
        where t1.project_id = #{projectId}
        and t3.is_completed = 0
        and (
            t1.type_code = 'story'
            or t1.type_code = 'task'
            or (t1.type_code = 'bug' and (t1.relate_issue_id is null or t1.relate_issue_id = 0))
        )
        order by t1.issue_id desc
    </select>



    <resultMap id="issueCreateVOWithComponent" type="io.choerodon.agile.api.vo.business.IssueVO">
        <id property="issueId" column="issue_id"/>
        <result column="type_code" property="typeCode"/>
        <result column="sprint_id" property="sprintId"/>
        <collection property="componentIssueRelVOList"  ofType="io.choerodon.agile.api.vo.ComponentIssueRelVO">
            <id column="component_id" property="componentId"/>
        </collection>
    </resultMap>

    <select id="selectByIssueNum" resultMap="issueCreateVOWithComponent">
        select
        t1.issue_id,
        t1.type_code,
        t4.sprint_id,
        t3.component_id
        from agile_issue t1
        left join agile_project_info t2
        on t1.project_id = t2.project_id
        left join agile_component_issue_rel t3
        on (t3.project_id = #{projectId} and t3.issue_id = t1.issue_id)
        left join agile_issue_sprint_rel t4 on t1.issue_id = t4.issue_id
        left join agile_sprint t5 on (t4.sprint_id = t5.sprint_id and t5.status_code != 'closed')
        where t1.project_id = #{projectId}
        and CONCAT_WS( '-', t2.project_code, t1.issue_num ) = #{issueNum}
    </select>

    <select id="selectSubListByIssueIds" resultType="java.lang.Long">
        select ai.issue_id from agile_issue ai
        where ai.project_id = #{projectId}
        and ai.type_code in ('sub_task','bug')
        and ai.issue_id in
        <foreach collection="issueIds" item="issueId" open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        and (
           ai.parent_issue_id in (
             select ai1.issue_id from agile_issue ai1
             where ai1.project_id = #{projectId}
             and ai1.issue_id in
            <foreach collection="issueIds" item="issueId" open="(" close=")" separator=",">
                #{issueId}
            </foreach>
            )
            or
            ai.relate_issue_id in (
            select ai1.issue_id from agile_issue ai1
            where ai1.project_id = #{projectId}
            and ai1.issue_id in
            <foreach collection="issueIds" item="issueId" open="(" close=")" separator=",">
                #{issueId}
            </foreach>
           )
         )
    </select>

    <select id="selectActuatorCompletedDateByIssueIds" resultType="io.choerodon.agile.api.vo.GanttChartVO">
        select
        t2.issue_id,
        t3.creation_date as actual_completed_date
        from (
            select
            t1.issue_id,
            max(t1.log_id) as log_id
            from agile_data_log t1
            where t1.project_id = #{projectId}
            and t1.field in ('resolution', 'Auto Resolution')
            and t1.new_value is not null
            and t1.issue_id in
            <foreach collection="issueIds" item="issueId" open="(" close=")" separator=",">
                #{issueId}
            </foreach>
            group by t1.issue_id
        ) t2
        left join agile_data_log t3 on t2.log_id = t3.log_id
    </select>

    <select id="selectSubIssueIds" resultType="java.lang.Long">
        select ai.issue_id from agile_issue ai
        where
        ai.type_code in ('sub_task','bug')
        AND
        (ai.parent_issue_id = #{issueId}
         OR ai.relate_issue_id = #{issueId})
    </select>

    <select id="selectCountGroupByIssueTypeId" resultType="io.choerodon.agile.api.vo.IssueTypeCountVO">
        select
        t1.issue_type_id,
        count(t1.issue_id) as count
        from agile_issue t1
        where t1.project_id = #{projectId}
        and t1.issue_type_id in
        <foreach collection="issueTypeIds" item="issueTypeId" open="(" close=")" separator=",">
            #{issueTypeId}
        </foreach>
        group by t1.issue_type_id
    </select>

    <select id="selectIdsByIssueTypeIdsAndProjectIds" resultType="java.lang.Long">
        select issue_id
        from agile_issue
        where project_id in
        <foreach collection="projectIds" item="projectId" open="(" close=")" separator=",">
            #{projectId}
        </foreach>
        and issue_type_id = #{issueTypeId}
    </select>

    <update id="updateIssueLastUpdateInfo">
        update agile_issue
        set last_update_date = current_timestamp,
            last_updated_by = #{userId}
        where
            issue_id = #{issueId}
        and project_id = #{projectId}
    </update>

    <update id="batchUpdateIssueLastUpdateInfo">
        update agile_issue
        set last_update_date = current_timestamp,
        last_updated_by = #{userId}
        where
        issue_id in
        <foreach collection="issueIds" item="issueId" open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </update>


    <select id="selectDelayIssues" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        select
        ai.issue_id,
        ai.summary,
        concat_ws('-', api.project_code, ai.issue_num) as issue_num,
        ai.priority_id,
        ai.status_id,
        ai.estimated_start_time,
        ai.estimated_end_time,
        ai.assignee_id,
        ai.reporter_id,
        ai.main_responsible_id,
        ai.project_id
        from agile_issue ai
        left join agile_issue_status ais on ais.status_id = ai.status_id and ais.project_id = ai.project_id
        left join agile_project_info api on ai.project_id = api.project_id
        where ai.project_id in
        <foreach collection="projectIds" item="projectId" open="(" close=")" separator=",">
            #{projectId}
        </foreach>
        and ai.issue_id in (
            select aisr.issue_id
            from agile_sprint sprint
            join agile_issue_sprint_rel aisr on sprint.sprint_id = aisr.sprint_id
            where sprint.project_id in
            <foreach collection="projectIds" item="projectId" open="(" close=")" separator="," >
                #{projectId}
            </foreach>
            and sprint.status_code = 'started'
        )
        and ais.is_completed != 1
        and ai.estimated_end_time is not null
        and date(ai.estimated_end_time) &lt; date(#{date})
    </select>

    <select id="selectCustomChartPointVO" resultType="io.choerodon.agile.api.vo.report.CustomChartPointVO">
        SELECT ${selectSql}
        FROM agile_issue ai
        <if test="linkSql != null and linkSql != ''">
            ${linkSql}
        </if>
        WHERE ai.project_id in
        <foreach collection="projectIds" item="projectId" open="(" close=")" separator="," >
            #{projectId}
        </foreach>
        <if test="searchVO != null">
            <include refid="io.choerodon.agile.infra.mapper.IssueMapper.explainSearchVO"/>
        </if>
        <if test="extendSearchVO != null">
            <include refid="io.choerodon.agile.infra.mapper.IssueMapper.extendExplainSearchVO"/>
        </if>
        <include refid="io.choerodon.agile.infra.mapper.IssueMapper.filterSqlAndAssigneeIds"/>
        GROUP BY ${groupSql}
    </select>

    <select id="queryUnDoneIssues" resultType="java.lang.Long">
        <include refid="selectParentIssue"/>
        ORDER BY ai.rank
    </select>

    <select id="queryUnDoneAllIssues" resultType="java.lang.Long">
        (<include refid="selectParentIssue"/>)
        UNION ALL
        (
            <include refid="selectChildren"/>
        )
    </select>

    <select id="querySubIssueCount" resultType="io.choerodon.agile.infra.dto.IssueCountDTO">
        select
         SUM(CASE WHEN ais.is_completed = 1 THEN 1 ELSE 0 end) as successIssueCount,
         count(1) as issueCount
         from agile_issue ai
        LEFT JOIN agile_issue_status ais ON ai.project_id = ais.project_id AND ai.status_id = ais.status_id
        where ai.project_id = #{projectId}
        and (ai.parent_issue_id = #{parentIssueId} OR ai.relate_issue_id = #{parentIssueId})
    </select>

    <sql id = "selectParentIssue">
        SELECT
            ai.issue_id
        FROM agile_issue ai
        LEFT JOIN (
            SELECT
                aisr.issue_id, asp.sprint_id
            FROM agile_issue_sprint_rel aisr, agile_sprint asp
            WHERE asp.project_id = #{projectId}
            AND aisr.project_id = #{projectId}
            AND aisr.sprint_id = asp.sprint_id
            AND asp.status_code != 'closed'
        ) asp1 ON asp1.issue_id = ai.issue_id
        WHERE
        ai.project_id = #{projectId}
        and ai.type_code in ('story', 'task', 'bug')
        and (ai.relate_issue_id IS NULL OR ai.relate_issue_id = 0)
        and asp1.sprint_id IS NULL
        AND ai.status_id in
        <foreach collection="statusIds" item="statusId" open="(" separator="," close=")">
            #{statusId}
        </foreach>
        <include refid="filterSql"/>
    </sql>

    <sql id="selectChildren">
            select
                ai.issue_id
            from agile_issue ai
            where
            ai.project_id = #{projectId}
            AND ai.type_code in ('sub_task', 'bug')
            AND (
                ai.parent_issue_id in (<include refid="selectParentIssue"/>)
                OR ai.relate_issue_id in (<include refid="selectParentIssue"/>)
              )
            AND ai.status_id in
            <foreach collection="statusIds" item="statusId" open="(" separator="," close=")">
                #{statusId}
            </foreach>
            <include refid="filterChildrenSql"/>
    </sql>

    <sql id="filterChildrenSql">
        <if test='advancedSearchArgs != null'>
            <if test="advancedSearchArgs.sprintId != null">
                AND ai.issue_id in (
                   select aisr.issue_id from agile_issue_sprint_rel aisr
                   where aisr.project_id = #{projectId} and aisr.sprint_id = #{advancedSearchArgs.sprintId}
                )
            </if>
            <if test='advancedSearchArgs.versionId != null'>
                AND ai.issue_id IN (SELECT issue_id FROM agile_version_issue_rel WHERE version_id =
                #{advancedSearchArgs.versionId} AND relation_type = 'fix')
            </if>
            <if test='advancedSearchArgs.noVersion != "" and advancedSearchArgs.noVersion == "true"'>
                AND ai.issue_id NOT IN (SELECT issue_id FROM agile_version_issue_rel WHERE version_id != 0 AND
                relation_type = 'fix')
            </if>
            <if test='advancedSearchArgs.ownIssue != "" and advancedSearchArgs.ownIssue == "true"'>
                AND ai.assignee_id = #{userId}
            </if>
            <if test='advancedSearchArgs.onlyStory != "" and advancedSearchArgs.onlyStory == "true"'>
                AND ai.type_code = 'story'
            </if>
            <if test='advancedSearchArgs.assigneeFilterIds != null and advancedSearchArgs.assigneeFilterIds.size > 0'>
                AND ai.assignee_id IN
                <foreach collection="advancedSearchArgs.assigneeFilterIds" item="assigneeFilterId"
                         open="(" close=")" separator=",">
                    #{assigneeFilterId}
                </foreach>
            </if>
        </if>
    </sql>

    <sql id="filterSql">
        <if test='advancedSearchArgs != null'>
            <if test='advancedSearchArgs.versionId != null'>
                AND ai.issue_id IN (SELECT issue_id FROM agile_version_issue_rel WHERE version_id =
                #{advancedSearchArgs.versionId} AND relation_type = 'fix')
            </if>
            <if test='advancedSearchArgs.epicId != null'>
                AND ai.epic_id = #{advancedSearchArgs.epicId}
            </if>
            <if test='advancedSearchArgs.noVersion != "" and advancedSearchArgs.noVersion == "true"'>
                AND ai.issue_id NOT IN (SELECT issue_id FROM agile_version_issue_rel WHERE version_id != 0 AND
                relation_type = 'fix')
            </if>
            <if test='advancedSearchArgs.noEpic != "" and advancedSearchArgs.noEpic == "true"'>
                AND ai.type_code NOT IN ('sub_task') AND (ai.epic_id IS NULL OR ai.epic_id = 0)
            </if>
            <if test='advancedSearchArgs.featureId != null'>
                and ai.type_code IN ('story', 'task', 'bug') AND ai.feature_id = #{advancedSearchArgs.featureId}
            </if>
            <if test='advancedSearchArgs.noFeature != "" and advancedSearchArgs.noFeature == "true"'>
                and ai.type_code IN ('story', 'task', 'bug')  AND (ai.feature_id IS NULL OR ai.feature_id = 0)
                AND (ai.relate_issue_id IS NULL OR ai.relate_issue_id = 0)
            </if>
            <if test='advancedSearchArgs.ownIssue != "" and advancedSearchArgs.ownIssue == "true"'>
                AND ai.assignee_id = #{userId}
            </if>
            <if test='advancedSearchArgs.onlyStory != "" and advancedSearchArgs.onlyStory == "true"'>
                AND ai.type_code = 'story'
            </if>
            <if test='advancedSearchArgs.assigneeFilterIds != null and advancedSearchArgs.assigneeFilterIds.size > 0'>
                AND ai.assignee_id IN
                <foreach collection="advancedSearchArgs.assigneeFilterIds" item="assigneeFilterId"
                         open="(" close=")" separator=",">
                    #{assigneeFilterId}
                </foreach>
            </if>
        </if>
    </sql>

    <select id="queryChildrenIds" resultType="java.lang.Long">
          (
            SELECT
                ai.issue_id
            FROM agile_issue ai
            WHERE
             ai.relate_issue_id in
            <foreach collection="parentIssueIds" item="parentIssueId" open="(" separator="," close=")">
                #{parentIssueId}
            </foreach>
            <if test="statusIds != null and statusIds.size > 0">
                AND ai.status_id in
                <foreach collection="statusIds" item="statusId" open="(" close=")" separator=",">
                        #{statusId}
                </foreach>
            </if>
            and ai.type_code = 'bug'
            <include refid="filterChildrenSql"/>
           )
            UNION ALL
            (
            SELECT
                ai.issue_id
            FROM agile_issue ai
            WHERE
             ai.parent_issue_id in
            <foreach collection="parentIssueIds" item="parentIssueId" open="(" separator="," close=")">
                #{parentIssueId}
            </foreach>
            <if test="statusIds != null and statusIds.size > 0">
                AND ai.status_id in
                <foreach collection="statusIds" item="statusId" open="(" close=")" separator=",">
                    #{statusId}
                </foreach>
            </if>
            and ai.type_code = 'sub_task'
            <include refid="filterChildrenSql"/>
           )
    </select>

    <sql id="extendExplainSearchVO">
        <include refid="io.choerodon.agile.infra.mapper.IssueMapper.extendExplainSearchVOSql"/>
        <if test='extendSearchVO.otherArgs != null'>
            <include refid="io.choerodon.agile.infra.mapper.IssueMapper.extendOtherArgsSql1"/>
            <include refid="io.choerodon.agile.infra.mapper.IssueMapper.extendOtherArgsSql2"/>
            <include refid="io.choerodon.agile.infra.mapper.StarBeaconMapper.extendFilterStarBeaconSql"/>
        </if>
    </sql>

    <sql id="extendExplainSearchVOSql">
        <if test='extendSearchVO.searchArgs != null'>
            <if test='extendSearchVO.searchArgs.summary != null and extendSearchVO.searchArgs.summary != "" '>
                AND ai.summary LIKE concat(concat('%',#{extendSearchVO.searchArgs.summary}),'%')
            </if>
            <if test='extendSearchVO.searchArgs.storyPoints != null and extendSearchVO.searchArgs.storyPoints != "" '>
                AND ai.story_points LIKE concat(concat('%',#{extendSearchVO.searchArgs.storyPoints}),'%')
            </if>
            <if test='extendSearchVO.searchArgs.remainingTime != null and extendSearchVO.searchArgs.remainingTime != "" '>
                AND ai.remaining_time LIKE concat(concat('%',#{extendSearchVO.searchArgs.remainingTime}),'%')
            </if>
        </if>
        <if test='extendSearchVO.onlyStory != null and extendSearchVO.onlyStory'>
            and ai.type_code = 'story'
        </if>
        <if test='extendSearchVO.advancedSearchArgs != null'>
            <if test='extendSearchVO.advancedSearchArgs.issueTypeId != null and extendSearchVO.advancedSearchArgs.issueTypeId.size > 0'>
                AND ai.issue_type_id IN
                <foreach collection="extendSearchVO.advancedSearchArgs.issueTypeId" item="issueTypeId" open="(" separator=","
                         close=")">
                    #{issueTypeId}
                </foreach>
            </if>
            <if test='extendSearchVO.advancedSearchArgs.assigneeIds != null and extendSearchVO.advancedSearchArgs.assigneeIds.size > 0'>
                AND ai.assignee_id IN
                <foreach collection="extendSearchVO.advancedSearchArgs.assigneeIds" item="assigneeId" open="(" separator=","
                         close=")">
                    #{assigneeId}
                </foreach>
            </if>
            <if test='extendSearchVO.advancedSearchArgs.reporterIds != null and extendSearchVO.advancedSearchArgs.reporterIds.size > 0'>
                AND ai.reporter_id IN
                <foreach collection="extendSearchVO.advancedSearchArgs.reporterIds" item="reporterId" open="(" separator=","
                         close=")">
                    #{reporterId}
                </foreach>
            </if>
            <if test='extendSearchVO.advancedSearchArgs.priorityId != null and extendSearchVO.advancedSearchArgs.priorityId.size > 0'>
                AND ai.priority_id IN
                <foreach collection="extendSearchVO.advancedSearchArgs.priorityId" item="priorityId" open="(" separator=","
                         close=")">
                    #{priorityId}
                </foreach>
            </if>
            <if test='extendSearchVO.advancedSearchArgs.statusId != null and extendSearchVO.advancedSearchArgs.statusId.size > 0'>
                and ai.status_id in
                <foreach collection="extendSearchVO.advancedSearchArgs.statusId" item="statusId" open="(" separator=","
                         close=")">
                    #{statusId}
                </foreach>
            </if>
        </if>
        <if test='extendSearchVO.searchArgs != null'>
            <if test='extendSearchVO.searchArgs.updateStartDate != null and extendSearchVO.searchArgs.updateStartDate != "" and extendSearchVO.searchArgs.updateEndDate != null and extendSearchVO.searchArgs.updateEndDate != "" '>
                and ai.last_update_date &gt;= #{extendSearchVO.searchArgs.updateStartDate} and ai.last_update_date &lt;=
                #{extendSearchVO.searchArgs.updateEndDate}
            </if>
            <if test='extendSearchVO.searchArgs.createStartDate != null and extendSearchVO.searchArgs.createStartDate != "" and extendSearchVO.searchArgs.createEndDate != null and extendSearchVO.searchArgs.createEndDate != "" '>
                and ai.creation_date &gt;= #{extendSearchVO.searchArgs.createStartDate} and ai.creation_date &lt;=
                #{extendSearchVO.searchArgs.createEndDate}
            </if>
            <if test='extendSearchVO.searchArgs.component != null and extendSearchVO.searchArgs.component != "" '>
                AND ai.issue_id in (
                SELECT acir.issue_id FROM agile_component_issue_rel acir,agile_issue_component aic
                where acir.component_id = aic.component_id
                AND aic.name LIKE CONCAT(CONCAT('%' ,#{extendSearchVO.searchArgs.component}) ,'%') )
            </if>
            <if test='extendSearchVO.searchArgs.epic != null and extendSearchVO.searchArgs.epic != "" '>
                AND ai.issue_id in (
                SELECT ai3.issue_id FROM agile_issue ai3 ,agile_issue ai4
                where ai3.epic_id = ai4.issue_id
                AND ai4.epic_name LIKE CONCAT(CONCAT('%' ,#{extendSearchVO.searchArgs.epic}) ,'%') )
            </if>
            <if test='extendSearchVO.searchArgs.version != null and extendSearchVO.searchArgs.version != "" '>
                AND ai.issue_id in (
                SELECT avir.issue_id FROM agile_version_issue_rel avir,agile_product_version apv
                where avir.version_id = apv.version_id
                AND apv.name LIKE CONCAT(CONCAT('%' ,#{extendSearchVO.searchArgs.version}) ,'%') )
            </if>
            <if test='extendSearchVO.searchArgs.sprint != null and extendSearchVO.searchArgs.sprint != "" '>
                AND ai.issue_id in (
                SELECT aisr.issue_id FROM agile_issue_sprint_rel aisr,agile_sprint as2
                where aisr.sprint_id = as2.sprint_id
                AND as2.sprint_name LIKE CONCAT(CONCAT('%' ,#{extendSearchVO.searchArgs.sprint}) ,'%') )
            </if>
            <if test='extendSearchVO.searchArgs.label != null and extendSearchVO.searchArgs.label != "" '>
                AND ai.issue_id in (
                SELECT alir.issue_id FROM agile_label_issue_rel alir,agile_issue_label ail
                where alir.label_id = ail.label_id
                AND ail.label_name LIKE CONCAT(CONCAT('%' ,#{extendSearchVO.searchArgs.label}) ,'%') )
            </if>
            <if test='extendSearchVO.searchArgs.estimatedStartTimeScopeStart != null and extendSearchVO.searchArgs.estimatedStartTimeScopeStart != "" and extendSearchVO.searchArgs.estimatedStartTimeScopeEnd != null and extendSearchVO.searchArgs.estimatedStartTimeScopeEnd != ""'>
                and ai.estimated_start_time &gt;= #{extendSearchVO.searchArgs.estimatedStartTimeScopeStart} and ai.estimated_start_time &lt;=
                #{extendSearchVO.searchArgs.estimatedStartTimeScopeEnd}
            </if>

            <if test='extendSearchVO.searchArgs.estimatedEndTimeScopeStart != null and extendSearchVO.searchArgs.estimatedEndTimeScopeStart != "" and extendSearchVO.searchArgs.estimatedEndTimeScopeEnd != null and extendSearchVO.searchArgs.estimatedEndTimeScopeEnd != ""'>
                and ai.estimated_end_time &gt;= #{extendSearchVO.searchArgs.estimatedEndTimeScopeStart} and ai.estimated_end_time &lt;=
                #{extendSearchVO.searchArgs.estimatedEndTimeScopeEnd}
            </if>
        </if>
    </sql>

    <sql id="extendOtherArgsSql1">
        <if test='extendSearchVO.otherArgs.assigneeId != null and extendSearchVO.otherArgs.assigneeId.size > 0'>
            AND (
            <if test='extendSearchVO.otherArgs.assigneeIdNull != null and extendSearchVO.otherArgs.assigneeIdNull == true'>
                (ai.assignee_id = 0 or ai.assignee_id is null) OR
            </if>
            ai.assignee_id in
            <foreach collection="extendSearchVO.otherArgs.assigneeId" item="aId" open="(" separator=","
                     close=")">
                #{aId}
            </foreach>
            )
        </if>
        <if test='extendSearchVO.otherArgs.statusId != null and extendSearchVO.otherArgs.statusId.size > 0'>
            AND ai.status_id in
            <foreach collection="extendSearchVO.otherArgs.statusId" item="id" open="(" separator=","
                     close=")">
                #{id}
            </foreach>
        </if>
        <if test='extendSearchVO.otherArgs.resolution !=null'>
            AND ai.status_id in (
            select ais.status_id from agile_issue_status ais where ais.status_id = ai.status_id and ais.project_id =
            ai.project_id
            <choose>
                <when test="extendSearchVO.otherArgs.resolution == 'true'">
                    and ais.is_completed = 1
                </when>
                <otherwise>
                    and ais.is_completed = 0
                </otherwise>
            </choose>
            )
        </if>
        <if test='extendSearchVO.otherArgs.component != null and extendSearchVO.otherArgs.component.size > 0'>
            AND (
            <if test='extendSearchVO.otherArgs.componentNull != null and extendSearchVO.otherArgs.componentNull == true'>
                ai.issue_id in (SELECT ai12.issue_id from agile_issue ai12 left join
                agile_component_issue_rel acir2
                on ai12.issue_id = acir2.issue_id WHERE
                acir2.component_id is null ) OR
            </if>
            ai.issue_id in
            (SELECT acir2.issue_id FROM agile_component_issue_rel acir2 WHERE
            acir2.component_id in
            <foreach collection="extendSearchVO.otherArgs.component" item="id" open="(" separator=","
                     close=")">
                #{id}
            </foreach>
            ))
        </if>

        <if test='extendSearchVO.otherArgs.epic != null and extendSearchVO.otherArgs.epic.size > 0'>
            AND (
            <if test='extendSearchVO.otherArgs.epicNull != null and extendSearchVO.otherArgs.epicNull == true'>
                (((ai.epic_id is null or ai.epic_id = 0) and ai.type_code in ('story', 'task', 'bug', 'feature'))
                or (ai.parent_issue_id in (select ai7.issue_id from agile_issue ai7 where ai7.issue_id =
                ai.parent_issue_id and
                (ai7.epic_id is null or ai7.epic_id = 0) and ai.type_code = 'sub_task' ))) OR
            </if>
            ((ai.epic_id in
            <foreach collection="extendSearchVO.otherArgs.epic" item="id" open="(" separator=","
                     close=")">
                #{id}
            </foreach>
            and ai.type_code in ('story', 'task', 'bug', 'feature'))
            or (ai.parent_issue_id in (select ai7.issue_id from agile_issue ai7 where ai7.issue_id =
            ai.parent_issue_id and
            ai7.epic_id in
            <foreach collection="extendSearchVO.otherArgs.epic" item="id" open="(" separator=","
                     close=")">
                #{id}
            </foreach>
            ) and ai.type_code = 'sub_task'))
            )
        </if>
        <if test='extendSearchVO.otherArgs.feature != null and extendSearchVO.otherArgs.feature.size > 0'>
            AND (
            <if test='extendSearchVO.otherArgs.featureNull != null and extendSearchVO.otherArgs.featureNull == true'>
                ((ai.feature_id is null or ai.feature_id = 0) and ai.type_code in ('story', 'task', 'bug'))
                OR
            </if>
            (ai.feature_id in
            <foreach collection="extendSearchVO.otherArgs.feature" item="id" open="(" separator=","
                     close=")">
                #{id}
            </foreach>
            and ai.type_code in ('story', 'task', 'bug'))
            )
        </if>
        <if test='extendSearchVO.otherArgs.version != null and extendSearchVO.otherArgs.version.size > 0'>
            AND (
            <if test='extendSearchVO.otherArgs.versionNull != null and extendSearchVO.otherArgs.versionNull == true'>
                ai.issue_id in (SELECT ai31.issue_id from agile_issue ai31
                left join agile_version_issue_rel avir44
                on ai31.issue_id = avir44.issue_id
                WHERE avir44.version_id is null ) OR
            </if>
            ai.issue_id in ( SELECT avir3.issue_id FROM
            agile_version_issue_rel avir3 WHERE avir3.version_id in
            <foreach collection="extendSearchVO.otherArgs.version" item="id" open="(" separator=","
                     close=")">
                #{id}
            </foreach>)
            )
        </if>

        <if test='extendSearchVO.otherArgs.fixVersion != null and extendSearchVO.otherArgs.fixVersion.size > 0'>
            AND (
            <if test='extendSearchVO.otherArgs.fixVersionNull != null and extendSearchVO.otherArgs.fixVersionNull == true'>
                ai.issue_id in (SELECT ai31.issue_id from agile_issue ai31
                left join agile_version_issue_rel avir44
                on ai31.issue_id = avir44.issue_id
                WHERE avir44.version_id is null ) OR
            </if>
            ai.issue_id in ( SELECT avir3.issue_id FROM
            agile_version_issue_rel avir3 WHERE avir3.version_id in
            <foreach collection="extendSearchVO.otherArgs.fixVersion" item="id" open="(" separator=","
                     close=")">
                #{id}
            </foreach>
            and relation_type = 'fix'
            )
            )
        </if>
        <if test='extendSearchVO.otherArgs.influenceVersion != null and extendSearchVO.otherArgs.influenceVersion.size > 0'>
            AND (
            <if test='extendSearchVO.otherArgs.influenceVersionNull != null and extendSearchVO.otherArgs.influenceVersionNull == true'>
                ai.issue_id in (SELECT ai31.issue_id from agile_issue ai31
                left join agile_version_issue_rel avir44
                on ai31.issue_id = avir44.issue_id
                WHERE avir44.version_id is null ) OR
            </if>
            ai.issue_id in ( SELECT avir3.issue_id FROM
            agile_version_issue_rel avir3 WHERE avir3.version_id in
            <foreach collection="extendSearchVO.otherArgs.influenceVersion" item="id" open="(" separator=","
                     close=")">
                #{id}
            </foreach>
            AND relation_type = 'influence'
            )
            )
        </if>
        <if test='extendSearchVO.otherArgs.label != null and extendSearchVO.otherArgs.label.size > 0'>
            AND (
            <if test='extendSearchVO.otherArgs.labelNull != null and extendSearchVO.otherArgs.labelNull == true'>
                ai.issue_id in (SELECT ai13.issue_id from agile_issue ai13 left join
                agile_label_issue_rel alir2 on ai13.issue_id = alir2.issue_id WHERE
                alir2.label_id is null ) OR
            </if>
            ai.issue_id in ( SELECT alir2.issue_id FROM
            agile_label_issue_rel alir2 WHERE alir2.label_id in
            <foreach collection="extendSearchVO.otherArgs.label" item="id" open="(" separator=","
                     close=")">
                #{id}
            </foreach>)
            )
        </if>
        <if test='extendSearchVO.otherArgs.issueIds != null and extendSearchVO.otherArgs.issueIds.size > 0'>
            AND ai.issue_id in
            <foreach collection="extendSearchVO.otherArgs.issueIds" item="issueId" open="(" separator=","
                     close=")">
                #{issueId}
            </foreach>
        </if>

        <if test="extendSearchVO.otherArgs.mainResponsibleIds != null and extendSearchVO.otherArgs.mainResponsibleIds.size > 0">
            and ai.main_responsible_id in
            <foreach collection="extendSearchVO.otherArgs.mainResponsibleIds" item="mainResponsibleId" open="(" close=")" separator=",">
                #{mainResponsibleId}
            </foreach>
        </if>

        <if test="extendSearchVO.otherArgs.environment != null and extendSearchVO.otherArgs.environment.size > 0 ">
            and ai.environment in
            <foreach collection="extendSearchVO.otherArgs.environment" item="evm" open="(" close=")" separator=",">
                #{evm}
            </foreach>
        </if>
        <if test='extendSearchVO.otherArgs.excludeIssueIds != null and extendSearchVO.otherArgs.excludeIssueIds.size > 0'>
            AND ai.issue_id not in
            <foreach collection="extendSearchVO.otherArgs.excludeIssueIds" item="issueId" open="(" separator=","
                     close=")">
                #{issueId}
            </foreach>
        </if>

        <if test='extendSearchVO.otherArgs.creatorIds != null and extendSearchVO.otherArgs.creatorIds.size > 0'>
            AND ai.created_by in
            <foreach collection="extendSearchVO.otherArgs.creatorIds" item="userId" open="(" separator=","
                     close=")">
                #{userId}
            </foreach>
        </if>

        <if test='extendSearchVO.otherArgs.updatorIds != null and extendSearchVO.otherArgs.updatorIds.size > 0'>
            AND ai.last_updated_by in
            <foreach collection="extendSearchVO.otherArgs.updatorIds" item="userId" open="(" separator=","
                     close=")">
                #{userId}
            </foreach>
        </if>
        <if test='extendSearchVO.otherArgs.tags != null and extendSearchVO.otherArgs.tags.size > 0'>
            AND (
            ai.issue_id in (
            SELECT atir.issue_id
            FROM agile_tag_issue_rel atir
            WHERE atir.project_id in
            <foreach collection="projectIds" item="projectId" open="(" close=")" separator="," >
                #{projectId}
            </foreach>
            and atir.tag_project_id in
            <foreach collection="extendSearchVO.otherArgs.tags" item="tag" open="(" separator="," close=")">
                #{tag.projectId}
            </foreach>
            and atir.app_service_code in
            <foreach collection="extendSearchVO.otherArgs.tags" item="tag" open="(" separator="," close=")">
                #{tag.appServiceCode}
            </foreach>
            and atir.tag_name in
            <foreach collection="extendSearchVO.otherArgs.tags" item="tag" open="(" separator="," close=")">
                #{tag.tagName}
            </foreach>
            )
            )
        </if>
    </sql>

    <sql id="extendOtherArgsSql2">
        <if test='extendSearchVO.otherArgs.sprint != null and extendSearchVO.otherArgs.sprint.size > 0'>
            AND (
            <if test='extendSearchVO.otherArgs.sprintNull != null and extendSearchVO.otherArgs.sprintNull == true'>
                ai.issue_id in (SELECT ai10.issue_id from agile_issue ai10 left join
                agile_issue_sprint_rel aisr2
                on ai10.issue_id = aisr2.issue_id WHERE
                aisr2.sprint_id is null ) OR
            </if>
            <foreach collection="extendSearchVO.otherArgs.sprint" item="id"  separator="or">
                <if test="id==0">
                    ai.issue_id not in
                    (
                    SELECT issue_id
                    FROM agile_issue_sprint_rel aisr
                    WHERE project_id in
                    <foreach collection="projectIds" item="projectId" open="(" close=")" separator="," >
                        #{projectId}
                    </foreach>
                    )
                </if>
                <if test="id != 0 ">
                    ai.issue_id in
                    (
                    SELECT aisr2.issue_id
                    FROM agile_issue_sprint_rel aisr2
                    WHERE aisr2.sprint_id = #{id}
                    )
                </if>
            </foreach>
            )
        </if>
        <if test="extendSearchVO.otherArgs.customField != null and extendSearchVO.otherArgs.customField.size > 0">
            <if test="extendSearchVO.otherArgs.customField.option != null and extendSearchVO.otherArgs.customField.option.size > 0">
                and
                <foreach collection="extendSearchVO.otherArgs.customField.option" item="item" open="(" separator="and"
                         close=")">
                    ai.issue_id in
                    (
                    SELECT
                    ffv.instance_id
                    FROM
                    fd_field_value ffv
                    WHERE
                    ffv.project_id in
                    <foreach collection="projectIds" item="projectId" open="(" close=")" separator="," >
                        #{projectId}
                    </foreach>
                    AND ffv.field_id = #{item.fieldId}
                    AND ffv.option_id IN
                    <foreach collection="item.value" item="value" open="(" separator=","
                             close=")">
                        #{value}
                    </foreach>
                    )
                </foreach>
            </if>
            <if test="extendSearchVO.otherArgs.customField.date != null and extendSearchVO.otherArgs.customField.date.size > 0">
                and
                <foreach collection="extendSearchVO.otherArgs.customField.date" item="item" open="(" separator="and"
                         close=")">
                    ai.issue_id in
                    (
                    SELECT
                    ffv.instance_id
                    FROM
                    fd_field_value ffv
                    WHERE
                    ffv.project_id in
                    <foreach collection="projectIds" item="projectId" open="(" close=")" separator="," >
                        #{projectId}
                    </foreach>
                    AND ffv.field_id = #{item.fieldId}
                    AND ffv.date_value &gt;= #{item.startDate} AND ffv.date_value &lt;= #{item.endDate}
                    )
                </foreach>
            </if>
            <if test="extendSearchVO.otherArgs.customField.date_hms != null and extendSearchVO.otherArgs.customField.date_hms.size > 0">
                and
                <foreach collection="extendSearchVO.otherArgs.customField.date_hms" item="item" open="(" separator="and"
                         close=")">
                    ai.issue_id in
                    (
                    SELECT
                    ffv.instance_id
                    FROM
                    fd_field_value ffv
                    WHERE
                    ffv.project_id in
                    <foreach collection="projectIds" item="projectId" open="(" close=")" separator="," >
                        #{projectId}
                    </foreach>
                    AND ffv.field_id = #{item.fieldId}
                    AND DATE_FORMAT(ffv.date_value, '%H:%i:%s') &gt;= #{item.startDate} AND DATE_FORMAT(ffv.date_value, '%H:%i:%s') &lt;= #{item.endDate}
                    )
                </foreach>
            </if>
            <if test="extendSearchVO.otherArgs.customField.number != null and extendSearchVO.otherArgs.customField.number.size > 0">
                and
                <foreach collection="extendSearchVO.otherArgs.customField.number" item="item" open="(" separator="and"
                         close=")">
                    ai.issue_id in
                    (
                    SELECT
                    ffv.instance_id
                    FROM
                    fd_field_value ffv
                    WHERE
                    ffv.project_id in
                    <foreach collection="projectIds" item="projectId" open="(" close=")" separator="," >
                        #{projectId}
                    </foreach>
                    AND ffv.field_id = #{item.fieldId}
                    AND ffv.number_value = #{item.value}
                    )
                </foreach>
            </if>
            <if test="extendSearchVO.otherArgs.customField.string != null and extendSearchVO.otherArgs.customField.string.size > 0">
                and
                <foreach collection="extendSearchVO.otherArgs.customField.string" item="item" open="(" separator="and"
                         close=")">
                    ai.issue_id in
                    (
                    SELECT
                    ffv.instance_id
                    FROM
                    fd_field_value ffv
                    WHERE
                    ffv.project_id in
                    <foreach collection="projectIds" item="projectId" open="(" close=")" separator="," >
                        #{projectId}
                    </foreach>
                    AND ffv.field_id = #{item.fieldId}
                    AND ffv.string_value LIKE CONCAT(CONCAT('%' ,#{item.value}) ,'%')
                    )
                </foreach>
            </if>
            <if test="extendSearchVO.otherArgs.customField.text != null and extendSearchVO.otherArgs.customField.text.size > 0">
                and
                <foreach collection="extendSearchVO.otherArgs.customField.text" item="item" open="(" separator="and"
                         close=")">
                    ai.issue_id in
                    (
                    SELECT
                    ffv.instance_id
                    FROM
                    fd_field_value ffv
                    WHERE
                    ffv.project_id in
                    <foreach collection="projectIds" item="projectId" open="(" close=")" separator="," >
                        #{projectId}
                    </foreach>
                    AND ffv.field_id = #{item.fieldId}
                    AND ffv.text_value LIKE CONCAT(CONCAT('%' ,#{item.value}) ,'%')
                    )
                </foreach>
            </if>
        </if>
    </sql>

    <select id="selectDailyWorkIssues" resultType="io.choerodon.agile.api.vo.IssueDailyWorkVO">
        SELECT
            ai.issue_id,
            ai.summary,
            ai.project_id,
            ai.type_code,
            CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
            ai.reporter_id,
            ai.assignee_id,
            ai.priority_id,
            fp.name AS priority_name,
            fp.colour AS priority_colour,
            ai.issue_type_id,
            IFNULL(fite.name, fit.name) AS type_name,
            ai.status_id,
            ais.name AS status_name,
            ais.category_code AS status_code,
            IF(ai.parent_issue_id != 0, ai.parent_issue_id, NULL) AS parent_issue_id,
            IF(ai.relate_issue_id != 0, ai.relate_issue_id, NULL) AS relate_issue_id,
            ai.estimated_end_time
        FROM
            agile_issue ai
            LEFT JOIN agile_issue_status ais ON ais.status_id = ai.status_id AND ais.project_id = ai.project_id
            LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
            LEFT JOIN fd_priority fp ON ai.priority_id = fp.id
            LEFT JOIN fd_issue_type_extend fite ON ai.issue_type_id = fite.issue_type_id AND ai.project_id = fite.project_id
            LEFT JOIN fd_issue_type fit ON ai.issue_type_id = fit.id
        WHERE ai.type_code IN ('story', 'bug', 'task', 'sub_task')
        AND ai.apply_type = 'agile'
        AND ai.issue_id IN (
            SELECT aisr.issue_id
            FROM agile_sprint sprint
            JOIN agile_issue_sprint_rel aisr ON sprint.sprint_id = aisr.sprint_id
            WHERE sprint.project_id IN
            <foreach collection="projectIds" item="projectId" open="(" close=")" separator="," >
                #{projectId}
            </foreach>
            AND sprint.status_code = 'started'
        )
        AND ais.is_completed != 1
        AND ai.assignee_id IS NOT NULL AND ai.assignee_id != 0
        ORDER BY ai.issue_num DESC
    </select>

    <select id="queryIssueEpicByIds" resultType="io.choerodon.agile.api.vo.IssueEpicVO">
        SELECT
            ai.issue_id,
            ai.epic_name,
            alv.name AS epicColor,
            ai.issue_type_id,
            ai.project_id
        FROM
            agile_issue ai
        LEFT JOIN lookup_value alv ON ai.color_code = alv.value_code
        WHERE 1=1
        <if test="projectId != null">
            AND ai.project_id = #{projectId}
        </if>
        AND ai.type_code = 'issue_epic'
        AND ai.issue_id IN
        <foreach collection="epicIds" item="epicId" open="(" separator="," close=")">
            #{epicId}
        </foreach>
    </select>

    <select id="listIssueWithEpicId" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        select
            issue_id,
            epic_id
        from agile_issue
        where project_id in
        <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
            #{projectId}
        </foreach>
        and issue_id in
        <foreach collection="issueIds" item="issueId" open="(" separator="," close=")">
            #{issueId}
        </foreach>
        and epic_id is not null
        and epic_id != 0
    </select>

    <select id="selectEpicByLinkIssueIds" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        select
           ai.issue_id,
           ai.summary,
           ai.epic_name
        from agile_issue ai
        where ai.issue_id in (
            select
                epic_id
            from agile_issue
            where project_id in
            <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                #{projectId}
            </foreach>
            and issue_id in
            <foreach collection="issueIds" item="issueId" open="(" separator="," close=")">
                #{issueId}
            </foreach>
            and epic_id is not null
            and epic_id != 0
        )
    </select>

    <select id="selectAssigneeIdByIssueIds" resultType="java.lang.Long">
        select assignee_id
        from agile_issue
        where project_id = #{projectId}
        and issue_id in
        <foreach collection="issueIds" item="issueId" open="(" separator="," close=")">
            #{issueId}
        </foreach>
        and assignee_id is not null
        and assignee_id != 0
    </select>

    <select id="listWorkCalenderParentIssue" resultType="io.choerodon.agile.api.vo.WorkItemVO">
        select
          ai.issue_id,
          ai.summary,
          ai.estimated_start_time,
          ai.estimated_end_time,
          ai.project_id
        from (
          select
           aisr.issue_id
          from agile_issue_sprint_rel aisr,agile_sprint asp
          where
           aisr.sprint_id = asp.sprint_id
           and asp.project_id in
           <foreach collection="projectIds" item="projectId" open="(" close=")" separator=",">
               #{projectId}
           </foreach>
           and asp.status_code = 'started'
           and aisr.issue_id in (<include refid="queryAssigneeIssue"/>)
        ) aisp
        join agile_issue ai on ai.issue_id = aisp.issue_id
        where
        ai.type_code in ('story', 'bug', 'task')
        and ai.estimated_start_time is not null
        and ai.estimated_end_time is not null
        and (ai.relate_issue_id is null or ai.relate_issue_id = 0)
        <if test="workItemSearchVO.params != null">
          and ai.summary LIKE CONCAT(CONCAT('%' ,#{workItemSearchVO.params}) ,'%')
        </if>
    </select>

    <select id="countWorkCalenderSubIssueProgress" resultType="io.choerodon.agile.api.vo.CountVO">
        select
            aii.parent_issue_id as id,
            COUNT( CASE WHEN aii.is_completed = 1 THEN aii.issue_id END) as completedCount,
            COUNT(aii.issue_id) as totalCount
        from (
          <include refid="selectSubIssue"/>
         ) aii
        group by aii.parent_issue_id
   </select>

    <select id="queryAssigneeIssueList" resultType="io.choerodon.agile.api.vo.WorkItemVO">
        select
            ai.issue_id,
            ai.summary,
            CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
            ai.estimated_start_time,
            ai.estimated_end_time,
            ai.project_id,
            ai.priority_id,
            ai.assignee_id,
            ai.status_id,
            ai.object_version_number
        from (
          <include refid="queryAssigneeIssue"/>
        ) aii
        join agile_issue ai on ai.issue_id = aii.issue_id
        left join agile_project_info api on ai.project_id = api.project_id
        where
        ai.type_code in ('story', 'bug', 'task', 'sub_task')
        and ai.estimated_start_time is not null
        and ai.estimated_end_time is not null
        <if test="workItemSearchVO.startTime != null and workItemSearchVO.endTime != null">
            and (
            ai.estimated_start_time between #{workItemSearchVO.startTime} and  #{workItemSearchVO.endTime}
            or ai.estimated_end_time between #{workItemSearchVO.startTime} and  #{workItemSearchVO.endTime}
            or (
                ai.estimated_start_time &lt; #{workItemSearchVO.startTime}
                and ai.estimated_end_time > #{workItemSearchVO.endTime}
            ))
        </if>
        <if test="workItemSearchVO.onlyStartTime != null and workItemSearchVO.onlyStartTime">
            and TO_DAYS(ai.estimated_start_time) >= TO_DAYS(#{workItemSearchVO.startTime})
        </if>
        <if test="workItemSearchVO.filterIssueId != null">
            and (
                ai.issue_id = #{workItemSearchVO.filterIssueId}
                or ai.parent_issue_id = #{workItemSearchVO.filterIssueId}
                or ai.relate_issue_id = #{workItemSearchVO.filterIssueId}
            )
        </if>
    </select>

    <select id="queryAssigneeIdsBySearchVO" resultType="java.lang.Long">
        SELECT
        ai.assignee_id
        FROM agile_issue ai
        WHERE ai.project_id in
        <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
            #{projectId}
        </foreach>
        AND ai.apply_type = 'agile'
        and ai.assignee_id is not null
        and ai.assignee_id != 0
        <include refid="explainSearchVO"/>
        <include refid="filterSqlAndAssigneeIds"/>
        <if test='searchVO.searchArgs != null'>
            <if test='searchVO.searchArgs.issueNum != null and searchVO.searchArgs.issueNum != ""'>
                AND ai.issue_num LIKE CONCAT(CONCAT('%' ,#{searchVO.searchArgs.issueNum}) ,'%')
            </if>
        </if>
        <if test='searchVO.contents != null and searchVO.contents.size != 0'>
            <foreach collection="searchVO.contents" item="content" index="index">
                AND (
                ai.issue_num LIKE CONCAT(CONCAT('%', #{content}), '%')
                OR ai.summary LIKE CONCAT(CONCAT('%', #{content}), '%')
                )
            </foreach>
        </if>
    </select>


    <select id="selectConflictEstimatedTime" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        select
            ai.issue_id,
            ai.assignee_id
        from (
            <include refid="listConflictEstimatedTime"/>
            <if test="sortMap != null and sortMap.orderStr != null">
                ORDER BY ${sortMap.orderStr}
            </if>
        ) ai
    </select>

    <select id="selectConflictEstimatedTime_COUNT" resultType="java.lang.Long">
        select
            count(ai.issue_id)
        from (<include refid="listConflictEstimatedTime"/>) ai
    </select>

    <sql id="listConflictEstimatedTime">
        select
        ai.issue_id,
        ai.assignee_id
        from agile_issue ai
        join (
            select
            temp.issue_id,
            temp.assignee_id
            from
            (
                select t1.* from (
                    select
                    ai.issue_id,
                    ai.assignee_id,
                    CONVERT(ai.issue_num,SIGNED) as issue_num_convert,
                    if(
                        @lastAssigneeId = ai.assignee_id,
                        ai.estimated_start_time &gt;= @lastStartDate and ai.estimated_start_time &lt; @lastEndDate,
                        0
                    ) as overlap,
                    @lastAssigneeId := ai.assignee_id as last_assignee,
                    case
                        when ai.estimated_end_time &lt; @lastEndDate
                        then @lastStartDate := @lastStartDate
                        else @lastStartDate := ai.estimated_start_time
                    end as last_start,
                    case
                        when ai.estimated_end_time &lt; @lastEndDate
                        then @lastEndDate := @lastEndDate
                        else @lastEndDate := ai.estimated_end_time
                    end as last_end
                    from agile_issue ai,
                    (
                        select
                        @lastAssigneeId := 0,
                        @lastStartDate := '1000-01-01 00:00:00',
                        @lastEndDate := '1000-01-01 00:00:00'
                    ) sqlVars
                    where ai.project_id in
                    <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                        #{projectId}
                    </foreach>
                    and ai.assignee_id in
                    <foreach collection="assigneeIds" item="assigneeId" open="(" separator="," close=")">
                        #{assigneeId}
                    </foreach>
                    and ai.type_code in ('story', 'bug', 'task', 'sub_task')
                    and ai.estimated_start_time is not null
                    and ai.estimated_end_time is not null
                    order by ai.assignee_id asc, ai.estimated_start_time asc, ai.issue_id asc
                ) t1
                union
                select t2.* from (
                    select
                    ai.issue_id,
                    ai.assignee_id,
                    CONVERT(ai.issue_num,SIGNED) as issue_num_convert,
                    if(
                        @descLastAssigneeId = ai.assignee_id,
                        @descLastStartDate &gt;= ai.estimated_start_time and @descLastStartDate &lt; ai.estimated_end_time,
                        0
                    ) as overlap,
                    @descLastAssigneeId := ai.assignee_id as last_assignee,
                    @descLastStartDate := ai.estimated_start_time as last_start,
                    @descLastEndDate := ai.estimated_end_time as last_end
                    from agile_issue ai,
                    (
                        select
                        @descLastAssigneeId := 0,
                        @descLastStartDate := '1000-01-01 00:00:00',
                        @descLastEndDate := '1000-01-01 00:00:00'
                    ) sqlVars
                    where ai.project_id in
                    <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                        #{projectId}
                    </foreach>
                    and ai.assignee_id in
                    <foreach collection="assigneeIds" item="assigneeId" open="(" separator="," close=")">
                        #{assigneeId}
                    </foreach>
                    and ai.type_code in ('story', 'bug', 'task', 'sub_task')
                    and ai.estimated_start_time is not null
                    and ai.estimated_end_time is not null
                    order by ai.assignee_id asc, ai.estimated_start_time desc, ai.issue_id desc
                ) t2
            ) temp
            where temp.overlap = 1
            group by temp.issue_id, temp.assignee_id
        ) conflict_table on conflict_table.issue_id = ai.issue_id
        where 1=1
        and ai.project_id in
        <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
            #{projectId}
        </foreach>
        and ai.assignee_id in
        <foreach collection="assigneeIds" item="assigneeId" open="(" separator="," close=")">
            #{assigneeId}
        </foreach>
        <if test="searchVO != null">
            <include refid="explainSearchVO"/>
            <include refid="filterSqlAndAssigneeIds"/>
            <if test='searchVO.searchArgs != null'>
                <if test='searchVO.searchArgs.issueNum != null and searchVO.searchArgs.issueNum != ""'>
                    and ai.issue_num like CONCAT(CONCAT('%' ,#{searchVO.searchArgs.issueNum}) ,'%')
                </if>
            </if>
            <if test='searchVO.contents != null and searchVO.contents.size != 0'>
                <foreach collection="searchVO.contents" item="content" index="index">
                    and (
                    ai.issue_num like CONCAT(CONCAT('%', #{content}), '%')
                    or ai.summary like CONCAT(CONCAT('%', #{content}), '%')
                    )
                </foreach>
            </if>
        </if>
    </sql>

    <select id="selectCompletedSubIssue" resultType="java.lang.Long">
        SELECT
            ai.issue_id
        FROM agile_issue ai
        LEFT JOIN agile_issue_status ais ON ais.project_id = ai.project_id AND ais.status_id = ai.status_id
        WHERE ai.project_id = #{projectId}
        AND ai.type_code = 'sub_task'
        AND ai.parent_issue_id IN
        <foreach collection="issueIds" item="issueId" open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        AND ais.is_completed = 1
    </select>

    <update id="updateSubIssueHistoryCompleted">
        update agile_issue
        set is_pre_sprint_done = 1
        where project_id = #{projectId}
        and issue_id in
        <foreach collection="issueIds" item="issueId" open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </update>

    <select id="queryChildrenIssue" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
         select
           ai.issue_id,
           ai.parent_issue_id  as parent_issue_id
         from agile_issue ai
         where
          ai.project_id = #{projectId}
          and ai.type_code = 'sub_task'
          and ai.issue_id in
          <foreach collection="issueIds" item="issueId" open="(" close=")" separator=",">
              #{issueId}
          </foreach>
          union
          select
            ai.issue_id,
            ai.relate_issue_id  as parent_issue_id
          from agile_issue ai
          where
            ai.project_id = #{projectId}
          and ai.type_code = 'bug'
          and ai.issue_id in
          <foreach collection="issueIds" item="issueId" open="(" close=")" separator=",">
                #{issueId}
          </foreach>
          and ai.relate_issue_id is not null
          and ai.relate_issue_id != 0
    </select>

    <sql id="queryAssigneeIssue">
        <if test="workItemSearchVO.assigneeFilter.contains('assignee')">
            select
              ai.issue_id
            from agile_issue ai
            where
            ai.project_id in
            <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                #{projectId}
            </foreach>
             and ai.assignee_id = #{userId}
            <if test="workItemSearchVO.assigneeFilter.contains('participant')">
                UNION
            </if>
        </if>
        <if test="workItemSearchVO.assigneeFilter.contains('participant')">
            select issue_id from agile_issue_participant_rel
            where project_id in
            <foreach collection="projectIds" item="projectId" open="(" close=")" separator=",">
                #{projectId}
            </foreach>
            and participant_id = #{userId}
        </if>
    </sql>

   <sql id="selectSubIssue">
       (
           select
               ai.parent_issue_id,
               ais.is_completed,
               ai.issue_id
           FROM agile_issue ai
           LEFT JOIN agile_issue_status ais ON ais.status_id = ai.status_id AND ais.project_id = ai.project_id
           where ai.project_id in
           <foreach collection="projectIds" item="projectId" open="(" close=")" separator=",">
               #{projectId}
           </foreach>
           and ai.type_code = 'sub_task'
           and ai.parent_issue_id in
           <foreach collection="issueIds" item="issueId" open="(" close=")" separator=",">
               #{issueId}
           </foreach>
       ) union all (
           select
               ai.relate_issue_id as parent_issue_id,
               ais.is_completed,
               ai.issue_id
           FROM agile_issue ai
           LEFT JOIN agile_issue_status ais ON ais.status_id = ai.status_id AND ais.project_id = ai.project_id
           where ai.project_id in
           <foreach collection="projectIds" item="projectId" open="(" close=")" separator=",">
               #{projectId}
           </foreach>
           and ai.type_code = 'bug'
           and ai.relate_issue_id in
           <foreach collection="issueIds" item="issueId" open="(" close=")" separator=",">
               #{issueId}
           </foreach>
       )
   </sql>
</mapper>
