<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.choerodon.agile.infra.mapper.TeamPerformanceMapper">

    <select id="querySprintStoryPoints" resultType="io.choerodon.agile.api.vo.SprintStoryPointVO">
        SELECT ai.main_responsible_id, SUM(ai.story_points) AS story_points,
        SUM(ai.story_points_complate) AS story_points_complete
        FROM
        (
            SELECT ai.main_responsible_id, ai.story_points, 0 AS story_points_complate
            FROM agile_sprint asp
            JOIN agile_issue_sprint_rel aisr ON aisr.sprint_id = asp.sprint_id AND aisr.project_id = asp.project_id
            JOIN agile_issue ai ON ai.issue_id = aisr.issue_id AND ai.project_id = aisr.project_id AND ai.type_code =
            'story'
            WHERE asp.project_id = #{projectId} AND asp.status_code = 'started'

            UNION ALL

            SELECT ai.main_responsible_id, 0 AS story_points, ai.story_points AS story_points_complate
            FROM agile_sprint asp
            JOIN agile_issue_sprint_rel aisr ON aisr.sprint_id = asp.sprint_id AND aisr.project_id = asp.project_id
            JOIN agile_issue ai ON ai.issue_id = aisr.issue_id AND ai.project_id = aisr.project_id AND ai.type_code =
            'story'
            JOIN agile_issue_status ais ON ais.status_id = ai.status_id AND ais.is_completed = 1 AND ais.project_id =
            ai.project_id
            WHERE asp.project_id = #{projectId} AND asp.status_code = 'started'
        ) ai
        GROUP BY ai.main_responsible_id
    </select>

    <select id="querySprintTaskTime" resultType="io.choerodon.agile.api.vo.SprintTaskVO">
        SELECT ai.main_responsible_id,              SUM(ai.remaining_time) AS remaining_time,
        SUM(ai.remaining_time_complate) AS remaining_time_complete
        FROM
        (
            SELECT ai.main_responsible_id, adlm.new_value AS remaining_time, 0 AS remaining_time_complate
            FROM agile_sprint asp
            JOIN agile_issue_sprint_rel aisr ON aisr.sprint_id = asp.sprint_id AND aisr.project_id = asp.project_id
            JOIN agile_issue ai ON ai.issue_id = aisr.issue_id AND ai.project_id = aisr.project_id AND ai.type_code IN ('task', 'sub_task')
            JOIN
            (
                SELECT adl.issue_id, max(adl.new_value) AS new_value
                FROM agile_data_log adl
                WHERE adl.project_id = #{projectId} AND adl.field = 'timeestimate'
                GROUP BY adl.issue_id
            ) adlm ON adlm.issue_id = ai.issue_id
            WHERE asp.project_id = #{projectId} AND asp.status_code = 'started'

            UNION ALL

            SELECT ai.main_responsible_id, 0 AS remaining_time, adlm.new_value AS remaining_time_complate
            FROM agile_sprint asp
            JOIN agile_issue_sprint_rel aisr ON aisr.sprint_id = asp.sprint_id AND aisr.project_id = asp.project_id
            JOIN agile_issue ai ON ai.issue_id = aisr.issue_id AND ai.project_id = aisr.project_id AND ai.type_code IN ('task', 'sub_task')
            JOIN agile_issue_status ais ON ais.status_id = ai.status_id AND ais.is_completed = 1 AND ais.project_id = ai.project_id
            JOIN
            (
                SELECT adl.issue_id, max(adl.new_value) AS new_value
                FROM agile_data_log adl
                WHERE adl.project_id = #{projectId} AND adl.field = 'timeestimate'
                GROUP BY adl.issue_id
            ) adlm ON adlm.issue_id = ai.issue_id
            WHERE asp.project_id = #{projectId} AND asp.status_code = 'started'
        ) ai
        GROUP BY ai.main_responsible_id
    </select>

    <select id="querySprintBugCount" resultType="io.choerodon.agile.api.vo.SprintBugVO">
        SELECT
        <if test="type != null and type == 'dev'">
            ai.main_responsible_id AS responsible_id,
        </if>
        <if test="type != null and type == 'test'">
            ai.created_by AS responsible_id,
        </if>
        COUNT(ai.issue_id) bug_count
        FROM agile_sprint asp
        JOIN agile_issue_sprint_rel aisr ON aisr.sprint_id = asp.sprint_id AND aisr.project_id = asp.project_id
        JOIN agile_issue ai ON ai.issue_id = aisr.issue_id AND ai.project_id = aisr.project_id AND ai.type_code =
        'bug' AND ai.environment = #{environment}
        WHERE asp.project_id = #{projectId} AND asp.status_code = 'started'
        <if test="type != null and type == 'dev'">
            GROUP BY ai.main_responsible_id
        </if>
        <if test="type != null and type == 'test'">
            GROUP BY ai.created_by
        </if>
    </select>

    <select id="queryHistorySprintStoryPoint" resultType="io.choerodon.agile.api.vo.SprintStoryPointVO">
        SELECT ai.sprint_id,                                             ai.sprint_name,
        COALESCE(SUM(ai.story_points), 0) AS story_points,
        COALESCE(SUM(ai.story_points_complate), 0) AS story_points_complete
        FROM
        (
            SELECT asp.sprint_id,               asp.sprint_name,
            ai.story_points,                    0 AS story_points_complate
            FROM agile_sprint asp
            LEFT JOIN agile_issue_sprint_rel aisr ON aisr.sprint_id = asp.sprint_id AND aisr.project_id = asp.project_id
            LEFT JOIN agile_issue ai ON ai.issue_id = aisr.issue_id AND ai.project_id = aisr.project_id AND ai.type_code =
            'story'
            WHERE asp.project_id = #{projectId}

            UNION ALL

            SELECT asp.sprint_id,                            asp.sprint_name,
            0 AS story_points,                               ai.story_points AS story_points_complate
            FROM agile_sprint asp
            LEFT JOIN agile_issue_sprint_rel aisr ON aisr.sprint_id = asp.sprint_id AND aisr.project_id = asp.project_id
            LEFT JOIN agile_issue ai ON ai.issue_id = aisr.issue_id AND ai.project_id = aisr.project_id AND ai.type_code =
            'story'
            JOIN agile_issue_status ais ON ais.status_id = ai.status_id AND ais.is_completed = 1 AND ais.project_id =
            ai.project_id
            WHERE asp.project_id = #{projectId}
        ) ai
        GROUP BY ai.sprint_id, ai.sprint_name
        ORDER BY ai.sprint_id ASC
    </select>

    <select id="queryHistorySprintTaskTime" resultType="io.choerodon.agile.api.vo.SprintTaskVO">
        SELECT ai.sprint_id,									 ai.sprint_name,
        COALESCE(SUM(ai.remaining_time), 0) AS remaining_time,
        COALESCE(SUM(ai.remaining_time_complate), 0) AS remaining_time_complete
        FROM
        (
            SELECT asp.sprint_id,							 asp.sprint_name,
			adlm.new_value AS remaining_time,                0 AS remaining_time_complate
            FROM agile_sprint asp
            LEFT JOIN agile_issue_sprint_rel aisr ON aisr.sprint_id = asp.sprint_id AND aisr.project_id = asp.project_id
            LEFT JOIN agile_issue ai ON ai.issue_id = aisr.issue_id AND ai.project_id = aisr.project_id AND ai.type_code
                IN ('task', 'sub_task')
            LEFT JOIN
            (
                SELECT adl.issue_id, max(adl.new_value) AS new_value
                FROM agile_data_log adl
                WHERE adl.project_id = #{projectId} AND adl.field = 'timeestimate'
                GROUP BY adl.issue_id
            ) adlm ON adlm.issue_id = ai.issue_id
            WHERE asp.project_id = #{projectId}

            UNION ALL

            SELECT asp.sprint_id,                          asp.sprint_name,
			0 AS remaining_time,                           adlm.new_value AS remaining_time_complate
            FROM agile_sprint asp
            LEFT JOIN agile_issue_sprint_rel aisr ON aisr.sprint_id = asp.sprint_id AND aisr.project_id = asp.project_id
            LEFT JOIN agile_issue ai ON ai.issue_id = aisr.issue_id AND ai.project_id = aisr.project_id AND ai.type_code
                IN ('task', 'sub_task')
            JOIN agile_issue_status ais ON ais.status_id = ai.status_id AND ais.is_completed = 1 AND ais.project_id = ai.project_id
            LEFT JOIN
            (
                SELECT adl.issue_id, max(adl.new_value) AS new_value
                FROM agile_data_log adl
                WHERE adl.project_id = #{projectId} AND adl.field = 'timeestimate'
                GROUP BY adl.issue_id
            ) adlm ON adlm.issue_id = ai.issue_id
			WHERE asp.project_id = #{projectId}
        ) ai
        GROUP BY ai.sprint_id, ai.sprint_name
		ORDER BY ai.sprint_id ASC
    </select>

    <select id="queryHistorySprintBugCount" resultType="io.choerodon.agile.api.vo.SprintBugVO">
        SELECT aspi.sprint_id,                   aspi.sprint_name,
        <if test="type != null and type == 'dev'">
            aspi.main_responsible_id AS responsible_id,
        </if>
        <if test="type != null and type == 'test'">
            aspi.created_by AS responsible_id,
        </if>
        COALESCE(COUNT(ai.issue_id), 0) AS bug_count
        FROM (
            SELECT asp.project_id, asp.sprint_id, asp.sprint_name, ai.issue_id,
            COALESCE(ai.main_responsible_id, 0) AS main_responsible_id,
            COALESCE(ai.created_by, 0) AS created_by
            FROM agile_sprint asp
            LEFT JOIN agile_issue_sprint_rel aisr ON aisr.sprint_id = asp.sprint_id AND aisr.project_id = asp.project_id
            LEFT JOIN agile_issue ai ON ai.issue_id = aisr.issue_id AND ai.project_id = aisr.project_id AND ai.type_code IN
            ('story', 'task', 'sub_task', 'bug')
            WHERE asp.project_id = #{projectId}
        ) aspi
        LEFT JOIN agile_issue ai ON ai.issue_id = aspi.issue_id AND ai.project_id = aspi.project_id AND ai.type_code =
        'bug'
        <if test="environment != null and environment !=''">
            AND ai.environment = #{environment}
        </if>

        <where>
            <if test="responsibleIds != null and responsibleIds.size > 0">
                <if test="type != null and type == 'dev'">
                    aspi.main_responsible_id IN
                </if>
                <if test="type != null and type == 'test'">
                    aspi.created_by IN
                </if>
                <foreach collection="responsibleIds" open="(" separator="," close=")" item="responsibleId">
                    #{responsibleId}
                </foreach>
            </if>
            <if test="other">
                <if test="type != null and type == 'dev'">
                   OR aspi.main_responsible_id IS null
                </if>
                <if test="type != null and type == 'test'">
                   OR aspi.created_by IS null
                </if>
            </if>
        </where>
        <if test="type != null and type == 'dev'">
            GROUP BY aspi.sprint_id, aspi.main_responsible_id, aspi.sprint_name
        </if>
        <if test="type != null and type == 'test'">
            GROUP BY aspi.sprint_id, aspi.created_by, aspi.sprint_name
        </if>
        ORDER BY aspi.sprint_id ASC
    </select>

    <select id="queryResponsible" resultType="java.lang.Long">
        SELECT aspi.responsible_id
		FROM (
                SELECT ai.main_responsible_id AS responsible_id
                FROM agile_sprint asp
                JOIN agile_issue_sprint_rel aisr ON aisr.sprint_id = asp.sprint_id AND aisr.project_id = asp.project_id
                JOIN agile_issue ai ON ai.issue_id = aisr.issue_id AND ai.project_id = aisr.project_id AND ai.type_code IN
                ('story', 'task', 'sub_task', 'bug')
                WHERE asp.project_id = #{projectId}

                UNION ALL

                SELECT ai.created_by AS responsible_id
                FROM agile_sprint asp
                JOIN agile_issue_sprint_rel aisr ON aisr.sprint_id = asp.sprint_id AND aisr.project_id = asp.project_id
                JOIN agile_issue ai ON ai.issue_id = aisr.issue_id AND ai.project_id = aisr.project_id AND ai.type_code IN
                ('story', 'task', 'sub_task', 'bug')
                WHERE asp.project_id = #{projectId}
		) aspi
		GROUP BY aspi.responsible_id
    </select>
</mapper>
