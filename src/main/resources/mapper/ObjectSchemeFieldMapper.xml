<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.agile.infra.mapper.ObjectSchemeFieldMapper">

    <resultMap id="objectSchemeFieldMap" type="io.choerodon.agile.infra.dto.ObjectSchemeFieldDTO">
        <id property="id" column="id"/>
        <id property="code" column="code"/>
        <id property="name" column="name"/>
        <id property="description" column="description"/>
        <id property="fieldType" column="field_type"/>
        <id property="defaultValue" column="default_value"/>
        <id property="extraConfig" column="extra_config"/>
        <id property="system" column="is_system"/>
        <id property="required" column="is_required"/>
        <id property="context" column="context"/>
        <id property="schemeCode" column="scheme_code"/>
        <id property="fieldTypeName" column="field_type_name"/>
        <id property="projectId" column="project_id"/>
        <id property="organizationId" column="organization_id"/>
        <id property="creationDate" column="creation_date"/>
        <id property="createdBy" column="created_by"/>
        <id property="lastUpdateDate" column="last_update_date"/>
        <id property="lastUpdatedBy" column="last_updated_by"/>
        <id property="objectVersionNumber" column="object_version_number"/>
    </resultMap>

    <delete id="cascadeDelete">
        delete t1.*, t2.*
        from fd_object_scheme_field t1
        left join fd_object_scheme_field_extend t2 on (
            t1.id = t2.field_id
            and t2.organization_id = #{organizationId}
            <if test="projectId != null">
                and t2.project_id = #{projectId}
            </if>
        )
        where t1.id = #{fieldId}
    </delete>

    <select id="listQuery" resultMap="objectSchemeFieldMap">
        SELECT  osf.*,
        flv.name as field_type_name
        FROM fd_object_scheme_field osf
        LEFT JOIN lookup_value flv ON flv.value_code = osf.field_type and flv.type_code = 'field_type'
        WHERE
        (osf.is_system = 1
        OR
        (
            osf.organization_id = #{organizationId}
            AND
            (
                osf.project_id is null
                <if test="projectId != null">
                    OR osf.project_id = #{projectId}
                </if>
            )
            <if test='searchVO.issueTypeList != null and searchVO.issueTypeList != ""'>
            AND osf.id IN (
                SELECT
                osfe.field_id
                FROM
                fd_object_scheme_field_extend osfe
                WHERE
                osfe.field_id = osf.id
                <if test='searchVO.issueTypeList == "agileIssueType"'>
                    AND osfe.issue_type IN ('issue_epic', 'story', 'bug', 'task', 'sub_task')
                </if>
                <if test='searchVO.issueTypeList == "programIssueType"'>
                    AND osfe.issue_type IN ('issue_epic', 'feature')
                </if>
            )
            </if>
        ))
        <if test="searchVO.context != null">
            AND osf.context = #{searchVO.context}
        </if>
        <if test="searchVO.schemeCode != null">
            AND osf.scheme_code = #{searchVO.schemeCode}
        </if>
        <if test="searchVO.name != null">
            AND osf.name = #{searchVO.name}
        </if>
        <if test="searchVO.code != null">
            AND osf.code = #{searchVO.code}
        </if>
        order by osf.id asc
    </select>

    <select id="queryById" resultMap="objectSchemeFieldMap">
        SELECT osf.*,
        flv.name as field_type_name
        FROM fd_object_scheme_field osf
        LEFT JOIN lookup_value flv ON flv.value_code = osf.field_type AND flv.type_code = 'field_type'
        WHERE osf.id = #{fieldId}
    </select>

    <select id="queryByFieldCode" resultMap="objectSchemeFieldMap">
        SELECT
        osf.*,
        flv.NAME AS field_type_name
        FROM
        fd_object_scheme_field osf
        LEFT JOIN lookup_value flv ON flv.value_code = osf.field_type
        AND flv.type_code = 'field_type'
        WHERE
        (
        osf.is_system = 0
        AND ( osf.organization_id = #{organizationId}
        AND osf.project_id IS NULL
        <if test="projectId != null">
            OR osf.project_id = #{projectId}
        </if>))
        AND osf.code = #{fieldCode}
    </select>

    <select id="queryByFieldCodeList" resultMap="objectSchemeFieldMap">
        SELECT
        osf.*,
        flv.NAME AS field_type_name
        FROM
        fd_object_scheme_field osf
        LEFT JOIN lookup_value flv ON flv.value_code = osf.field_type
        AND flv.type_code = 'field_type'
        WHERE
        (
        osf.is_system = 0
        AND ( osf.organization_id = #{organizationId}
        AND osf.project_id IS NULL
        <if test="projectId != null">
            OR osf.project_id = #{projectId}
        </if>))
        AND osf.code IN
        <foreach collection="fieldCodeList" item="fieldCode" separator="," open="(" close=")">
            #{fieldCode}
        </foreach>
    </select>

    <resultMap id="objectSchemeFieldDetailMap" type="io.choerodon.agile.api.vo.ObjectSchemeFieldDetailVO">
        <id property="id" column="id"/>
        <id property="code" column="code"/>
        <id property="name" column="name"/>
        <id property="fieldType" column="field_type"/>
        <id property="fieldTypeName" column="field_type_name"/>
        <id property="required" column="required"/>
        <id property="system" column="is_system"/>
        <id property="extraConfig" column="extra_config"/>
        <collection property="fieldOptions" notNullColumn="ffo_id"  ofType="io.choerodon.agile.api.vo.FieldOptionVO">
            <id property="id" column="ffo_id"/>
            <result property="fieldId" column="ffo_field_id"/>
            <result property="code" column="ffo_code"/>
            <result property="value" column="ffo_value"/>
            <result property="enabled" column="ffo_enabled"/>
        </collection>
    </resultMap>

    <select id="selectFieldsWithOptionals" resultMap="objectSchemeFieldDetailMap">
        select
            t1.id,
            t1.code,
            t1.name,
            t1.field_type,
            t1.is_system,
            t1.extra_config,
            flv.name as field_type_name,
            t2.is_required as required,
            ffo.id as ffo_id,
            ffo.field_id as ffo_field_id,
            ffo.code as ffo_code,
            ffo.value as ffo_value,
            ffo.is_enabled as ffo_enabled
        from fd_object_scheme_field t1
        join (
            <include refid="selectExtendField"/>
        ) t2 on t1.id = t2.field_id
        left join lookup_value flv on flv.value_code = t1.field_type and flv.type_code = 'field_type'
        left join fd_field_option ffo on t1.id = ffo.field_id
        order by t1.id desc
    </select>

    <select id="selectCustomFieldList" resultMap="objectSchemeFieldDetailMap">
        SELECT
            osf.id,
            osf.code,
            osf.name,
            osf.field_type,
            osf.extra_config,
            flv.name as field_type_name,
            ffo.id as ffo_id,
            ffo.field_id as ffo_field_id,
            ffo.code as ffo_code,
            ffo.value as ffo_value,
            ffo.is_enabled as ffo_enabled
        FROM fd_object_scheme_field osf
        LEFT JOIN lookup_value flv ON flv.value_code = osf.field_type and flv.type_code = 'field_type'
        LEFT JOIN fd_field_option ffo ON osf.id = ffo.field_id
        WHERE
        osf.organization_id = #{organizationId}
        AND
        (osf.project_id = #{projectId} OR osf.project_id IS NULL)
        <if test='issueTypeList != null and issueTypeList != ""'>
        AND osf.id in (
            SELECT osfe.field_id
            FROM fd_object_scheme_field_extend osfe
            WHERE osfe.field_id = osf.id
            <if test='issueTypeList == "agileIssueType"'>
                AND osfe.issue_type IN ('issue_epic', 'story', 'bug', 'task', 'sub_task')
            </if>
            <if test='issueTypeList == "programIssueType" '>
                AND osfe.issue_type IN ('issue_epic', 'feature')
            </if>
            <if test='issueTypeList == "backlogIssueType" '>
                AND osfe.issue_type IN ('backlog')
            </if>
            )
        </if>
        order by osf.id DESC, ffo.sequence ASC
    </select>

    <select id="selectByExtendIds" resultType="io.choerodon.agile.infra.dto.ObjectSchemeFieldDTO">
        select *
        from fd_object_scheme_field t2
        join (
            select distinct field_id from fd_object_scheme_field_extend t1
            where t1.id in
            <foreach collection="extendIds" item="id" index="index" separator="," open="(" close=")">
                #{id}
            </foreach>
        ) t3 on t2.id = t3.field_id
    </select>

    <resultMap id="objectSchemeFieldWithExtends" type="io.choerodon.agile.infra.dto.ObjectSchemeFieldDTO">
        <id property="id" column="id"/>
        <result property="code" column="code"/>
        <result property="defaultValue" column="default_value"/>
        <result property="description" column="description"/>
        <result property="fieldType" column="field_type"/>
        <result property="fieldTypeName" column="field_type_name"/>
        <result property="name" column="name"/>
        <result property="objectVersionNumber" column="object_version_number"/>
        <result property="organizationId" column="organization_id"/>
        <result property="projectId" column="project_id"/>
        <result property="system" column="is_system"/>
        <result property="required" column="is_required"/>
        <result property="extraConfig" column="extra_config"/>
        <result property="createdLevel" column="created_level"/>
        <collection property="extendFields" ofType="io.choerodon.agile.infra.dto.ObjectSchemeFieldExtendDTO">
            <id property="id" column="extend_id"/>
            <result property="issueType" column="extend_issue_type"/>
            <result property="issueTypeName" column="extend_issue_type_name"/>
            <result property="required" column="extend_field_required"/>
            <result property="issueTypeId" column="extend_issue_type_id"/>
        </collection>
    </resultMap>

    <select id="selectByOptions" resultMap="objectSchemeFieldWithExtends">
        select
            t4.id,
            t4.code,
            t4.default_value,
            t4.description,
            t4.is_required,
            t4.field_type,
            flv.name as field_type_name,
            t4.name,
            t4.object_version_number,
            t4.organization_id,
            t4.project_id,
            t4.is_system,
            t4.extra_config,
            case
                when t4.organization_id = 0 then 'system'
                when t4.organization_id != 0 and t4.project_id is null then 'organization'
                else 'project'
            end as created_level,
            t5.id as extend_id,
            fit.type_code as extend_issue_type,
            fit.name as extend_issue_type_name,
            t5.is_required as extend_field_required,
            t5.issue_type_id as extend_issue_type_id
        from fd_object_scheme_field t4
        join (
            <include refid="selectExtendField"/>
        ) t5 on t4.id = t5.field_id
        left join fd_issue_type fit on (fit.organization_id = #{organizationId} and t5.issue_type_id = fit.id)
        left join lookup_value flv on flv.value_code = t4.field_type and flv.type_code = 'field_type'
        where 1=1
        <if test="fieldId != null">
            and t4.id = #{fieldId}
        </if>
        <if test="schemeCode != null">
            and t4.scheme_code = #{schemeCode}
        </if>
        <if test="schemeCode == null">
            and t4.scheme_code = 'agile_issue'
        </if>
        order by t4.is_system desc, t4.id asc
    </select>

    <sql id="selectExtendField">
        select
            t1.id,
            t1.field_id,
            t1.issue_type_id,
            t1.is_required,
            t1.default_value
        from fd_object_scheme_field_extend t1
        where t1.organization_id = #{organizationId}
        and t1.project_id is null
        <if test="issueTypeId != null">
            and t1.issue_type_id = #{issueTypeId}
        </if>
        <if test="issueTypes != null and issueTypes.size > 0">
            and t1.issue_type in
            <foreach collection="issueTypes" open="(" close=")" separator="," item="issueType">
                #{issueType}
            </foreach>
        </if>
        <if test="projectId != null">
            and t1.field_id not in (
            select t3.field_id
            from fd_object_scheme_field_extend t3
            where t3.organization_id = #{organizationId}
            and t3.project_id = #{projectId}
            <if test="issueTypeId != null">
                and t3.issue_type_id = #{issueTypeId}
            </if>
            <if test="issueTypes != null and issueTypes.size > 0">
                and t3.issue_type in
                <foreach collection="issueTypes" open="(" close=")" separator="," item="issueType">
                    #{issueType}
                </foreach>
            </if>
            )
            union
            select
            t2.id,
            t2.field_id,
            t2.issue_type_id,
            t2.is_required,
            t2.default_value
            from fd_object_scheme_field_extend t2
            where t2.organization_id = #{organizationId}
            and t2.project_id = #{projectId}
            <if test="issueTypeId != null">
                and t2.issue_type_id = #{issueTypeId}
            </if>
            <if test="issueTypes != null and issueTypes.size > 0">
                and t2.issue_type in
                <foreach collection="issueTypes" open="(" close=")" separator="," item="issueType">
                    #{issueType}
                </foreach>
            </if>
        </if>
    </sql>

    <select id="selectMemberByOptions" resultType="io.choerodon.agile.infra.dto.ObjectSchemeFieldDTO">
        SELECT
            t4.id,
            t4.code,
            t4.field_type,
            flv.name as field_type_name,
            t4.name,
            t4.object_version_number,
            t4.organization_id,
            t4.project_id,
            t4.is_system
        FROM fd_object_scheme_field t4
        JOIN (<include refid="selectExtendField"/>) t5 ON t4.id = t5.field_id
        LEFT JOIN fd_issue_type fit on (fit.organization_id = #{organizationId} and t5.issue_type_id = fit.id)
        LEFT JOIN lookup_value flv on flv.value_code = t4.field_type and flv.type_code = 'field_type'
        WHERE
            t4.field_type in ('member','multiMember')
        AND t4.is_system = 0
        <if test="schemeCode != null">
            AND t4.scheme_code = #{schemeCode}
        </if>
        <if test="schemeCode == null">
            AND t4.scheme_code = 'agile_issue'
        </if>
        <if test="issueTypeId != null">
            AND t5.issue_type_id = #{issueTypeId}
        </if>
        <if test="fieldCodeList != null and fieldCodeList.size > 0">
            AND t4.code IN
                <foreach collection="fieldCodeList" open="(" close=")" separator="," item="fieldCode">
                    #{fieldCode}
                </foreach>
        </if>
    </select>

    <resultMap id="objectSchemeFieldWithPages" type="io.choerodon.agile.infra.dto.ObjectSchemeFieldDTO">
        <id property="id" column="id"/>
        <result property="required" column="is_required"/>
        <result property="context" column="context"/>
        <result property="organizationId" column="organization_id"/>
        <result property="projectId" column="project_id"/>
        <result property="code" column="code"/>
        <collection property="pages" ofType="io.choerodon.agile.infra.dto.PageFieldDTO">
            <id property="id" column="page_field_id"/>
            <result property="pageId" column="page_id"/>
            <result property="display" column="is_display"/>
            <result property="rank" column="rank"/>
            <result property="projectId" column="page_project_id"/>
            <result property="organizationId" column="page_organization_id"/>
        </collection>
    </resultMap>

    <select id="selectFieldsWithPages" resultMap="objectSchemeFieldWithPages">
        select
        t1.id,
        t1.is_required,
        t1.context,
        t1.project_id,
        t1.organization_id,
        t1.code,
        t2.id as page_field_id,
        t2.page_id,
        t2.is_display,
        t2.rank,
        t2.project_id as page_project_id,
        t2.organization_id as page_organization_id
        from fd_object_scheme_field t1
        left join fd_page_field t2 on t1.id = t2.field_id
        where t1.scheme_code = #{objectSchemeField.schemeCode}
        and t1.is_system = #{objectSchemeField.system}
    </select>

    <select id="selectFieldsByFieldCodes" resultMap="objectSchemeFieldWithExtends">
        select
            t1.id,
            t1.code,
            t1.name,
            t1.field_type,
            t1.is_system,
            t1.extra_config,
            t1.is_required,
            flv.name as field_type_name,
            t1.is_required as required,
            ffo.id as ffo_id,
            ffo.field_id as ffo_field_id,
            ffo.code as ffo_code,
            ffo.value as ffo_value,
            ffo.is_enabled as ffo_enabled
        from fd_object_scheme_field t1
        left join lookup_value flv on flv.value_code = t1.field_type and flv.type_code = 'field_type'
        left join fd_field_option ffo on t1.id = ffo.field_id
        where t1.code in
        <foreach collection="fieldCodes" item="fieldCode" open="(" close=")" separator=",">
           #{fieldCode}
        </foreach>
    </select>

    <select id="selectNotSyncField" resultMap="objectSchemeFieldWithExtends">
        select
            fosf.id,
            fosf.code,
            fosf.default_value,
            fosf.description,
            fosf.field_type,
            flv.name as field_type_name,
            fosf.name,
            fosf.object_version_number,
            fosf.organization_id,
            fosf.project_id,
            fosf.is_system,
            fosf.is_required,
            fosf.extra_config,
            'system' as created_level
        from fd_object_scheme_field fosf
        left join lookup_value flv on flv.value_code = fosf.field_type and flv.type_code = 'field_type'
        where
        fosf.organization_id = 0
        AND fosf.project_id = 0
        AND fosf.is_system = 1
        AND fosf.id NOT IN
        <foreach collection="systemFieldIds" item="systemFieldId" open="(" close=")" separator=",">
           #{systemFieldId}
        </foreach>
        <if test=" includeBacklogSystemField != true ">
            AND fosf.context != 'backlog'
        </if>
    </select>

    <select id="selectNotSyncFieldByFieldConfig" resultMap="objectSchemeFieldWithExtends">
        select
        fosf.id,
        fosf.code,
        fosf.default_value,
        fosf.description,
        fosf.field_type,
        flv.name as field_type_name,
        fosf.name,
        fosf.object_version_number,
        fosf.organization_id,
        fosf.project_id,
        fosf.is_system,
        fosf.is_required,
        fosf.extra_config,
        'system' as created_level
        from fd_object_scheme_field fosf
        left join lookup_value flv on flv.value_code = fosf.field_type and flv.type_code = 'field_type'
        where fosf.organization_id = 0
        and fosf.project_id = 0
        and fosf.is_system = 1
        and fosf.id not in (
            select
            t1.field_id
            from fd_object_scheme_field_extend t1
            where t1.organization_id = #{organizationId}
            and t1.project_id is null
            <if test="issueTypeId != null">
                and t1.issue_type_id = #{issueTypeId}
            </if>
            <if test="projectId != null">
                and t1.field_id not in (
                select t3.field_id
                from fd_object_scheme_field_extend t3
                where t3.organization_id = #{organizationId}
                and t3.project_id = #{projectId}
                <if test="issueTypeId != null">
                    and t3.issue_type_id = #{issueTypeId}
                </if>
                )
                union
                select
                t2.field_id
                from fd_object_scheme_field_extend t2
                where t2.organization_id = #{organizationId}
                and t2.project_id = #{projectId}
                <if test="issueTypeId != null">
                    and t2.issue_type_id = #{issueTypeId}
                </if>
            </if>
        )
    </select>

    <select id="filterNotExistFields" resultType="java.lang.Long">
         select
           id
         from fd_object_scheme_field
         where id in
         <foreach collection="fieldIds" item="fieldId" open="(" close=")" separator=",">
             #{fieldId}
         </foreach>
    </select>

    <select id="selectCustomFieldListWithOutOption" resultType="io.choerodon.agile.api.vo.ObjectSchemeFieldDetailVO">
        SELECT
            osf.id,
            osf.code,
            osf.name,
            osf.field_type,
            osf.extra_config,
            flv.name as field_type_name
        FROM fd_object_scheme_field osf
        LEFT JOIN lookup_value flv ON flv.value_code = osf.field_type and flv.type_code = 'field_type'
        WHERE
            osf.organization_id = #{organizationId}
        AND
            (osf.project_id = #{projectId} OR osf.project_id IS NULL)
            <if test='issueTypeList != null and issueTypeList != ""'>
                AND osf.id in (
                SELECT osfe.field_id
                FROM fd_object_scheme_field_extend osfe
                WHERE osfe.field_id = osf.id
                <if test='issueTypeList == "agileIssueType"'>
                    AND osfe.issue_type IN ('issue_epic', 'story', 'bug', 'task', 'sub_task')
                </if>
                <if test='issueTypeList == "programIssueType" '>
                    AND osfe.issue_type IN ('issue_epic', 'feature')
                </if>
                <if test='issueTypeList == "backlogIssueType" '>
                    AND osfe.issue_type IN ('backlog')
                </if>
                )
            </if>
        ORDER BY osf.id DESC
    </select>
</mapper>
