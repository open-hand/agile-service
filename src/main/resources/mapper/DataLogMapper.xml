<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.choerodon.agile.infra.mapper.DataLogMapper">

    <select id="selectByIssueId" resultType="io.choerodon.agile.infra.dto.DataLogDTO">
        SELECT
            adl.*
        FROM
            agile_data_log adl
        WHERE
            adl.project_id = #{projectId}
        AND adl.issue_id = #{issueId}
        ORDER BY
            adl.log_id DESC,
            adl.created_by
    </select>

    <select id="selectLastWorkLogById" resultType="io.choerodon.agile.infra.dto.DataLogDTO">
        SELECT
            *
        FROM
            agile_data_log
        WHERE
            project_id = #{projectId}
        AND issue_id = #{issueId}
        AND field = #{field}
        ORDER BY
            log_id DESC
        LIMIT 1
    </select>

    <insert id="batchCreateStatusLogByIssueDOS">
        INSERT INTO agile_data_log(project_id,field,old_value,old_string,new_value,new_string,issue_id,created_by)
        values
        <choose>
            <when test="completed !=null and completed">
                <foreach collection="issueDTOS" item="issueDTO" index="index" separator=",">
                    (#{projectId} , 'resolution' ,null ,null,#{statusMapVO.id} ,
                    #{statusMapVO.name} ,#{issueDTO.issueId},#{userId})
                </foreach>
            </when>
            <otherwise>
                <foreach collection="issueDTOS" item="issueDTO" index="index" separator=",">
                    (#{projectId} , 'resolution' ,#{statusMapVO.id} , #{statusMapVO.name},
                    null ,null ,#{issueDTO.issueId},#{userId})
                </foreach>
            </otherwise>
        </choose>
    </insert>

    <insert id="batchCreateChangeStatusLogByIssueDOS">
        INSERT INTO agile_data_log(project_id,field,old_value,old_string,new_value,new_string,issue_id,created_by)
        values
        <foreach collection="issueDTOS" item="issueDTO" index="index" separator=",">
            (#{projectId} , 'status' ,#{oldStatus.id} ,#{oldStatus.name},#{newStatus.id} ,
            #{newStatus.name} ,#{issueDTO.issueId},#{userId})
        </foreach>
    </insert>

    <insert id="batchCreateVersionDataLog">
        INSERT INTO agile_data_log(project_id,field,old_value,old_string,new_value,new_string,issue_id,created_by)
        values
        <foreach collection="issueIds" item="issueId" index="index" separator=",">
            (#{projectId} , 'Fix Version' ,null ,null,#{productVersionDTO.versionId} ,
            #{productVersionDTO.name} ,#{issueId},#{userId})
        </foreach>
    </insert>

    <delete id="batchDeleteErrorDataLog">
        delete from agile_data_log where log_id in
        <foreach collection="dataLogIds" item="logId"
                 open="(" close=")" separator=",">
            #{logId}
        </foreach>
    </delete>

    <update id="batchUpdateErrorDataLog">
        <foreach collection="dataLogStatusChangeDTOS" item="dataLogStatusChangeDTO" open="" close="" separator=";">
            update agile_data_log set new_value = #{dataLogStatusChangeDTO.newValue} where log_id =
            #{dataLogStatusChangeDTO.logId}
        </foreach>
    </update>

    <insert id="batchCreateChangePriorityLogByIssueDOs">
        INSERT INTO agile_data_log(project_id,field,old_value,old_string,new_value,new_string,issue_id,created_by)
        values
        <foreach collection="issueDTOS" item="issueDTO" index="index" separator=",">
            (#{issueDTO.projectId} , 'priority' ,null ,#{oldPriorityName},null ,
            #{newPriorityName} ,#{issueDTO.issueId},#{userId})
        </foreach>
    </insert>

    <select id="queryListByProjectId" resultType="io.choerodon.agile.api.vo.DataLogFixVO">
        SELECT
          adl.*
        FROM
          agile_data_log adl
        WHERE adl.project_id = #{projectId}
        AND adl.issue_id IN (
            SELECT
                ai.issue_id
            FROM
                agile_issue ai
            WHERE
                ai.project_id = #{projectId}
            AND apply_type = 'test'
            AND ai.type_code IN (
                'issue_test',
                'issue_auto_test'
            )
        )
        AND adl.field IN ('summary', 'description', 'Attachment')
    </select>

    <select id="selectResolutionIssueBySprint" resultType="io.choerodon.agile.infra.dto.DataLogDTO">
        SELECT
            adl.log_id,
            adl.new_value,
            adl.creation_date,
            adl.created_by,
            adl.issue_id
        FROM
            agile_data_log adl
            INNER JOIN agile_issue ai on ai.issue_id = adl.issue_id
            INNER JOIN agile_issue_status ais ON ais.status_id = ai.status_id and ais.project_id = ai.project_id and ais.is_completed = 1
        WHERE
        adl.project_id = #{projectId}
        AND adl.issue_id IN
        <foreach collection="issueIdList" open="(" close=")" item="issueId" separator=",">
            #{issueId}
        </foreach>
        AND field = #{field}
        <if test="field == 'resolution'">
          AND adl.creation_date >= #{startDate}
        </if>
        AND adl.creation_date &lt;= #{endDate}
        AND adl.new_value IS NOT NULL
    </select>

    <update id="updateProject">
        update agile_data_log set project_id = #{targetProjectId}
        where project_id = #{projectId}
        AND issue_id = #{issueId}
    </update>

    <insert id="batchCreateDataLog">
        INSERT INTO agile_data_log(project_id,field,old_value,old_string,new_value,new_string,issue_id,created_by,last_updated_by)
        values
        <foreach collection="dataLogList" item="dataLog" index="index" separator=",">
            (#{dataLog.projectId} , #{dataLog.field} ,#{dataLog.oldValue} ,#{dataLog.oldString},#{dataLog.newValue} ,
            #{dataLog.newString} ,#{dataLog.issueId},#{userId},#{userId})
        </foreach>
    </insert>

    <select id="listIssueDataLogByProjectId" resultType="io.choerodon.agile.api.vo.business.AllDataLogVO">
        SELECT
            adl.log_id,
            adl.project_id,
            adl.field,
            adl.field AS field_name,
            adl.old_value,
            adl.old_string,
            adl.new_value,
            adl.new_string,
            adl.issue_id instance_id,
            'agile_issue' AS log_type,
            adl.created_by,
            adl.creation_date,
            0 AS is_cus_log
        FROM agile_data_log adl
        WHERE adl.project_id = #{projectId}
        <if test="dataLogQueryVO != null">
            <if test="dataLogQueryVO.createdByIds != null and dataLogQueryVO.createdByIds.size() != 0">
                AND adl.created_by IN
                <foreach collection="dataLogQueryVO.createdByIds" item="createdBy" open="(" separator=","
                         close=")">
                    #{createdBy}
                </foreach>
            </if>
            <if test="dataLogQueryVO.startDate != null">
                AND adl.creation_date &gt;= #{dataLogQueryVO.startDate}
            </if>
            <if test="dataLogQueryVO.endDate != null">
                AND adl.creation_date &lt;= #{dataLogQueryVO.endDate}
            </if>
            <if test="dataLogQueryVO.typeIds != null and dataLogQueryVO.typeIds.size() != 0">
                AND adl.issue_id IN (
                SELECT issue_id FROM agile_issue ai
                WHERE ai.issue_type_id IN
                <foreach collection="dataLogQueryVO.typeIds" item="typeId" open="(" separator=","
                         close=")">
                    #{typeId}
                </foreach>)
            </if>
        </if>
    </select>
</mapper>