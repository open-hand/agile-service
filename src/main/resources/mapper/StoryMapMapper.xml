<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.choerodon.agile.infra.mapper.StoryMapMapper">

    <select id="selectEpicIdsByProject" resultType="java.lang.Long">
        select ai1.issue_id from (
            select ai.issue_id,
            CONVERT(ai.issue_num,UNSIGNED) as issue_num
            from agile_issue ai
            where ai.project_id = #{projectId}
            and ai.type_code = 'issue_epic'
            <if test="searchVO != null">
                <if test="searchVO.otherArgs != null">
                    <if test="searchVO.otherArgs.epic != null and searchVO.otherArgs.epic.size > 0">
                        and ai.issue_id in
                        <foreach collection="searchVO.otherArgs.epic" item="id" open="(" separator=","
                                 close=")">
                            #{id}
                        </foreach>
                    </if>
                </if>
            </if>
        ) ai1
        order by ai1.issue_num desc
    </select>

    <resultMap id="epicWithInfoListMap" type="io.choerodon.agile.infra.dto.EpicWithInfoDTO">
        <id column="ai_issue_id" property="issueId"/>
        <id column="ai_issue_num" property="issueNum"/>
        <id column="ai_type_code" property="typeCode"/>
        <id column="ai_summary" property="summary"/>
        <id column="ai_epic_name" property="epicName"/>
        <!--<id column="ai_program_id" property="programId"/>-->
        <id column="ar_rank" property="epicRank"/>
        <id column="ar_object_version_number" property="epicRankObjectVersionNumber"/>
        <id column="epic_object_version_number" property="objectVersionNumber"/>
        <association property="statusVO" javaType="io.choerodon.agile.api.vo.StatusVO">
            <id property="id" column="status_id"/>
            <result property="name" column="status_name"/>
            <result property="code" column="status_code"/>
            <result property="completed" column="status_completed"/>
            <result property="type" column="status_type"/>
        </association>
    </resultMap>

    <select id="selectEpicList" resultMap="epicWithInfoListMap">
        select
            ai.issue_id as ai_issue_id,
            CONVERT(ai.issue_num,UNSIGNED) as issue_num_convert,
            IF(ai.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai.issue_num)) as ai_issue_num,
            ai.type_code as ai_type_code,
            ai.summary as ai_summary,
            ai.epic_name as ai_epic_name,
            ai.object_version_number as epic_object_version_number,
            ar.rank as ar_rank,
            ar.object_version_number as ar_object_version_number,
            ais.name as status_name,
            ai.status_id as status_id,
            ais.is_completed as status_completed,
            fs.type as status_type
        from agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        left join agile_rank ar on ar.project_id = #{projectId} and ai.issue_id = ar.issue_id and ar.type = 'epic'
        LEFT JOIN agile_issue_status ais on ais.project_id = ai.project_id and ais.status_id = ai.status_id
        LEFT JOIN fd_status fs on fs.id = ais.status_id
        where
              ai.project_id = #{projectId}
          AND ai.issue_id in
        <foreach collection="epicIds" item="epicId" open="(" separator=","
                 close=")">
            #{epicId}
        </foreach>
        order by issue_num_convert desc
    </select>

    <resultMap id="storyListMap" type="io.choerodon.agile.infra.dto.business.StoryMapStoryDTO">
        <id column="ai_issue_id" property="issueId"/>
        <id column="ai_issue_num" property="issueNum"/>
        <id column="ai_summary" property="summary"/>
        <id column="ai_epic_id" property="epicId"/>
        <!--<id column="ai_feature_id" property="featureId"/>-->
        <id column="ai_issue_type_id" property="issueTypeId"/>
        <id column="ai_status_id" property="statusId"/>
        <id column="ai_completed" property="completed"/>

        <association property="statusVO" javaType="io.choerodon.agile.api.vo.StatusVO">
            <id property="id" column="status_id"/>
            <result property="name" column="status_name"/>
            <result property="code" column="status_code"/>
            <result property="completed" column="status_completed"/>
            <result property="type" column="status_type"/>
        </association>

        <collection property="storyMapSprintList" autoMapping="true" ofType="io.choerodon.agile.api.vo.SprintNameVO">
            <id property="sprintId" column="sprint_id"/>
            <id property="sprintName" column="sprint_name"/>
        </collection>

        <collection property="storyMapVersionDTOList" autoMapping="true" ofType="io.choerodon.agile.infra.dto.StoryMapVersionDTO">
            <id property="versionId" column="version_version_id"/>
            <id property="name" column="version_name"/>
        </collection>
    </resultMap>

    <select id="selectStoryList" resultMap="storyListMap">
        select * from (
        select
        ai.issue_id as ai_issue_id,
        IF(ai.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai.issue_num)) as ai_issue_num,
        ai.summary as ai_summary,
        ai.epic_id as ai_epic_id,
        version_info.version_id as version_version_id,
        version_info.name as version_name,
        asp.sprint_id as sprint_id,
        asp.sprint_name as sprint_name,
        ais.name as status_name,
        ai.status_id as status_id,
        ais.is_completed as status_completed,
        fs.type as status_type
        from agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        left join (
        select avir.issue_id, apv.version_id, apv.name
        from agile_version_issue_rel avir, agile_product_version apv
        where avir.version_id = apv.version_id and avir.project_id in
        <foreach collection="projectIds" item="projectId" open="(" close=")" separator="," >
            #{projectId}
        </foreach>
        ) version_info on ai.issue_id = version_info.issue_id
        LEFT JOIN agile_issue_sprint_rel aisl on aisl.project_id = ai.project_id and aisl.issue_id = ai.issue_id
        LEFT JOIN agile_sprint asp on asp.project_id = aisl.project_id and asp.sprint_id = aisl.sprint_id
        LEFT JOIN agile_issue_status ais on ais.project_id = ai.project_id and ais.status_id = ai.status_id
        LEFT JOIN fd_status fs on fs.id = ais.status_id
        where ai.project_id in
        <foreach collection="projectIds" item="projectId" open="(" close=")" separator="," >
            #{projectId}
        </foreach>
        and ai.type_code = 'story'
        and (
        <if test="epicIds != null and epicIds.size > 0">
            ai.epic_id in
            <foreach collection="epicIds" item="epicId" open="(" separator=","
                     close=")">
                #{epicId}
            </foreach>
        </if>
        )
        <if test='searchVO.advancedSearchArgs.versionList != null and searchVO.advancedSearchArgs.versionList.size > 0'>
            and ai.issue_id in (
            select avir2.issue_id
            from agile_version_issue_rel avir2
            where avir2.version_id in
            <foreach collection="searchVO.advancedSearchArgs.versionList" item="versionId" open="(" separator=","
                     close=")">
                #{versionId}
            </foreach>
            )
        </if>
        <if test='searchVO.advancedSearchArgs.statusList != null and searchVO.advancedSearchArgs.statusList.size > 0'>
            and ai.status_id in
            <foreach collection="searchVO.advancedSearchArgs.statusList" item="statusId" open="(" separator=","
                     close=")">
                #{statusId}
            </foreach>
        </if>
        <if test="searchVO != null">
            <if test="searchVO.advancedSearchArgs != null">
                <if test="searchVO.advancedSearchArgs.components != null and searchVO.advancedSearchArgs.components.size > 0">
                    AND EXISTS(select 1 from agile_component_issue_rel aic where aic.issue_id = ai.issue_id AND aic.component_id IN
                    <foreach collection="searchVO.advancedSearchArgs.components" open="(" close=")" separator="," item="componentId">
                        #{componentId}
                    </foreach>
                    )
                </if>
                <if test="searchVO.advancedSearchArgs.sprints != null and searchVO.advancedSearchArgs.sprints.size > 0">
                    AND EXISTS(select 1 from agile_issue_sprint_rel aisr where aisr.issue_id = ai.issue_id AND aisr.sprint_id IN
                    <foreach collection="searchVO.advancedSearchArgs.sprints" open="(" close=")" separator="," item="sprintId">
                        #{sprintId}
                    </foreach>
                    )
                </if>
                <if test='searchVO.advancedSearchArgs.isCompleted != null
                        and searchVO.advancedSearchArgs.isCompleted
                        and searchVO.advancedSearchArgs.statusIdList != null
                        and searchVO.advancedSearchArgs.statusIdList.size > 0'>
                    AND ai.status_id IN
                    <foreach collection="searchVO.advancedSearchArgs.statusIdList" item="statusId" separator="," open="(" close=")">
                        #{statusId}
                    </foreach>
                </if>
                <if test='searchVO.advancedSearchArgs.isCompleted != null
                        and !searchVO.advancedSearchArgs.isCompleted
                        and searchVO.advancedSearchArgs.statusIdList != null
                        and searchVO.advancedSearchArgs.statusIdList.size > 0'>
                    AND ai.status_id IN
                    <foreach collection="searchVO.advancedSearchArgs.statusIdList" item="statusId" separator="," open="(" close=")">
                        #{statusId}
                    </foreach>
                </if>
                <if test="searchVO.advancedSearchArgs.prioritys != null and searchVO.advancedSearchArgs.prioritys.size > 0">
                    AND ai.priority_id IN
                    <foreach collection="searchVO.advancedSearchArgs.prioritys" open="(" close=")" separator="," item="priorityId">
                        #{priorityId}
                    </foreach>
                </if>
            </if>
        </if>
        <include refid="io.choerodon.agile.infra.mapper.IssueMapper.explainSearchVO"/>
        <include refid="io.choerodon.agile.infra.mapper.IssueMapper.filterSqlAndAssigneeIds"/>
        ) search
         where 1=1
        <if test='searchVO.searchArgs != null'>
            <if test='searchVO.searchArgs.issueNum != null and searchVO.searchArgs.issueNum != ""'>
                AND search.ai_issue_num LIKE CONCAT(CONCAT('%' ,#{searchVO.searchArgs.issueNum}) ,'%')
            </if>
        </if>
        <if test='searchVO.contents != null and searchVO.contents.size != 0'>
            <foreach collection="searchVO.contents" item="content" index="index">
                AND (search.ai_issue_num LIKE CONCAT(CONCAT('%', #{content}), '%') OR search.ai_summary LIKE
                CONCAT(CONCAT('%',
                #{content}), '%'))
            </foreach>
        </if>
        order by search.ai_issue_id
    </select>

    <resultMap id="storyDemandListMap" type="io.choerodon.agile.infra.dto.business.StoryMapStoryDTO">
        <id column="ai_issue_id" property="issueId"/>
        <id column="ai_issue_num" property="issueNum"/>
        <id column="ai_summary" property="summary"/>
        <id column="ai_epic_id" property="epicId"/>
        <!--<id column="ai_feature_id" property="featureId"/>-->
        <id column="ai_issue_type_id" property="issueTypeId"/>
        <id column="ai_status_id" property="statusId"/>
        <id column="ai_completed" property="completed"/>
        <collection property="storyMapVersionDTOList" autoMapping="true" ofType="io.choerodon.agile.infra.dto.StoryMapVersionDTO">
            <id property="versionId" column="version_version_id"/>
            <id property="name" column="version_name"/>
        </collection>

        <collection property="storyMapSprintList" autoMapping="true" ofType="io.choerodon.agile.api.vo.SprintNameVO">
            <id property="sprintId" column="sprint_id"/>
            <id property="sprintName" column="sprint_name"/>
            <id property="statusCode" column="sprint_status_code"/>
        </collection>
    </resultMap>

    <select id="selectDemandStoryList" resultMap="storyDemandListMap">
        select
        ai.issue_id as ai_issue_id,
        CONVERT(ai.issue_num,UNSIGNED) as issue_num_convert,
        IF(ai.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai.issue_num)) as ai_issue_num,
        ai.summary as ai_summary,
        ai.issue_type_id as ai_issue_type_id,
        ai.status_id as ai_status_id,
        ais.is_completed AS ai_completed,
        version_info.version_id as version_version_id,
        version_info.name as version_name,
        asp.sprint_id as sprint_id,
        asp.sprint_name as sprint_name,
        asp.status_code as sprint_status_code
        from agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_issue_status ais ON ai.status_id = ais.status_id and ais.project_id = #{projectId}
        left join (
            select avir.issue_id, apv.version_id, apv.name
            from agile_version_issue_rel avir, agile_product_version apv
            where avir.version_id = apv.version_id and avir.project_id = #{projectId}
        ) version_info on ai.issue_id = version_info.issue_id
        LEFT JOIN agile_issue_sprint_rel aisl on aisl.project_id = ai.project_id and aisl.issue_id = ai.issue_id
        LEFT JOIN agile_sprint asp on asp.project_id = aisl.project_id and asp.sprint_id = aisl.sprint_id
        where ai.project_id = #{projectId} and ai.type_code = 'story'
        and (ai.epic_id is null or ai.epic_id = 0)
        and (ai.feature_id is null or ai.feature_id = 0)
        <if test="searchVO.searchArgs != null">
            <if test='searchVO.searchArgs.assigneeId != null and searchVO.searchArgs.assigneeId != "" '>
                AND ai.assignee_id = #{searchVO.searchArgs.assigneeId}
            </if>
        </if>
        <if test='searchVO.advancedSearchArgs.versionList != null and searchVO.advancedSearchArgs.versionList.size > 0'>
            and (ai.issue_id in (
            select avir2.issue_id
            from agile_version_issue_rel avir2
            where avir2.version_id in
            <foreach collection="searchVO.advancedSearchArgs.versionList" item="versionId" open="(" separator=","
                     close=")">
                #{versionId}
            </foreach>
            )  <if test="searchVO.advancedSearchArgs.versionListNull != null and searchVO.advancedSearchArgs.versionListNull == true">
            or version_info.version_id is null
             </if>)
        </if>
        <if test='searchVO.advancedSearchArgs.statusList != null and searchVO.advancedSearchArgs.statusList.size > 0'>
            and ai.status_id in
            <foreach collection="searchVO.advancedSearchArgs.statusList" item="statusId" open="(" separator=","
                     close=")">
                #{statusId}
            </foreach>
        </if>
        order by issue_num_convert desc
    </select>

    <select id="countEpicProgress" resultType="io.choerodon.agile.api.vo.IssueProgressVO">
        select
          ai.epic_id as id,
          COUNT(case when ais.is_completed != 1 then ai.issue_id end) as unCompletedCount,
          COUNT(case when ais.is_completed = 1 then ai.issue_id end) as completedCount,
          COUNT(*) as totalCount
          from (
              (
                select ai1.issue_id,ai1.epic_id,ai1.status_id from agile_issue ai1
                where
                ai1.project_id = #{projectId}
                and ai1.type_code = 'story'
                and ai1.epic_id in
                <foreach collection="epicIds" item="epicId" open="(" close=")" separator=",">
                   #{epicId}
                </foreach>
              )
              union all (
                select subt.issue_id,story.epic_id as epic_id,subt.status_id from agile_issue subt
                LEFT JOIN agile_issue story on story.issue_id = subt.parent_issue_id
                where subt.project_id = #{projectId}
                and subt.type_code = 'sub_task'
                and subt.parent_issue_id in (
                    select ai1.issue_id from agile_issue ai1
                    where
                    ai1.project_id = #{projectId}
                    and ai1.type_code = 'story'
                    and ai1.epic_id in
                    <foreach collection="epicIds" item="epicId" open="(" close=")" separator=",">
                        #{epicId}
                    </foreach>
                 )
               ) union all (
                select bug.issue_id,story.epic_id as epic_id,bug.status_id from agile_issue bug
                LEFT JOIN agile_issue story on story.issue_id = bug.relate_issue_id
                where bug.project_id = #{projectId}
                and bug.type_code = 'bug'
                and bug.relate_issue_id in(
                    select ai1.issue_id from agile_issue ai1
                    where
                    ai1.project_id = #{projectId}
                    and ai1.type_code = 'story'
                    and ai1.epic_id in
                    <foreach collection="epicIds" item="epicId" open="(" close=")" separator=",">
                        #{epicId}
                    </foreach>
                )
               )
           ) ai
        LEFT JOIN agile_issue_status ais on ais.project_id = #{projectId} and ais.status_id = ai.status_id
        group by ai.epic_id
    </select>

    <select id="countStoryProgress" resultType="io.choerodon.agile.api.vo.IssueProgressVO">
        select
          ai.story_id as id,
          COUNT(case when ais.is_completed != 1 then ai.issue_id end) as unCompletedCount,
          COUNT(case when ais.is_completed = 1 then ai.issue_id end) as completedCount,
          COUNT(*) as totalCount
         from (
           (
            select ai1.issue_id,ai1.parent_issue_id as story_id,ai1.status_id from agile_issue ai1
            where ai1.project_id = #{projectId}
            and ai1.type_code = 'sub_task'
            and ai1.parent_issue_id in
            <foreach collection="storyIds" item="storyId" open="(" close=")" separator=",">
                #{storyId}
            </foreach>
           )
           union all
           (
            select ai2.issue_id,ai2.relate_issue_id as story_id,ai2.status_id from agile_issue ai2
            where ai2.project_id = #{projectId}
            and ai2.type_code = 'bug'
            and ai2.relate_issue_id in
            <foreach collection="storyIds" item="storyId" open="(" close=")" separator=",">
                #{storyId}
            </foreach>
           )
        ) ai
        LEFT JOIN agile_issue_status ais on ais.project_id = #{projectId} and ais.status_id = ai.status_id
        group by ai.story_id
    </select>

</mapper>