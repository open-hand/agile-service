<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.choerodon.agile.infra.mapper.WorkHoursMapper">
    <select id="listByProjectIds" resultType="io.choerodon.agile.api.vo.WorkHoursLogVO">
        select
            *
        from
        (
            select
                ai.summary,
                CONVERT(ai.issue_num,SIGNED) as issue_num_convert,
                CONCAT(api.project_code,'-', ai.issue_num) as issue_num,
                ai.status_id,
                ai.issue_type_id,
                awl.work_time,
                awl.project_id,
                awl.created_by as user_id,
                awl.start_date,
                ai.issue_id,
                ai.object_version_number,
                awl.creation_date,
                ai.estimate_time
            from agile_work_log awl
            LEFT JOIN agile_issue ai on ai.issue_id = awl.issue_id
            LEFT JOIN agile_project_info api on api.project_id = ai.project_id
            where awl.project_id in
            <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                #{projectId}
            </foreach>
            <if test="workHoursSearchVO.userIds != null and workHoursSearchVO.userIds.size > 0">
                and awl.created_by in
                <foreach collection="workHoursSearchVO.userIds" item="userId" open="(" close=")" separator=",">
                    #{userId}
                </foreach>
            </if>
            <if test="workHoursSearchVO.startTime != null and workHoursSearchVO.endTime != null">
                and awl.start_date between #{workHoursSearchVO.startTime} and #{workHoursSearchVO.endTime}
            </if>
        ) wl
    </select>

    <select id="listGroupDataByProjectIds" resultType="io.choerodon.agile.api.vo.WorkHoursLogVO">
        select
            wl.summary,
            wl.issue_num_convert,
            SUM(wl.work_time) as work_time,
            wl.project_id,
            wl.user_id,
            wl.start_date,
            wl.issue_id,
            wl.estimate_time
        from
        (
            select
            ai.summary,
            CONVERT(ai.issue_num,SIGNED) as issue_num_convert,
            awl.work_time,
            awl.project_id,
            awl.created_by as user_id,
            DATE_FORMAT(awl.start_date,'%Y-%m-%d') as start_date,
            ai.issue_id,
            ai.estimate_time
            from agile_work_log awl
            JOIN agile_issue ai on ai.issue_id = awl.issue_id
            LEFT JOIN agile_project_info api on api.project_id = ai.project_id
            where awl.project_id in
            <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                #{projectId}
            </foreach>
            <if test="workHoursSearchVO.userIds != null and workHoursSearchVO.userIds.size > 0">
                and awl.created_by in
                <foreach collection="workHoursSearchVO.userIds" item="userId" open="(" close=")" separator=",">
                    #{userId}
                </foreach>
            </if>
            <if test="workHoursSearchVO.startTime != null and workHoursSearchVO.endTime != null">
                and awl.start_date between #{workHoursSearchVO.startTime} and #{workHoursSearchVO.endTime}
            </if>
        ) wl
        group by
            wl.issue_id,
            wl.user_id,
            wl.start_date,
            wl.project_id
        order by wl.start_date
    </select>
    
    <select id="selectUserIds" resultType="java.lang.Long">
        select
         awl.created_by
        from agile_work_log awl
        where awl.project_id in
        <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
            #{projectId}
        </foreach>
        <if test="workHoursSearchVO.startTime != null and workHoursSearchVO.endTime != null">
            and awl.start_date between #{workHoursSearchVO.startTime} and #{workHoursSearchVO.endTime}
        </if>
    </select>

    <select id="queryIssue" resultType="io.choerodon.agile.api.vo.business.IssueVO">
        select * from (
            select
              ai.issue_id,
              CONVERT(ai.issue_num,SIGNED) as issue_num_convert,
              CONCAT(api.project_code,'-', ai.issue_num) as issue_num,
              ai.issue_type_id,
              ai.summary
            from agile_issue ai
            LEFT JOIN agile_project_info api on api.project_id = ai.project_id
            where ai.project_id = #{projectId}
            AND ai.type_code in ('story', 'task', 'sub_task', 'bug')
            <if test="params != null">
                and ai.summary like concat(concat('%', #{params}),'%')
            </if>
        ) aii
        order by aii.issue_num_convert desc
    </select>
</mapper>