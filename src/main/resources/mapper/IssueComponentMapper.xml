<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.choerodon.agile.infra.mapper.IssueComponentMapper">

    <select id="checkNameExist" resultType="java.lang.Boolean">
        SELECT count(aic.component_id)
        FROM
            agile_issue_component aic
        WHERE
            aic.project_id = #{projectId}
            AND aic.name = #{name}
    </select>

    <select id="queryComponentIdByNameAndProjectId" resultType="java.lang.Long">
        SELECT aic.component_id
        FROM
            agile_issue_component aic
        WHERE
            aic.project_id = #{projectId}
            AND aic.name = #{name}
    </select>

    <select id="queryComponentByOption" resultType="io.choerodon.agile.infra.dto.ComponentForListDTO">
        select
        aic.component_id,
        aic.project_id,
        aic.`name`,
        aic.description,
        aic.manager_id,
        aic.default_assignee_role,
        aic.object_version_number,
        aic.sequence,
        case when aa.issue_count is null then 0 else aa.issue_count end as issue_count
        from agile_issue_component aic left join (
        select acir.component_id,count(*) as issue_count from agile_component_issue_rel acir
        LEFT JOIN agile_issue ai ON ai.issue_id = acir.issue_id and ai.project_id = acir.project_id
        where acir.project_id in
        <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
            #{projectId}
        </foreach>
        <if test="noIssueTest">
            AND ai.apply_type != 'test'
        </if>
        GROUP BY
        acir.component_id
        )aa on aic.component_id = aa.component_id
        where aic.project_id in
        <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
            #{projectId}
        </foreach>
        <if test="componentIds != null and componentIds.size() > 0">
            AND aic.component_id in
            <foreach collection="componentIds" item="componentId" open="(" separator="," close=")">
                #{componentId}
            </foreach>
        </if>
        <if test="ignoredComponentIds != null and ignoredComponentIds.size() > 0">
            AND aic.component_id not in
            <foreach collection="ignoredComponentIds" item="ignoredComponentId" open="(" separator="," close=")">
                #{ignoredComponentId}
            </foreach>
        </if>
        <if test='searchArgs != null'>
            <if test='searchArgs.name != null and searchArgs.name != "" '>
                AND aic.name LIKE CONCAT(CONCAT('%' ,#{searchArgs.name}) ,'%')
            </if>
            <if test='searchArgs.description != null and searchArgs.description != ""'>
                AND aic.description LIKE CONCAT(CONCAT('%' ,#{searchArgs.description}) ,'%')
            </if>
        </if>
        <if test='advancedSearchArgs != null'>
            <if test='advancedSearchArgs.defaultAssigneeRole != null and advancedSearchArgs.defaultAssigneeRole.size > 0'>
                AND aic.default_assignee_role IN
                <foreach collection="advancedSearchArgs.defaultAssigneeRole" item="defaultAssigneeRole" open="(" separator="," close=")">
                    #{defaultAssigneeRole}
                </foreach>
            </if>
            <if test='advancedSearchArgs.managerId != null and advancedSearchArgs.managerId.size > 0'>
                AND aic.manager_id IN
                <foreach collection="advancedSearchArgs.managerId" item="managerId" open="(" separator="," close=")">
                    #{managerId}
                </foreach>
            </if>
        </if>
        <if test='contents != null and contents.size != 0'>
            <foreach collection="contents" item="content" index="index">
                AND (aic.name LIKE CONCAT(CONCAT('%', #{content}), '%') OR aic.description LIKE CONCAT(CONCAT('%',#{content}), '%'))
            </foreach>
        </if>
    </select>

    <select id="queryIssuesByComponentId" resultType="io.choerodon.agile.infra.dto.business.IssueDTO">
        SELECT
            *
        FROM
            agile_issue ai,
            agile_component_issue_rel acir
        WHERE
            ai.issue_id = acir.issue_id
        AND acir.component_id = #{componentId}
    </select>

    <select id="queryComponentWithIssueNum" resultType="io.choerodon.agile.infra.dto.ComponentForListDTO">
        select
        aic.component_id,
        aic.project_id,
        aic.`name`,
        aic.description,
        aic.manager_id,
        aic.default_assignee_role,
        aic.object_version_number,
        case when aa.issue_count is null then 0 else aa.issue_count end as issue_count
        from agile_issue_component aic left join (
        select acir.component_id,count(*) as issue_count from agile_component_issue_rel acir
        LEFT JOIN agile_issue ai ON ai.issue_id = acir.issue_id
        where acir.project_id = #{projectId}
        <if test="noIssueTest">
            AND ai.apply_type = 'agile'
        </if>
        GROUP BY
        acir.component_id
        )aa on aic.component_id = aa.component_id
        where project_id = #{projectId}
        <if test="componentId != null">
            AND  aic.component_id != #{componentId}
        </if>
        order by aic.component_id desc
    </select>

    <select id="selectByProjectId" resultType="io.choerodon.agile.infra.dto.IssueComponentDTO">
        select
        aic.component_id,
        aic.name
        from agile_issue_component aic
        where aic.project_id = #{projectId}
        order by aic.component_id desc
    </select>

    <select id="queryMaxRank" resultType="java.lang.String">
        select Max(rank) from agile_issue_component
        where project_id = #{projectId}
        order by rank desc
    </select>

    <select id="querNoRankList" resultType="io.choerodon.agile.infra.dto.IssueComponentDTO">
        select * from agile_issue_component
        where project_id = #{projectId}
        and rank is null
    </select>

    <select id="queryRank" resultType="java.lang.String">
        select rank from agile_issue_component
        where project_id = #{projectId}
        and component_id = #{outsetId}
    </select>

    <select id="queryLeftRank" resultType="java.lang.String">
        select MIN(rank) from agile_issue_component
        where project_id = #{projectId}
        and rank > #{rightRank}
    </select>

    <select id="queryRightRank" resultType="java.lang.String">
        select MAX(rank) from agile_issue_component
        where project_id = #{projectId}
        and rank &lt; #{leftRank}
    </select>

    <update id="updateRank">
        update agile_issue_component set rank = #{issueComponentDTO.rank}
        where project_id = #{projectId}
        and component_id = #{issueComponentDTO.componentId}
    </update>

    <select id="listByIssueIds" resultType="io.choerodon.agile.api.vo.IssueComponentBriefVO">
        select
            acir.issue_id,
            acir.component_id,
            aic.name
        from agile_component_issue_rel acir
        LEFT JOIN agile_issue_component aic ON aic.component_id = acir.component_id
        where acir.project_id in
        <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
            #{projectId}
        </foreach>
        and acir.issue_id in
        <foreach collection="issueIds" item="issueId" separator="," open="(" close=")">
            #{issueId}
        </foreach>
    </select>

</mapper>