<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.agile.infra.mapper.StatusMachineNodeMapper">

    <resultMap id="nodeDeployWithState" type="io.choerodon.agile.infra.dto.StatusMachineNodeDTO">
        <id property="id" column="id"/>
        <result property="stateMachineId" column="state_machine_id"/>
        <result property="statusId" column="status_id"/>
        <result property="positionX" column="position_x"/>
        <result property="positionY" column="position_y"/>
        <result property="width" column="width"/>
        <result property="height" column="height"/>
        <result property="type" column="type"/>
        <result property="rank" column="rank"/>
        <result property="allStatusTransformId" column="all_status_transform_id"/>
        <result property="creationDate" column="creation_date"/>
        <result property="createdBy" column="created_by"/>
        <result property="lastUpdateDate" column="last_update_date"/>
        <result property="lastUpdatedBy" column="last_updated_by"/>
        <result property="objectVersionNumber" column="object_version_number"/>
        <association property="status" javaType="io.choerodon.agile.infra.dto.StatusDTO">
            <id property="id" column="s_id"/>
            <result property="name" column="s_name"/>
            <result property="description" column="s_description"/>
            <result property="type" column="s_type"/>
            <result property="organizationId" column="s_organization_id"/>
            <result property="creationDate" column="s_creation_date"/>
            <result property="createdBy" column="s_created_by"/>
            <result property="lastUpdateDate" column="s_last_update_date"/>
            <result property="lastUpdatedBy" column="s_last_updated_by"/>
            <result property="objectVersionNumber" column="s_object_version_number"/>
        </association>
    </resultMap>

    <select id="queryById" resultType="io.choerodon.agile.infra.dto.StatusMachineNodeDTO">
        SELECT *
        FROM fd_status_machine_node
        WHERE organization_id = #{organizationId}
        and id = #{id}
    </select>

    <select id="getNodeDeployById" resultMap="nodeDeployWithState">
        SELECT
        SMN.*,
        STATE.id as s_id,
        STATE.name as s_name,
        STATE.description as s_description,
        STATE.type as s_type,
        STATE.organization_id as s_organization_id,
        STATE.creation_date as s_creation_date,
        STATE.created_by as s_created_by,
        STATE.last_update_date as s_last_update_date,
        STATE.last_updated_by as s_last_updated_by,
        STATE.object_version_number as s_object_version_number
        FROM fd_status_machine_node SMN
        LEFT JOIN fd_status STATE ON STATE.id = SMN.status_id
        WHERE SMN.id = #{nodeId}
    </select>

    <select id="getNodeDeployByStatusId" resultMap="nodeDeployWithState">
        SELECT
        SMN.*,
        STATE.id as s_id,
        STATE.name as s_name,
        STATE.description as s_description,
        STATE.type as s_type,
        STATE.organization_id as s_organization_id,
        STATE.creation_date as s_creation_date,
        STATE.created_by as s_created_by,
        STATE.last_update_date as s_last_update_date,
        STATE.last_updated_by as s_last_updated_by,
        STATE.object_version_number as s_object_version_number
        FROM fd_status_machine_node SMN
        LEFT JOIN fd_status STATE ON STATE.id = SMN.status_id
        WHERE STATE.id = #{statusId}
        AND SMN.state_machine_id = #{stateMachineId}
    </select>

    <select id="selectByStateMachineId" resultMap="nodeDeployWithState">
        SELECT
        SMN.*,
        STATE.id as s_id,
        STATE.name as s_name,
        STATE.description as s_description,
        STATE.type as s_type,
        STATE.organization_id as s_organization_id,
        STATE.creation_date as s_creation_date,
        STATE.created_by as s_created_by,
        STATE.last_update_date as s_last_update_date,
        STATE.last_updated_by as s_last_updated_by,
        STATE.object_version_number as s_object_version_number
        FROM fd_status_machine_node SMN
        LEFT JOIN fd_status STATE ON STATE.id = SMN.status_id
        WHERE SMN.state_machine_id = #{stateMachineId}
    </select>

    <select id="queryInitByStateMachineIds" resultType="io.choerodon.agile.infra.dto.StatusMachineNodeDTO">
        SELECT
        *
        FROM fd_status_machine_node smn
        where smn.organization_id = #{organizationId} and smn.type = 'node_init' and smn.state_machine_id in
        <foreach collection="stateMachineIds" item="id" open="(" separator=","
                 close=")">
            #{id}
        </foreach>
    </select>

    <select id="checkStateDelete" resultType="java.lang.Long">
        SELECT
        count( SMN.id )
        FROM
        fd_status_machine_node SMN
        LEFT JOIN fd_status_machine SM ON SMN.state_machine_id = SM.id
        WHERE
        SMN.status_id = #{statusId}
        AND SM.organization_id = #{organizationId}
    </select>

    <select id="selectMaxPositionY" resultType="io.choerodon.agile.infra.dto.StatusMachineNodeDTO">
        SELECT *
        FROM fd_status_machine_node
        WHERE position_y = (
            SELECT max(position_y)
            FROM fd_status_machine_node
            WHERE state_machine_id = #{stateMachineId}
        )
        LIMIT 1
    </select>

    <update id="updateAllStatusTransformId">
        UPDATE fd_status_machine_node
        SET all_status_transform_id = #{allStatusTransformId}
        WHERE organization_id = #{organizationId}
        AND id = #{id}
    </update>

    <select id="queryByStateMachineIds" resultType="io.choerodon.agile.infra.dto.StatusMachineNodeDTO">
        SELECT
        *
        FROM fd_status_machine_node smn
        where smn.organization_id = #{organizationId}
        and smn.state_machine_id in
        <foreach collection="stateMachineIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="id">
      insert into fd_status_machine_node(state_machine_id,status_id,type
      ,organization_id,created_by,last_updated_by,rank)
      values
        <foreach collection="list" item="item" separator=",">
            (#{item.stateMachineId},#{item.statusId},#{item.type}
            ,#{item.organizationId},#{item.createdBy},#{item.lastUpdatedBy},#{item.rank})
        </foreach>
    </insert>

    <select id="countIssueTypeByStatusIds" resultType="io.choerodon.agile.infra.dto.IssueCountDTO">
        select
               fsmn.status_id as id,
               fit.name as name,
               fit.id as issue_type_id
        from fd_status_machine_scheme_config fsmsc
        ,fd_status_machine_node fsmn,fd_issue_type fit
        where fsmsc.organization_id = #{organizationId}
        AND fsmsc.scheme_id = #{schemeId}
        AND fsmsc.state_machine_id = fsmn.state_machine_id
        AND fsmn.status_id in
        <foreach collection="statusIds" item="statusId" open="(" close=")" separator=",">
           #{statusId}
        </foreach>
        AND fit.id = fsmsc.issue_type_id
        <if test="applyType == 'agile'">
            AND fit.type_code != 'feature'
        </if>
        AND fit.type_code not in ('issue_auto_test','issue_auto_test')
        AND fsmsc.issue_type_id != 0
        group by fsmn.status_id,fit.name,fit.id
    </select>

    <select id="countStatusIssueTypeScope" resultType="io.choerodon.agile.infra.dto.IssueCountDTO">
        select
        fsmn.status_id as id,
        fit.name as name,
        fit.id as issue_type_id
        from fd_status_machine_scheme_config fsmsc
        ,fd_status_machine_node fsmn,fd_issue_type fit
        where fsmsc.organization_id = #{organizationId}
        AND fsmsc.scheme_id in
        <foreach collection="schemeIds" item="schemeId" open="(" close=")" separator=",">
            #{schemeId}
        </foreach>
        AND fsmsc.state_machine_id = fsmn.state_machine_id
        AND fsmn.status_id in
        <foreach collection="statusIds" item="statusId" open="(" close=")" separator=",">
            #{statusId}
        </foreach>
        AND fit.id = fsmsc.issue_type_id
        <if test="isAgile">
            AND fit.type_code != 'feature'
        </if>
        AND fit.type_code not in ('issue_auto_test','issue_auto_test')
        AND fsmsc.issue_type_id != 0
        group by fsmn.status_id,fit.name,fit.id
    </select>

    <select id="selectStatusIdsByIssueTypeIds" resultType="java.lang.Long">
        select fsmn.status_id
        from fd_status_machine_scheme_config fsmsc
        join fd_status_machine_node fsmn on fsmsc.state_machine_id = fsmn.state_machine_id
        where fsmsc.organization_id = #{organizationId}
        and fsmsc.scheme_id = #{schemeId}
        and fsmsc.issue_type_id in (
            select fit.id
            from fd_issue_type fit
            where fit.id in
            <foreach item="item" index="index" collection="issueTypeIds" open="(" separator="," close=")">
                #{item}
            </foreach>
            <if test="applyType == 'agile'">
                and fit.type_code != 'feature'
            </if>
            and fit.type_code not in ('issue_auto_test','issue_auto_test')
        )
        and fsmn.status_id != 0
    </select>


    <select id="selectInitNode" resultType="io.choerodon.agile.api.vo.StatusMachineSchemeConfigVO">
        select
            fsmsc.state_machine_id,
            fsmsc.issue_type_id,
            fpc.apply_type
        from fd_status_machine_scheme_config fsmsc
        ,fd_status_machine_node fsmn,fd_project_config fpc
        where fsmsc.organization_id = #{organizationId}
        AND fpc.project_id = #{projectId}
        AND fpc.apply_type in
        <foreach collection="applyTypes" item="applyType" open="(" close=")" separator=",">
            #{applyType}
        </foreach>
        AND fpc.scheme_id = fsmsc.scheme_id
        AND fsmsc.state_machine_id = fsmn.state_machine_id
        AND fsmn.status_id = #{statusId}
        AND fsmn.type = 'node_init'
    </select>

    <select id="existByProjectId" resultType="java.lang.Boolean">
        SELECT
           CASE WHEN count(*)  > 0 THEN 1 ELSE 0 END AS result
        FROM fd_status_machine_node fsmn
        JOIN fd_status_machine_scheme_config fsmsc ON fsmsc.state_machine_id = fsmn.state_machine_id
        JOIN fd_project_config fpc ON fsmsc.scheme_id = fpc.scheme_id
        WHERE fpc.project_id = #{projectId}
        AND fsmn.status_id = #{statusId}
        AND fpc.apply_type = #{applyType}
        AND fpc.scheme_type = 'scheme_state_machine'
    </select>

    <select id="selectNullRankNodes" resultType="io.choerodon.agile.infra.dto.StatusMachineNodeDTO">
        select * from fd_status_machine_node fsmn
        where fsmn.organization_id = #{organizationId}
        and fsmn.state_machine_id = #{statusMachineId}
        and fsmn.rank IS NULL
        and fsmn.type != 'node_start'
    </select>

    <select id="queryLeftRank" resultType="java.lang.String">
        select fsmn.rank from fd_status_machine_node fsmn
        where fsmn.organization_id = #{organizationId}
        and fsmn.state_machine_id = #{statusMachineId}
        and fsmn.rank &lt; #{rank}
        order by rank desc
        limit 1
    </select>

    <select id="queryRightRank" resultType="java.lang.String">
        select fsmn.rank from fd_status_machine_node fsmn
        where fsmn.organization_id = #{organizationId}
        and fsmn.state_machine_id = #{statusMachineId}
        and fsmn.rank > #{rank}
        limit 1
    </select>

    <select id="queryMaxRank" resultType="java.lang.String">
        select MAX(fsmn.rank) from fd_status_machine_node fsmn
        where fsmn.organization_id = #{organizationId}
        and fsmn.state_machine_id = #{statusMachineId}
    </select>

    <select id="queryMinRank" resultType="java.lang.String">
        select MIN(fsmn.rank) from fd_status_machine_node fsmn
        where fsmn.organization_id = #{organizationId}
        and fsmn.state_machine_id = #{statusMachineId}
    </select>

    <insert id="migrateStatusMachineNode">
        insert into fd_status_machine_node
        select * from fd_state_machine_node
    </insert>
</mapper>
